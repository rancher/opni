---
{apiVersion: apiextensions.k8s.io/v1, kind: CustomResourceDefinition, metadata: {annotations: {controller-gen.kubebuilder.io/version: v0.11.3}, creationTimestamp: null, name: bootstraptokens.core.opni.io}, spec: {group: core.opni.io, names: {kind: BootstrapToken, listKind: BootstrapTokenList, plural: bootstraptokens, singular: bootstraptoken}, scope: Namespaced, versions: [{name: v1beta1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {metadata: {properties: {capabilities: {items: {properties: {reference: {properties: {id: {type: string}}, type: object}, type: {type: string}}, type: object}, type: array}, labels: {additionalProperties: {type: string}, type: object}, leaseID: {format: int64, type: integer}, resourceVersion: {type: string}, ttl: {format: int64, type: integer}, usageCount: {format: int64, type: integer}}, type: object}, secret: {type: string}, tokenID: {type: string}}, type: object}}, type: object}}, served: true, storage: true}]}}
---
{apiVersion: apiextensions.k8s.io/v1, kind: CustomResourceDefinition, metadata: {annotations: {controller-gen.kubebuilder.io/version: v0.6.0}, creationTimestamp: null, name: clusterflows.logging.opni.io}, spec: {group: logging.opni.io, names: {categories: [logging-all], kind: ClusterFlow, listKind: ClusterFlowList, plural: clusterflows, singular: clusterflow}, scope: Namespaced, versions: [{additionalPrinterColumns: [{jsonPath: .status.active, name: Active, type: boolean}, {jsonPath: .status.problemsCount, name: Problems, type: integer}], name: v1alpha1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {filters: {items: {properties: {concat: {properties: {continuous_line_regexp: {type: string}, flush_interval: {type: integer}, keep_partial_key: {type: boolean}, keep_partial_metadata: {type: string}, key: {type: string}, multiline_end_regexp: {type: string}, multiline_start_regexp: {type: string}, n_lines: {type: integer}, partial_cri_logtag_key: {type: string}, partial_cri_stream_key: {type: string}, partial_key: {type: string}, partial_metadata_format: {type: string}, partial_value: {type: string}, separator: {type: string}, stream_identity_key: {type: string}, timeout_label: {type: string}, use_first_timestamp: {type: boolean}, use_partial_cri_logtag: {type: boolean}, use_partial_metadata: {type: string}}, type: object}, dedot: {properties: {de_dot_nested: {type: boolean}, de_dot_separator: {type: string}}, type: object}, detectExceptions: {properties: {force_line_breaks: {type: boolean}, languages: {items: {type: string}, type: array}, match_tag: {type: string}, max_bytes: {type: integer}, max_lines: {type: integer}, message: {type: string}, multiline_flush_interval: {type: string}, remove_tag_prefix: {type: string}, stream: {type: string}}, type: object}, elasticsearch_genid: {properties: {hash_id_key: {type: string}, hash_type: {type: string}, include_tag_in_seed: {type: boolean}, include_time_in_seed: {type: boolean}, record_keys: {type: string}, separator: {type: string}, use_entire_record: {type: boolean}, use_record_as_seed: {type: boolean}}, type: object}, enhanceK8s: {properties: {api_groups: {items: {type: string}, type: array}, bearer_token_file: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cache_refresh: {type: integer}, cache_refresh_variation: {type: integer}, cache_size: {type: integer}, cache_ttl: {type: integer}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, core_api_versions: {items: {type: string}, type: array}, data_type: {type: string}, in_namespace_path: {items: {type: string}, type: array}, in_pod_path: {items: {type: string}, type: array}, kubernetes_url: {type: string}, secret_dir: {type: string}, ssl_partial_chain: {type: boolean}, verify_ssl: {type: boolean}}, type: object}, geoip: {properties: {backend_library: {type: string}, geoip_2_database: {type: string}, geoip_database: {type: string}, geoip_lookup_keys: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, skip_adding_null_record: {type: boolean}}, type: object}, grep: {properties: {and: {items: {properties: {exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, type: array}, exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, or: {items: {properties: {exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, kube_events_timestamp: {properties: {mapped_time_key: {type: string}, timestamp_fields: {items: {type: string}, type: array}}, type: object}, parser: {properties: {emit_invalid_record_to_error: {type: boolean}, hash_value_field: {type: string}, inject_key_prefix: {type: string}, key_name: {type: string}, parse: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, delimiter: {type: string}, delimiter_pattern: {type: string}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, format_firstline: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, keys: {type: string}, label_delimiter: {type: string}, local_time: {type: boolean}, multiline: {items: {type: string}, type: array}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, patterns: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, local_time: {type: boolean}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, parsers: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, delimiter: {type: string}, delimiter_pattern: {type: string}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, format_firstline: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, keys: {type: string}, label_delimiter: {type: string}, local_time: {type: boolean}, multiline: {items: {type: string}, type: array}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, patterns: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, local_time: {type: boolean}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, remove_key_name_field: {type: boolean}, replace_invalid_sequence: {type: boolean}, reserve_data: {type: boolean}, reserve_time: {type: boolean}}, type: object}, prometheus: {properties: {labels: {additionalProperties: {type: string}, type: object}, metrics: {items: {properties: {buckets: {type: string}, desc: {type: string}, key: {type: string}, labels: {additionalProperties: {type: string}, type: object}, name: {type: string}, type: {type: string}}, required: [desc, name, type], type: object}, type: array}}, type: object}, record_modifier: {properties: {char_encoding: {type: string}, prepare_value: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, remove_keys: {type: string}, replaces: {items: {properties: {expression: {type: string}, key: {type: string}, replace: {type: string}}, required: [expression, key, replace], type: object}, type: array}, whitelist_keys: {type: string}}, type: object}, record_transformer: {properties: {auto_typecast: {type: boolean}, enable_ruby: {type: boolean}, keep_keys: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, remove_keys: {type: string}, renew_record: {type: boolean}, renew_time_key: {type: string}}, type: object}, stdout: {properties: {output_type: {type: string}}, type: object}, sumologic: {properties: {collector_key_name: {type: string}, collector_value: {type: string}, exclude_container_regex: {type: string}, exclude_facility_regex: {type: string}, exclude_host_regex: {type: string}, exclude_namespace_regex: {type: string}, exclude_pod_regex: {type: string}, exclude_priority_regex: {type: string}, exclude_unit_regex: {type: string}, log_format: {type: string}, source_category: {type: string}, source_category_key_name: {type: string}, source_category_prefix: {type: string}, source_category_replace_dash: {type: string}, source_host: {type: string}, source_host_key_name: {type: string}, source_name: {type: string}, source_name_key_name: {type: string}, tracing_annotation_prefix: {type: string}, tracing_container_name: {type: string}, tracing_format: {type: boolean}, tracing_host: {type: string}, tracing_label_prefix: {type: string}, tracing_namespace: {type: string}, tracing_pod: {type: string}, tracing_pod_id: {type: string}}, type: object}, tag_normaliser: {properties: {format: {type: string}, match_tag: {type: string}}, type: object}, throttle: {properties: {group_bucket_limit: {type: integer}, group_bucket_period_s: {type: integer}, group_drop_logs: {type: boolean}, group_key: {type: string}, group_reset_rate_s: {type: integer}, group_warning_delay_s: {type: integer}}, type: object}}, type: object}, type: array}, globalOutputRefs: {items: {type: string}, type: array}, loggingRef: {type: string}, match: {items: {properties: {exclude: {properties: {container_names: {items: {type: string}, type: array}, hosts: {items: {type: string}, type: array}, labels: {additionalProperties: {type: string}, type: object}, namespaces: {items: {type: string}, type: array}}, type: object}, select: {properties: {container_names: {items: {type: string}, type: array}, hosts: {items: {type: string}, type: array}, labels: {additionalProperties: {type: string}, type: object}, namespaces: {items: {type: string}, type: array}}, type: object}}, type: object}, type: array}, outputRefs: {items: {type: string}, type: array}, selectors: {additionalProperties: {type: string}, type: object}}, type: object}, status: {properties: {active: {type: boolean}, problems: {items: {type: string}, type: array}, problemsCount: {type: integer}}, type: object}}, type: object}}, served: true, storage: false, subresources: {status: {}}}, {additionalPrinterColumns: [{jsonPath: .status.active, name: Active, type: boolean}, {jsonPath: .status.problemsCount, name: Problems, type: integer}], name: v1beta1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {filters: {items: {properties: {concat: {properties: {continuous_line_regexp: {type: string}, flush_interval: {type: integer}, keep_partial_key: {type: boolean}, keep_partial_metadata: {type: string}, key: {type: string}, multiline_end_regexp: {type: string}, multiline_start_regexp: {type: string}, n_lines: {type: integer}, partial_cri_logtag_key: {type: string}, partial_cri_stream_key: {type: string}, partial_key: {type: string}, partial_metadata_format: {type: string}, partial_value: {type: string}, separator: {type: string}, stream_identity_key: {type: string}, timeout_label: {type: string}, use_first_timestamp: {type: boolean}, use_partial_cri_logtag: {type: boolean}, use_partial_metadata: {type: string}}, type: object}, dedot: {properties: {de_dot_nested: {type: boolean}, de_dot_separator: {type: string}}, type: object}, detectExceptions: {properties: {force_line_breaks: {type: boolean}, languages: {items: {type: string}, type: array}, match_tag: {type: string}, max_bytes: {type: integer}, max_lines: {type: integer}, message: {type: string}, multiline_flush_interval: {type: string}, remove_tag_prefix: {type: string}, stream: {type: string}}, type: object}, elasticsearch_genid: {properties: {hash_id_key: {type: string}, hash_type: {type: string}, include_tag_in_seed: {type: boolean}, include_time_in_seed: {type: boolean}, record_keys: {type: string}, separator: {type: string}, use_entire_record: {type: boolean}, use_record_as_seed: {type: boolean}}, type: object}, enhanceK8s: {properties: {api_groups: {items: {type: string}, type: array}, bearer_token_file: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cache_refresh: {type: integer}, cache_refresh_variation: {type: integer}, cache_size: {type: integer}, cache_ttl: {type: integer}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, core_api_versions: {items: {type: string}, type: array}, data_type: {type: string}, in_namespace_path: {items: {type: string}, type: array}, in_pod_path: {items: {type: string}, type: array}, kubernetes_url: {type: string}, secret_dir: {type: string}, ssl_partial_chain: {type: boolean}, verify_ssl: {type: boolean}}, type: object}, geoip: {properties: {backend_library: {type: string}, geoip_2_database: {type: string}, geoip_database: {type: string}, geoip_lookup_keys: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, skip_adding_null_record: {type: boolean}}, type: object}, grep: {properties: {and: {items: {properties: {exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, type: array}, exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, or: {items: {properties: {exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, kube_events_timestamp: {properties: {mapped_time_key: {type: string}, timestamp_fields: {items: {type: string}, type: array}}, type: object}, parser: {properties: {emit_invalid_record_to_error: {type: boolean}, hash_value_field: {type: string}, inject_key_prefix: {type: string}, key_name: {type: string}, parse: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, delimiter: {type: string}, delimiter_pattern: {type: string}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, format_firstline: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, keys: {type: string}, label_delimiter: {type: string}, local_time: {type: boolean}, multiline: {items: {type: string}, type: array}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, patterns: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, local_time: {type: boolean}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, parsers: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, delimiter: {type: string}, delimiter_pattern: {type: string}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, format_firstline: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, keys: {type: string}, label_delimiter: {type: string}, local_time: {type: boolean}, multiline: {items: {type: string}, type: array}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, patterns: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, local_time: {type: boolean}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, remove_key_name_field: {type: boolean}, replace_invalid_sequence: {type: boolean}, reserve_data: {type: boolean}, reserve_time: {type: boolean}}, type: object}, prometheus: {properties: {labels: {additionalProperties: {type: string}, type: object}, metrics: {items: {properties: {buckets: {type: string}, desc: {type: string}, key: {type: string}, labels: {additionalProperties: {type: string}, type: object}, name: {type: string}, type: {type: string}}, required: [desc, name, type], type: object}, type: array}}, type: object}, record_modifier: {properties: {char_encoding: {type: string}, prepare_value: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, remove_keys: {type: string}, replaces: {items: {properties: {expression: {type: string}, key: {type: string}, replace: {type: string}}, required: [expression, key, replace], type: object}, type: array}, whitelist_keys: {type: string}}, type: object}, record_transformer: {properties: {auto_typecast: {type: boolean}, enable_ruby: {type: boolean}, keep_keys: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, remove_keys: {type: string}, renew_record: {type: boolean}, renew_time_key: {type: string}}, type: object}, stdout: {properties: {output_type: {type: string}}, type: object}, sumologic: {properties: {collector_key_name: {type: string}, collector_value: {type: string}, exclude_container_regex: {type: string}, exclude_facility_regex: {type: string}, exclude_host_regex: {type: string}, exclude_namespace_regex: {type: string}, exclude_pod_regex: {type: string}, exclude_priority_regex: {type: string}, exclude_unit_regex: {type: string}, log_format: {type: string}, source_category: {type: string}, source_category_key_name: {type: string}, source_category_prefix: {type: string}, source_category_replace_dash: {type: string}, source_host: {type: string}, source_host_key_name: {type: string}, source_name: {type: string}, source_name_key_name: {type: string}, tracing_annotation_prefix: {type: string}, tracing_container_name: {type: string}, tracing_format: {type: boolean}, tracing_host: {type: string}, tracing_label_prefix: {type: string}, tracing_namespace: {type: string}, tracing_pod: {type: string}, tracing_pod_id: {type: string}}, type: object}, tag_normaliser: {properties: {format: {type: string}, match_tag: {type: string}}, type: object}, throttle: {properties: {group_bucket_limit: {type: integer}, group_bucket_period_s: {type: integer}, group_drop_logs: {type: boolean}, group_key: {type: string}, group_reset_rate_s: {type: integer}, group_warning_delay_s: {type: integer}}, type: object}}, type: object}, type: array}, globalOutputRefs: {items: {type: string}, type: array}, loggingRef: {type: string}, match: {items: {properties: {exclude: {properties: {container_names: {items: {type: string}, type: array}, hosts: {items: {type: string}, type: array}, labels: {additionalProperties: {type: string}, type: object}, namespaces: {items: {type: string}, type: array}}, type: object}, select: {properties: {container_names: {items: {type: string}, type: array}, hosts: {items: {type: string}, type: array}, labels: {additionalProperties: {type: string}, type: object}, namespaces: {items: {type: string}, type: array}}, type: object}}, type: object}, type: array}, outputRefs: {items: {type: string}, type: array}, selectors: {additionalProperties: {type: string}, type: object}}, type: object}, status: {properties: {active: {type: boolean}, problems: {items: {type: string}, type: array}, problemsCount: {type: integer}}, type: object}}, type: object}}, served: true, storage: true, subresources: {status: {}}}]}, status: {acceptedNames: {kind: "", plural: ""}, conditions: [], storedVersions: []}}
---
{apiVersion: apiextensions.k8s.io/v1, kind: CustomResourceDefinition, metadata: {annotations: {controller-gen.kubebuilder.io/version: v0.6.0}, creationTimestamp: null, name: clusteroutputs.logging.opni.io}, spec: {group: logging.opni.io, names: {categories: [logging-all], kind: ClusterOutput, listKind: ClusterOutputList, plural: clusteroutputs, singular: clusteroutput}, scope: Namespaced, versions: [{additionalPrinterColumns: [{jsonPath: .status.active, name: Active, type: boolean}, {jsonPath: .status.problemsCount, name: Problems, type: integer}], name: v1alpha1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {awsElasticsearch: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, application_name: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_message_request_threshold: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key_pass: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, content_type: {type: string}, custom_headers: {type: string}, customize_template: {type: string}, data_stream_enable: {type: boolean}, data_stream_ilm_name: {type: string}, data_stream_ilm_policy: {type: string}, data_stream_ilm_policy_overwrite: {type: boolean}, data_stream_name: {type: string}, data_stream_template_name: {type: string}, default_elasticsearch_version: {type: string}, deflector_alias: {type: string}, enable_ilm: {type: boolean}, endpoint: {properties: {access_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, assume_role_arn: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, assume_role_session_name: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, assume_role_web_identity_token_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ecs_container_credentials_relative_uri: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, region: {type: string}, secret_access_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, sts_credentials_region: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, url: {type: string}}, type: object}, exception_backup: {type: boolean}, fail_on_detecting_es_version_retry_exceed: {type: boolean}, fail_on_putting_template_retry_exceed: {type: boolean}, flatten_hashes: {type: boolean}, flatten_hashes_separator: {type: string}, flush_interval: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, host: {type: string}, hosts: {type: string}, http_backend: {type: string}, id_key: {type: string}, ignore_exceptions: {type: string}, ilm_policy: {type: string}, ilm_policy_id: {type: string}, ilm_policy_overwrite: {type: boolean}, include_index_in_url: {type: boolean}, include_tag_key: {type: boolean}, include_timestamp: {type: boolean}, index_date_pattern: {type: string}, index_name: {type: string}, index_prefix: {type: string}, log_es_400_reason: {type: boolean}, logstash_dateformat: {type: string}, logstash_format: {type: boolean}, logstash_prefix: {type: string}, logstash_prefix_separator: {type: string}, max_retry_get_es_version: {type: string}, max_retry_putting_template: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, path: {type: string}, pipeline: {type: string}, port: {type: integer}, prefer_oj_serializer: {type: boolean}, reconnect_on_error: {type: boolean}, reload_after: {type: string}, reload_connections: {type: boolean}, reload_on_failure: {type: boolean}, remove_keys: {type: string}, remove_keys_on_update: {type: string}, remove_keys_on_update_key: {type: string}, request_timeout: {type: string}, resurrect_after: {type: string}, retry_tag: {type: string}, rollover_index: {type: boolean}, routing_key: {type: string}, scheme: {type: string}, slow_flush_log_threshold: {type: string}, sniffer_class_name: {type: string}, ssl_max_version: {type: string}, ssl_min_version: {type: string}, ssl_verify: {type: boolean}, ssl_version: {type: string}, suppress_doc_wrap: {type: boolean}, suppress_type_name: {type: boolean}, tag_key: {type: string}, target_index_key: {type: string}, target_type_key: {type: string}, template_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, template_name: {type: string}, template_overwrite: {type: boolean}, templates: {type: string}, time_key: {type: string}, time_key_format: {type: string}, time_parse_error_tag: {type: string}, time_precision: {type: string}, type_name: {type: string}, unrecoverable_error_types: {type: string}, user: {type: string}, utc_index: {type: boolean}, validate_client_version: {type: boolean}, verify_es_version_at_startup: {type: boolean}, with_transporter_log: {type: boolean}, write_operation: {type: string}}, type: object}, azurestorage: {properties: {auto_create_container: {type: boolean}, azure_container: {type: string}, azure_imds_api_version: {type: string}, azure_object_key_format: {type: string}, azure_storage_access_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, azure_storage_account: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, azure_storage_sas_token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, format: {type: string}, path: {type: string}, slow_flush_log_threshold: {type: string}}, required: [azure_container, azure_storage_account], type: object}, cloudwatch: {properties: {auto_create_stream: {type: boolean}, aws_instance_profile_credentials_retries: {type: integer}, aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sts_role_arn: {type: string}, aws_sts_session_name: {type: string}, aws_use_sts: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, concurrency: {type: integer}, endpoint: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, http_proxy: {type: string}, include_time_key: {type: boolean}, json_handler: {type: string}, localtime: {type: boolean}, log_group_aws_tags: {type: string}, log_group_aws_tags_key: {type: string}, log_group_name: {type: string}, log_group_name_key: {type: string}, log_rejected_request: {type: string}, log_stream_name: {type: string}, log_stream_name_key: {type: string}, max_events_per_batch: {type: integer}, max_message_length: {type: integer}, message_keys: {type: string}, put_log_events_disable_retry_limit: {type: boolean}, put_log_events_retry_limit: {type: integer}, put_log_events_retry_wait: {type: string}, region: {type: string}, remove_log_group_aws_tags_key: {type: string}, remove_log_group_name_key: {type: string}, remove_log_stream_name_key: {type: string}, remove_retention_in_days: {type: string}, retention_in_days: {type: string}, retention_in_days_key: {type: string}, slow_flush_log_threshold: {type: string}, use_tag_as_group: {type: boolean}, use_tag_as_stream: {type: boolean}}, required: [region], type: object}, datadog: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, compression_level: {type: string}, dd_hostname: {type: string}, dd_source: {type: string}, dd_sourcecategory: {type: string}, dd_tags: {type: string}, host: {type: string}, include_tag_key: {type: boolean}, max_backoff: {type: string}, max_retries: {type: string}, no_ssl_validation: {type: boolean}, port: {type: string}, service: {type: string}, slow_flush_log_threshold: {type: string}, ssl_port: {type: string}, tag_key: {type: string}, timestamp_key: {type: string}, use_compression: {type: boolean}, use_http: {type: boolean}, use_json: {type: boolean}, use_ssl: {type: boolean}}, required: [api_key], type: object}, elasticsearch: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, application_name: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_message_request_threshold: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key_pass: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, content_type: {type: string}, custom_headers: {type: string}, customize_template: {type: string}, data_stream_enable: {type: boolean}, data_stream_ilm_name: {type: string}, data_stream_ilm_policy: {type: string}, data_stream_ilm_policy_overwrite: {type: boolean}, data_stream_name: {type: string}, data_stream_template_name: {type: string}, default_elasticsearch_version: {type: string}, deflector_alias: {type: string}, enable_ilm: {type: boolean}, exception_backup: {type: boolean}, fail_on_detecting_es_version_retry_exceed: {type: boolean}, fail_on_putting_template_retry_exceed: {type: boolean}, flatten_hashes: {type: boolean}, flatten_hashes_separator: {type: string}, host: {type: string}, hosts: {type: string}, http_backend: {type: string}, id_key: {type: string}, ignore_exceptions: {type: string}, ilm_policy: {type: string}, ilm_policy_id: {type: string}, ilm_policy_overwrite: {type: boolean}, include_index_in_url: {type: boolean}, include_tag_key: {type: boolean}, include_timestamp: {type: boolean}, index_date_pattern: {type: string}, index_name: {type: string}, index_prefix: {type: string}, log_es_400_reason: {type: boolean}, logstash_dateformat: {type: string}, logstash_format: {type: boolean}, logstash_prefix: {type: string}, logstash_prefix_separator: {type: string}, max_retry_get_es_version: {type: string}, max_retry_putting_template: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, path: {type: string}, pipeline: {type: string}, port: {type: integer}, prefer_oj_serializer: {type: boolean}, reconnect_on_error: {type: boolean}, reload_after: {type: string}, reload_connections: {type: boolean}, reload_on_failure: {type: boolean}, remove_keys: {type: string}, remove_keys_on_update: {type: string}, remove_keys_on_update_key: {type: string}, request_timeout: {type: string}, resurrect_after: {type: string}, retry_tag: {type: string}, rollover_index: {type: boolean}, routing_key: {type: string}, scheme: {type: string}, slow_flush_log_threshold: {type: string}, sniffer_class_name: {type: string}, ssl_max_version: {type: string}, ssl_min_version: {type: string}, ssl_verify: {type: boolean}, ssl_version: {type: string}, suppress_doc_wrap: {type: boolean}, suppress_type_name: {type: boolean}, tag_key: {type: string}, target_index_key: {type: string}, target_type_key: {type: string}, template_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, template_name: {type: string}, template_overwrite: {type: boolean}, templates: {type: string}, time_key: {type: string}, time_key_format: {type: string}, time_parse_error_tag: {type: string}, time_precision: {type: string}, type_name: {type: string}, unrecoverable_error_types: {type: string}, user: {type: string}, utc_index: {type: boolean}, validate_client_version: {type: boolean}, verify_es_version_at_startup: {type: boolean}, with_transporter_log: {type: boolean}, write_operation: {type: string}}, type: object}, enabledNamespaces: {items: {type: string}, type: array}, file: {properties: {add_path_suffix: {type: boolean}, append: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, compress: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, path: {type: string}, path_suffix: {type: string}, recompress: {type: boolean}, slow_flush_log_threshold: {type: string}, symlink_path: {type: boolean}}, required: [path], type: object}, forward: {properties: {ack_response_timeout: {type: integer}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, connect_timeout: {type: integer}, dns_round_robin: {type: boolean}, expire_dns_cache: {type: integer}, hard_timeout: {type: integer}, heartbeat_interval: {type: integer}, heartbeat_type: {type: string}, ignore_network_errors_at_startup: {type: boolean}, keepalive: {type: boolean}, keepalive_timeout: {type: integer}, phi_failure_detector: {type: boolean}, phi_threshold: {type: integer}, recover_wait: {type: integer}, require_ack_response: {type: boolean}, security: {properties: {allow_anonymous_source: {type: boolean}, self_hostname: {type: string}, shared_key: {type: string}, user_auth: {type: boolean}}, required: [self_hostname, shared_key], type: object}, send_timeout: {type: integer}, servers: {items: {properties: {host: {type: string}, name: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, port: {type: integer}, shared_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, standby: {type: boolean}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, weight: {type: integer}}, required: [host], type: object}, type: array}, slow_flush_log_threshold: {type: string}, tls_allow_self_signed_cert: {type: boolean}, tls_cert_logical_store_name: {type: string}, tls_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_cert_thumbprint: {type: string}, tls_cert_use_enterprise_store: {type: boolean}, tls_ciphers: {type: string}, tls_client_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_client_private_key_passphrase: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_client_private_key_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_insecure_mode: {type: boolean}, tls_verify_hostname: {type: boolean}, tls_version: {type: string}, transport: {type: string}, verify_connection_at_startup: {type: boolean}}, required: [servers], type: object}, gcs: {properties: {acl: {type: string}, auto_create_bucket: {type: boolean}, bucket: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, client_retries: {type: integer}, client_timeout: {type: integer}, credentials_json: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, encryption_key: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, hex_random_length: {type: integer}, keyfile: {type: string}, object_key_format: {type: string}, object_metadata: {items: {properties: {key: {type: string}, value: {type: string}}, required: [key, value], type: object}, type: array}, overwrite: {type: boolean}, path: {type: string}, project: {type: string}, slow_flush_log_threshold: {type: string}, storage_class: {type: string}, store_as: {type: string}, transcoding: {type: boolean}}, required: [bucket, project], type: object}, gelf: {properties: {host: {type: string}, port: {type: integer}, protocol: {type: string}, tls: {type: boolean}, tls_options: {additionalProperties: {type: string}, type: object}}, required: [host, port], type: object}, http: {properties: {auth: {properties: {password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, required: [password, username], type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, content_type: {type: string}, endpoint: {type: string}, error_response_as_unrecoverable: {type: boolean}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, headers: {additionalProperties: {type: string}, type: object}, http_method: {type: string}, json_array: {type: boolean}, open_timeout: {type: integer}, proxy: {type: string}, read_timeout: {type: integer}, retryable_response_codes: {items: {type: integer}, type: array}, slow_flush_log_threshold: {type: string}, ssl_timeout: {type: integer}, tls_ca_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_ciphers: {type: string}, tls_client_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_private_key_passphrase: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_private_key_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_verify_mode: {type: string}, tls_version: {type: string}}, required: [endpoint], type: object}, kafka: {properties: {ack_timeout: {type: integer}, brokers: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, client_id: {type: string}, compression_codec: {type: string}, default_message_key: {type: string}, default_partition_key: {type: string}, default_topic: {type: string}, discard_kafka_delivery_failed: {type: boolean}, exclude_partion_key: {type: boolean}, exclude_topic_key: {type: boolean}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, get_kafka_client_log: {type: boolean}, headers: {additionalProperties: {type: string}, type: object}, headers_from_record: {additionalProperties: {type: string}, type: object}, idempotent: {type: boolean}, kafka_agg_max_bytes: {type: integer}, kafka_agg_max_messages: {type: integer}, keytab: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, max_send_retries: {type: integer}, message_key_key: {type: string}, partition_key: {type: string}, partition_key_key: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, principal: {type: string}, required_acks: {type: integer}, sasl_over_ssl: {type: boolean}, scram_mechanism: {type: string}, slow_flush_log_threshold: {type: string}, ssl_ca_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_ca_certs_from_system: {type: boolean}, ssl_client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_client_cert_chain: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_client_cert_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_verify_hostname: {type: boolean}, topic_key: {type: string}, use_default_for_unknown_topic: {type: boolean}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, required: [brokers, format], type: object}, kinesisStream: {properties: {assume_role_credentials: {properties: {duration_seconds: {type: string}, external_id: {type: string}, policy: {type: string}, role_arn: {type: string}, role_session_name: {type: string}}, required: [role_arn, role_session_name], type: object}, aws_iam_retries: {type: integer}, aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_ses_token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, batch_request_max_count: {type: integer}, batch_request_max_size: {type: integer}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, partition_key: {type: string}, process_credentials: {properties: {process: {type: string}}, required: [process], type: object}, region: {type: string}, reset_backoff_if_success: {type: boolean}, retries_on_batch_request: {type: integer}, slow_flush_log_threshold: {type: string}, stream_name: {type: string}}, required: [stream_name], type: object}, logdna: {properties: {api_key: {type: string}, app: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, hostname: {type: string}, ingester_domain: {type: string}, ingester_endpoint: {type: string}, request_timeout: {type: string}, slow_flush_log_threshold: {type: string}, tags: {type: string}}, required: [api_key, hostname], type: object}, loggingRef: {type: string}, logz: {properties: {buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_limit: {type: integer}, bulk_limit_warning_limit: {type: integer}, endpoint: {properties: {port: {type: integer}, token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, url: {type: string}}, type: object}, gzip: {type: boolean}, http_idle_timeout: {type: integer}, output_include_tags: {type: boolean}, output_include_time: {type: boolean}, retry_count: {type: integer}, retry_sleep: {type: integer}, slow_flush_log_threshold: {type: string}}, required: [endpoint], type: object}, loki: {properties: {buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, ca_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, configure_kubernetes_labels: {type: boolean}, drop_single_key: {type: boolean}, extra_labels: {additionalProperties: {type: string}, type: object}, extract_kubernetes_labels: {type: boolean}, include_thread_label: {type: boolean}, insecure_tls: {type: boolean}, key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, labels: {additionalProperties: {type: string}, type: object}, line_format: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, remove_keys: {items: {type: string}, type: array}, slow_flush_log_threshold: {type: string}, tenant: {type: string}, url: {type: string}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, type: object}, newrelic: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, base_uri: {type: string}, license_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, type: object}, nullout: {type: object}, opensearch: {properties: {application_name: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_message_request_threshold: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, catch_transport_exception_on_retry: {type: boolean}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key_pass: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, compression_level: {type: string}, custom_headers: {type: string}, customize_template: {type: string}, data_stream_enable: {type: boolean}, data_stream_name: {type: string}, data_stream_template_name: {type: string}, default_opensearch_version: {type: integer}, emit_error_for_missing_id: {type: boolean}, emit_error_label_event: {type: boolean}, exception_backup: {type: boolean}, fail_on_detecting_os_version_retry_exceed: {type: boolean}, fail_on_putting_template_retry_exceed: {type: boolean}, flatten_hashes: {type: boolean}, flatten_hashes_separator: {type: string}, host: {type: string}, hosts: {type: string}, http_backend: {type: string}, http_backend_excon_nonblock: {type: boolean}, id_key: {type: string}, ignore_exceptions: {type: string}, include_index_in_url: {type: boolean}, include_tag_key: {type: boolean}, include_timestamp: {type: boolean}, index_date_pattern: {type: string}, index_name: {type: string}, index_separator: {type: string}, log_os_400_reason: {type: boolean}, logstash_dateformat: {type: string}, logstash_format: {type: boolean}, logstash_prefix: {type: string}, logstash_prefix_separator: {type: string}, max_retry_get_os_version: {type: integer}, max_retry_putting_template: {type: string}, parent_key: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, path: {type: string}, pipeline: {type: string}, port: {type: integer}, prefer_oj_serializer: {type: boolean}, reconnect_on_error: {type: boolean}, reload_after: {type: string}, reload_connections: {type: boolean}, reload_on_failure: {type: boolean}, remove_keys_on_update: {type: string}, remove_keys_on_update_key: {type: string}, request_timeout: {type: string}, resurrect_after: {type: string}, retry_tag: {type: string}, routing_key: {type: string}, scheme: {type: string}, selector_class_name: {type: string}, slow_flush_log_threshold: {type: string}, sniffer_class_name: {type: string}, ssl_verify: {type: boolean}, suppress_doc_wrap: {type: boolean}, suppress_type_name: {type: boolean}, tag_key: {type: string}, target_index_affinity: {type: boolean}, target_index_key: {type: string}, template_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, template_name: {type: string}, template_overwrite: {type: boolean}, templates: {type: string}, time_key: {type: string}, time_key_exclude_timestamp: {type: boolean}, time_key_format: {type: string}, time_parse_error_tag: {type: string}, time_precision: {type: string}, truncate_caches_interval: {type: string}, unrecoverable_error_types: {type: string}, unrecoverable_record_types: {type: string}, use_legacy_template: {type: boolean}, user: {type: string}, utc_index: {type: boolean}, validate_client_version: {type: boolean}, verify_os_version_at_startup: {type: boolean}, with_transporter_log: {type: boolean}, write_operation: {type: string}}, type: object}, oss: {properties: {aaccess_key_secret: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, access_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, auto_create_bucket: {type: boolean}, bucket: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, check_bucket: {type: boolean}, check_object: {type: boolean}, download_crc_enable: {type: boolean}, endpoint: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, hex_random_length: {type: integer}, index_format: {type: string}, key_format: {type: string}, open_timeout: {type: integer}, oss_sdk_log_dir: {type: string}, overwrite: {type: boolean}, path: {type: string}, read_timeout: {type: integer}, slow_flush_log_threshold: {type: string}, store_as: {type: string}, upload_crc_enable: {type: boolean}, warn_for_delay: {type: string}}, required: [aaccess_key_secret, access_key_id, bucket, endpoint], type: object}, redis: {properties: {allow_duplicate_key: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, db_number: {type: integer}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, host: {type: string}, insert_key_prefix: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, port: {type: integer}, slow_flush_log_threshold: {type: string}, strftime_format: {type: string}, ttl: {type: integer}}, type: object}, s3: {properties: {acl: {type: string}, assume_role_credentials: {properties: {duration_seconds: {type: string}, external_id: {type: string}, policy: {type: string}, role_arn: {type: string}, role_session_name: {type: string}}, required: [role_arn, role_session_name], type: object}, auto_create_bucket: {type: string}, aws_iam_retries: {type: string}, aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, check_apikey_on_start: {type: string}, check_bucket: {type: string}, check_object: {type: string}, clustername: {type: string}, compress: {properties: {parquet_compression_codec: {type: string}, parquet_page_size: {type: string}, parquet_row_group_size: {type: string}, record_type: {type: string}, schema_file: {type: string}, schema_type: {type: string}}, type: object}, compute_checksums: {type: string}, enable_transfer_acceleration: {type: string}, force_path_style: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, grant_full_control: {type: string}, grant_read: {type: string}, grant_read_acp: {type: string}, grant_write_acp: {type: string}, hex_random_length: {type: string}, index_format: {type: string}, instance_profile_credentials: {properties: {http_open_timeout: {type: string}, http_read_timeout: {type: string}, ip_address: {type: string}, port: {type: string}, retries: {type: string}}, type: object}, oneeye_format: {type: boolean}, overwrite: {type: string}, path: {type: string}, proxy_uri: {type: string}, s3_bucket: {type: string}, s3_endpoint: {type: string}, s3_metadata: {type: string}, s3_object_key_format: {type: string}, s3_region: {type: string}, shared_credentials: {properties: {path: {type: string}, profile_name: {type: string}}, type: object}, signature_version: {type: string}, slow_flush_log_threshold: {type: string}, sse_customer_algorithm: {type: string}, sse_customer_key: {type: string}, sse_customer_key_md5: {type: string}, ssekms_key_id: {type: string}, ssl_verify_peer: {type: string}, storage_class: {type: string}, store_as: {type: string}, use_bundled_cert: {type: string}, use_server_side_encryption: {type: string}, warn_for_delay: {type: string}}, required: [s3_bucket], type: object}, splunkHec: {properties: {buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ca_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, coerce_to_utf8: {type: boolean}, data_type: {type: string}, fields: {additionalProperties: {type: string}, type: object}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, hec_host: {type: string}, hec_port: {type: integer}, hec_token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, host: {type: string}, host_key: {type: string}, idle_timeout: {type: integer}, index: {type: string}, index_key: {type: string}, insecure_ssl: {type: boolean}, keep_keys: {type: boolean}, metric_name_key: {type: string}, metric_value_key: {type: string}, metrics_from_event: {type: boolean}, non_utf8_replacement_string: {type: string}, open_timeout: {type: integer}, protocol: {type: string}, read_timeout: {type: integer}, slow_flush_log_threshold: {type: string}, source: {type: string}, source_key: {type: string}, sourcetype: {type: string}, sourcetype_key: {type: string}, ssl_ciphers: {type: string}}, required: [hec_host, hec_token], type: object}, sqs: {properties: {aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, create_queue: {type: boolean}, delay_seconds: {type: integer}, include_tag: {type: boolean}, message_group_id: {type: string}, queue_name: {type: string}, region: {type: string}, slow_flush_log_threshold: {type: string}, sqs_url: {type: string}, tag_property_name: {type: string}}, type: object}, sumologic: {properties: {add_timestamp: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, compress: {type: boolean}, compress_encoding: {type: string}, custom_dimensions: {type: string}, custom_fields: {items: {type: string}, type: array}, data_type: {type: string}, delimiter: {type: string}, disable_cookies: {type: boolean}, endpoint: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, log_format: {type: string}, log_key: {type: string}, metric_data_format: {type: string}, open_timeout: {type: integer}, proxy_uri: {type: string}, slow_flush_log_threshold: {type: string}, source_category: {type: string}, source_host: {type: string}, source_name: {type: string}, source_name_key: {type: string}, sumo_client: {type: string}, timestamp_key: {type: string}, verify_ssl: {type: boolean}}, required: [endpoint, source_name], type: object}, syslog: {properties: {allow_self_signed_cert: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, client_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, enable_system_cert_store: {type: boolean}, format: {properties: {app_name_field: {type: string}, hostname_field: {type: string}, log_field: {type: string}, message_id_field: {type: string}, proc_id_field: {type: string}, rfc6587_message_size: {type: boolean}, structured_data_field: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, fqdn: {type: string}, host: {type: string}, insecure: {type: boolean}, port: {type: integer}, private_key_passphrase: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, private_key_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, slow_flush_log_threshold: {type: string}, transport: {type: string}, trusted_ca_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, verify_fqdn: {type: boolean}, version: {type: string}}, required: [host], type: object}}, type: object}, status: {properties: {active: {type: boolean}, problems: {items: {type: string}, type: array}, problemsCount: {type: integer}}, type: object}}, required: [spec], type: object}}, served: true, storage: false, subresources: {status: {}}}, {additionalPrinterColumns: [{jsonPath: .status.active, name: Active, type: boolean}, {jsonPath: .status.problemsCount, name: Problems, type: integer}], name: v1beta1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {awsElasticsearch: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, application_name: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_message_request_threshold: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key_pass: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, content_type: {type: string}, custom_headers: {type: string}, customize_template: {type: string}, data_stream_enable: {type: boolean}, data_stream_ilm_name: {type: string}, data_stream_ilm_policy: {type: string}, data_stream_ilm_policy_overwrite: {type: boolean}, data_stream_name: {type: string}, data_stream_template_name: {type: string}, default_elasticsearch_version: {type: string}, deflector_alias: {type: string}, enable_ilm: {type: boolean}, endpoint: {properties: {access_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, assume_role_arn: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, assume_role_session_name: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, assume_role_web_identity_token_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ecs_container_credentials_relative_uri: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, region: {type: string}, secret_access_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, sts_credentials_region: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, url: {type: string}}, type: object}, exception_backup: {type: boolean}, fail_on_detecting_es_version_retry_exceed: {type: boolean}, fail_on_putting_template_retry_exceed: {type: boolean}, flatten_hashes: {type: boolean}, flatten_hashes_separator: {type: string}, flush_interval: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, host: {type: string}, hosts: {type: string}, http_backend: {type: string}, id_key: {type: string}, ignore_exceptions: {type: string}, ilm_policy: {type: string}, ilm_policy_id: {type: string}, ilm_policy_overwrite: {type: boolean}, include_index_in_url: {type: boolean}, include_tag_key: {type: boolean}, include_timestamp: {type: boolean}, index_date_pattern: {type: string}, index_name: {type: string}, index_prefix: {type: string}, log_es_400_reason: {type: boolean}, logstash_dateformat: {type: string}, logstash_format: {type: boolean}, logstash_prefix: {type: string}, logstash_prefix_separator: {type: string}, max_retry_get_es_version: {type: string}, max_retry_putting_template: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, path: {type: string}, pipeline: {type: string}, port: {type: integer}, prefer_oj_serializer: {type: boolean}, reconnect_on_error: {type: boolean}, reload_after: {type: string}, reload_connections: {type: boolean}, reload_on_failure: {type: boolean}, remove_keys: {type: string}, remove_keys_on_update: {type: string}, remove_keys_on_update_key: {type: string}, request_timeout: {type: string}, resurrect_after: {type: string}, retry_tag: {type: string}, rollover_index: {type: boolean}, routing_key: {type: string}, scheme: {type: string}, slow_flush_log_threshold: {type: string}, sniffer_class_name: {type: string}, ssl_max_version: {type: string}, ssl_min_version: {type: string}, ssl_verify: {type: boolean}, ssl_version: {type: string}, suppress_doc_wrap: {type: boolean}, suppress_type_name: {type: boolean}, tag_key: {type: string}, target_index_key: {type: string}, target_type_key: {type: string}, template_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, template_name: {type: string}, template_overwrite: {type: boolean}, templates: {type: string}, time_key: {type: string}, time_key_format: {type: string}, time_parse_error_tag: {type: string}, time_precision: {type: string}, type_name: {type: string}, unrecoverable_error_types: {type: string}, user: {type: string}, utc_index: {type: boolean}, validate_client_version: {type: boolean}, verify_es_version_at_startup: {type: boolean}, with_transporter_log: {type: boolean}, write_operation: {type: string}}, type: object}, azurestorage: {properties: {auto_create_container: {type: boolean}, azure_container: {type: string}, azure_imds_api_version: {type: string}, azure_object_key_format: {type: string}, azure_storage_access_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, azure_storage_account: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, azure_storage_sas_token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, format: {type: string}, path: {type: string}, slow_flush_log_threshold: {type: string}}, required: [azure_container, azure_storage_account], type: object}, cloudwatch: {properties: {auto_create_stream: {type: boolean}, aws_instance_profile_credentials_retries: {type: integer}, aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sts_role_arn: {type: string}, aws_sts_session_name: {type: string}, aws_use_sts: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, concurrency: {type: integer}, endpoint: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, http_proxy: {type: string}, include_time_key: {type: boolean}, json_handler: {type: string}, localtime: {type: boolean}, log_group_aws_tags: {type: string}, log_group_aws_tags_key: {type: string}, log_group_name: {type: string}, log_group_name_key: {type: string}, log_rejected_request: {type: string}, log_stream_name: {type: string}, log_stream_name_key: {type: string}, max_events_per_batch: {type: integer}, max_message_length: {type: integer}, message_keys: {type: string}, put_log_events_disable_retry_limit: {type: boolean}, put_log_events_retry_limit: {type: integer}, put_log_events_retry_wait: {type: string}, region: {type: string}, remove_log_group_aws_tags_key: {type: string}, remove_log_group_name_key: {type: string}, remove_log_stream_name_key: {type: string}, remove_retention_in_days: {type: string}, retention_in_days: {type: string}, retention_in_days_key: {type: string}, slow_flush_log_threshold: {type: string}, use_tag_as_group: {type: boolean}, use_tag_as_stream: {type: boolean}}, required: [region], type: object}, datadog: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, compression_level: {type: string}, dd_hostname: {type: string}, dd_source: {type: string}, dd_sourcecategory: {type: string}, dd_tags: {type: string}, host: {type: string}, include_tag_key: {type: boolean}, max_backoff: {type: string}, max_retries: {type: string}, no_ssl_validation: {type: boolean}, port: {type: string}, service: {type: string}, slow_flush_log_threshold: {type: string}, ssl_port: {type: string}, tag_key: {type: string}, timestamp_key: {type: string}, use_compression: {type: boolean}, use_http: {type: boolean}, use_json: {type: boolean}, use_ssl: {type: boolean}}, required: [api_key], type: object}, elasticsearch: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, application_name: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_message_request_threshold: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key_pass: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, content_type: {type: string}, custom_headers: {type: string}, customize_template: {type: string}, data_stream_enable: {type: boolean}, data_stream_ilm_name: {type: string}, data_stream_ilm_policy: {type: string}, data_stream_ilm_policy_overwrite: {type: boolean}, data_stream_name: {type: string}, data_stream_template_name: {type: string}, default_elasticsearch_version: {type: string}, deflector_alias: {type: string}, enable_ilm: {type: boolean}, exception_backup: {type: boolean}, fail_on_detecting_es_version_retry_exceed: {type: boolean}, fail_on_putting_template_retry_exceed: {type: boolean}, flatten_hashes: {type: boolean}, flatten_hashes_separator: {type: string}, host: {type: string}, hosts: {type: string}, http_backend: {type: string}, id_key: {type: string}, ignore_exceptions: {type: string}, ilm_policy: {type: string}, ilm_policy_id: {type: string}, ilm_policy_overwrite: {type: boolean}, include_index_in_url: {type: boolean}, include_tag_key: {type: boolean}, include_timestamp: {type: boolean}, index_date_pattern: {type: string}, index_name: {type: string}, index_prefix: {type: string}, log_es_400_reason: {type: boolean}, logstash_dateformat: {type: string}, logstash_format: {type: boolean}, logstash_prefix: {type: string}, logstash_prefix_separator: {type: string}, max_retry_get_es_version: {type: string}, max_retry_putting_template: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, path: {type: string}, pipeline: {type: string}, port: {type: integer}, prefer_oj_serializer: {type: boolean}, reconnect_on_error: {type: boolean}, reload_after: {type: string}, reload_connections: {type: boolean}, reload_on_failure: {type: boolean}, remove_keys: {type: string}, remove_keys_on_update: {type: string}, remove_keys_on_update_key: {type: string}, request_timeout: {type: string}, resurrect_after: {type: string}, retry_tag: {type: string}, rollover_index: {type: boolean}, routing_key: {type: string}, scheme: {type: string}, slow_flush_log_threshold: {type: string}, sniffer_class_name: {type: string}, ssl_max_version: {type: string}, ssl_min_version: {type: string}, ssl_verify: {type: boolean}, ssl_version: {type: string}, suppress_doc_wrap: {type: boolean}, suppress_type_name: {type: boolean}, tag_key: {type: string}, target_index_key: {type: string}, target_type_key: {type: string}, template_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, template_name: {type: string}, template_overwrite: {type: boolean}, templates: {type: string}, time_key: {type: string}, time_key_format: {type: string}, time_parse_error_tag: {type: string}, time_precision: {type: string}, type_name: {type: string}, unrecoverable_error_types: {type: string}, user: {type: string}, utc_index: {type: boolean}, validate_client_version: {type: boolean}, verify_es_version_at_startup: {type: boolean}, with_transporter_log: {type: boolean}, write_operation: {type: string}}, type: object}, enabledNamespaces: {items: {type: string}, type: array}, file: {properties: {add_path_suffix: {type: boolean}, append: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, compress: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, path: {type: string}, path_suffix: {type: string}, recompress: {type: boolean}, slow_flush_log_threshold: {type: string}, symlink_path: {type: boolean}}, required: [path], type: object}, forward: {properties: {ack_response_timeout: {type: integer}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, connect_timeout: {type: integer}, dns_round_robin: {type: boolean}, expire_dns_cache: {type: integer}, hard_timeout: {type: integer}, heartbeat_interval: {type: integer}, heartbeat_type: {type: string}, ignore_network_errors_at_startup: {type: boolean}, keepalive: {type: boolean}, keepalive_timeout: {type: integer}, phi_failure_detector: {type: boolean}, phi_threshold: {type: integer}, recover_wait: {type: integer}, require_ack_response: {type: boolean}, security: {properties: {allow_anonymous_source: {type: boolean}, self_hostname: {type: string}, shared_key: {type: string}, user_auth: {type: boolean}}, required: [self_hostname, shared_key], type: object}, send_timeout: {type: integer}, servers: {items: {properties: {host: {type: string}, name: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, port: {type: integer}, shared_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, standby: {type: boolean}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, weight: {type: integer}}, required: [host], type: object}, type: array}, slow_flush_log_threshold: {type: string}, tls_allow_self_signed_cert: {type: boolean}, tls_cert_logical_store_name: {type: string}, tls_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_cert_thumbprint: {type: string}, tls_cert_use_enterprise_store: {type: boolean}, tls_ciphers: {type: string}, tls_client_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_client_private_key_passphrase: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_client_private_key_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_insecure_mode: {type: boolean}, tls_verify_hostname: {type: boolean}, tls_version: {type: string}, transport: {type: string}, verify_connection_at_startup: {type: boolean}}, required: [servers], type: object}, gcs: {properties: {acl: {type: string}, auto_create_bucket: {type: boolean}, bucket: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, client_retries: {type: integer}, client_timeout: {type: integer}, credentials_json: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, encryption_key: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, hex_random_length: {type: integer}, keyfile: {type: string}, object_key_format: {type: string}, object_metadata: {items: {properties: {key: {type: string}, value: {type: string}}, required: [key, value], type: object}, type: array}, overwrite: {type: boolean}, path: {type: string}, project: {type: string}, slow_flush_log_threshold: {type: string}, storage_class: {type: string}, store_as: {type: string}, transcoding: {type: boolean}}, required: [bucket, project], type: object}, gelf: {properties: {host: {type: string}, port: {type: integer}, protocol: {type: string}, tls: {type: boolean}, tls_options: {additionalProperties: {type: string}, type: object}}, required: [host, port], type: object}, http: {properties: {auth: {properties: {password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, required: [password, username], type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, content_type: {type: string}, endpoint: {type: string}, error_response_as_unrecoverable: {type: boolean}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, headers: {additionalProperties: {type: string}, type: object}, http_method: {type: string}, json_array: {type: boolean}, open_timeout: {type: integer}, proxy: {type: string}, read_timeout: {type: integer}, retryable_response_codes: {items: {type: integer}, type: array}, slow_flush_log_threshold: {type: string}, ssl_timeout: {type: integer}, tls_ca_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_ciphers: {type: string}, tls_client_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_private_key_passphrase: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_private_key_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_verify_mode: {type: string}, tls_version: {type: string}}, required: [endpoint], type: object}, kafka: {properties: {ack_timeout: {type: integer}, brokers: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, client_id: {type: string}, compression_codec: {type: string}, default_message_key: {type: string}, default_partition_key: {type: string}, default_topic: {type: string}, discard_kafka_delivery_failed: {type: boolean}, exclude_partion_key: {type: boolean}, exclude_topic_key: {type: boolean}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, get_kafka_client_log: {type: boolean}, headers: {additionalProperties: {type: string}, type: object}, headers_from_record: {additionalProperties: {type: string}, type: object}, idempotent: {type: boolean}, kafka_agg_max_bytes: {type: integer}, kafka_agg_max_messages: {type: integer}, keytab: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, max_send_retries: {type: integer}, message_key_key: {type: string}, partition_key: {type: string}, partition_key_key: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, principal: {type: string}, required_acks: {type: integer}, sasl_over_ssl: {type: boolean}, scram_mechanism: {type: string}, slow_flush_log_threshold: {type: string}, ssl_ca_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_ca_certs_from_system: {type: boolean}, ssl_client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_client_cert_chain: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_client_cert_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_verify_hostname: {type: boolean}, topic_key: {type: string}, use_default_for_unknown_topic: {type: boolean}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, required: [brokers, format], type: object}, kinesisStream: {properties: {assume_role_credentials: {properties: {duration_seconds: {type: string}, external_id: {type: string}, policy: {type: string}, role_arn: {type: string}, role_session_name: {type: string}}, required: [role_arn, role_session_name], type: object}, aws_iam_retries: {type: integer}, aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_ses_token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, batch_request_max_count: {type: integer}, batch_request_max_size: {type: integer}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, partition_key: {type: string}, process_credentials: {properties: {process: {type: string}}, required: [process], type: object}, region: {type: string}, reset_backoff_if_success: {type: boolean}, retries_on_batch_request: {type: integer}, slow_flush_log_threshold: {type: string}, stream_name: {type: string}}, required: [stream_name], type: object}, logdna: {properties: {api_key: {type: string}, app: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, hostname: {type: string}, ingester_domain: {type: string}, ingester_endpoint: {type: string}, request_timeout: {type: string}, slow_flush_log_threshold: {type: string}, tags: {type: string}}, required: [api_key, hostname], type: object}, loggingRef: {type: string}, logz: {properties: {buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_limit: {type: integer}, bulk_limit_warning_limit: {type: integer}, endpoint: {properties: {port: {type: integer}, token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, url: {type: string}}, type: object}, gzip: {type: boolean}, http_idle_timeout: {type: integer}, output_include_tags: {type: boolean}, output_include_time: {type: boolean}, retry_count: {type: integer}, retry_sleep: {type: integer}, slow_flush_log_threshold: {type: string}}, required: [endpoint], type: object}, loki: {properties: {buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, ca_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, configure_kubernetes_labels: {type: boolean}, drop_single_key: {type: boolean}, extra_labels: {additionalProperties: {type: string}, type: object}, extract_kubernetes_labels: {type: boolean}, include_thread_label: {type: boolean}, insecure_tls: {type: boolean}, key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, labels: {additionalProperties: {type: string}, type: object}, line_format: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, remove_keys: {items: {type: string}, type: array}, slow_flush_log_threshold: {type: string}, tenant: {type: string}, url: {type: string}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, type: object}, newrelic: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, base_uri: {type: string}, license_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, type: object}, nullout: {type: object}, opensearch: {properties: {application_name: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_message_request_threshold: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, catch_transport_exception_on_retry: {type: boolean}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key_pass: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, compression_level: {type: string}, custom_headers: {type: string}, customize_template: {type: string}, data_stream_enable: {type: boolean}, data_stream_name: {type: string}, data_stream_template_name: {type: string}, default_opensearch_version: {type: integer}, emit_error_for_missing_id: {type: boolean}, emit_error_label_event: {type: boolean}, exception_backup: {type: boolean}, fail_on_detecting_os_version_retry_exceed: {type: boolean}, fail_on_putting_template_retry_exceed: {type: boolean}, flatten_hashes: {type: boolean}, flatten_hashes_separator: {type: string}, host: {type: string}, hosts: {type: string}, http_backend: {type: string}, http_backend_excon_nonblock: {type: boolean}, id_key: {type: string}, ignore_exceptions: {type: string}, include_index_in_url: {type: boolean}, include_tag_key: {type: boolean}, include_timestamp: {type: boolean}, index_date_pattern: {type: string}, index_name: {type: string}, index_separator: {type: string}, log_os_400_reason: {type: boolean}, logstash_dateformat: {type: string}, logstash_format: {type: boolean}, logstash_prefix: {type: string}, logstash_prefix_separator: {type: string}, max_retry_get_os_version: {type: integer}, max_retry_putting_template: {type: string}, parent_key: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, path: {type: string}, pipeline: {type: string}, port: {type: integer}, prefer_oj_serializer: {type: boolean}, reconnect_on_error: {type: boolean}, reload_after: {type: string}, reload_connections: {type: boolean}, reload_on_failure: {type: boolean}, remove_keys_on_update: {type: string}, remove_keys_on_update_key: {type: string}, request_timeout: {type: string}, resurrect_after: {type: string}, retry_tag: {type: string}, routing_key: {type: string}, scheme: {type: string}, selector_class_name: {type: string}, slow_flush_log_threshold: {type: string}, sniffer_class_name: {type: string}, ssl_verify: {type: boolean}, suppress_doc_wrap: {type: boolean}, suppress_type_name: {type: boolean}, tag_key: {type: string}, target_index_affinity: {type: boolean}, target_index_key: {type: string}, template_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, template_name: {type: string}, template_overwrite: {type: boolean}, templates: {type: string}, time_key: {type: string}, time_key_exclude_timestamp: {type: boolean}, time_key_format: {type: string}, time_parse_error_tag: {type: string}, time_precision: {type: string}, truncate_caches_interval: {type: string}, unrecoverable_error_types: {type: string}, unrecoverable_record_types: {type: string}, use_legacy_template: {type: boolean}, user: {type: string}, utc_index: {type: boolean}, validate_client_version: {type: boolean}, verify_os_version_at_startup: {type: boolean}, with_transporter_log: {type: boolean}, write_operation: {type: string}}, type: object}, oss: {properties: {aaccess_key_secret: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, access_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, auto_create_bucket: {type: boolean}, bucket: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, check_bucket: {type: boolean}, check_object: {type: boolean}, download_crc_enable: {type: boolean}, endpoint: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, hex_random_length: {type: integer}, index_format: {type: string}, key_format: {type: string}, open_timeout: {type: integer}, oss_sdk_log_dir: {type: string}, overwrite: {type: boolean}, path: {type: string}, read_timeout: {type: integer}, slow_flush_log_threshold: {type: string}, store_as: {type: string}, upload_crc_enable: {type: boolean}, warn_for_delay: {type: string}}, required: [aaccess_key_secret, access_key_id, bucket, endpoint], type: object}, redis: {properties: {allow_duplicate_key: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, db_number: {type: integer}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, host: {type: string}, insert_key_prefix: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, port: {type: integer}, slow_flush_log_threshold: {type: string}, strftime_format: {type: string}, ttl: {type: integer}}, type: object}, s3: {properties: {acl: {type: string}, assume_role_credentials: {properties: {duration_seconds: {type: string}, external_id: {type: string}, policy: {type: string}, role_arn: {type: string}, role_session_name: {type: string}}, required: [role_arn, role_session_name], type: object}, auto_create_bucket: {type: string}, aws_iam_retries: {type: string}, aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, check_apikey_on_start: {type: string}, check_bucket: {type: string}, check_object: {type: string}, clustername: {type: string}, compress: {properties: {parquet_compression_codec: {type: string}, parquet_page_size: {type: string}, parquet_row_group_size: {type: string}, record_type: {type: string}, schema_file: {type: string}, schema_type: {type: string}}, type: object}, compute_checksums: {type: string}, enable_transfer_acceleration: {type: string}, force_path_style: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, grant_full_control: {type: string}, grant_read: {type: string}, grant_read_acp: {type: string}, grant_write_acp: {type: string}, hex_random_length: {type: string}, index_format: {type: string}, instance_profile_credentials: {properties: {http_open_timeout: {type: string}, http_read_timeout: {type: string}, ip_address: {type: string}, port: {type: string}, retries: {type: string}}, type: object}, oneeye_format: {type: boolean}, overwrite: {type: string}, path: {type: string}, proxy_uri: {type: string}, s3_bucket: {type: string}, s3_endpoint: {type: string}, s3_metadata: {type: string}, s3_object_key_format: {type: string}, s3_region: {type: string}, shared_credentials: {properties: {path: {type: string}, profile_name: {type: string}}, type: object}, signature_version: {type: string}, slow_flush_log_threshold: {type: string}, sse_customer_algorithm: {type: string}, sse_customer_key: {type: string}, sse_customer_key_md5: {type: string}, ssekms_key_id: {type: string}, ssl_verify_peer: {type: string}, storage_class: {type: string}, store_as: {type: string}, use_bundled_cert: {type: string}, use_server_side_encryption: {type: string}, warn_for_delay: {type: string}}, required: [s3_bucket], type: object}, splunkHec: {properties: {buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ca_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, coerce_to_utf8: {type: boolean}, data_type: {type: string}, fields: {additionalProperties: {type: string}, type: object}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, hec_host: {type: string}, hec_port: {type: integer}, hec_token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, host: {type: string}, host_key: {type: string}, idle_timeout: {type: integer}, index: {type: string}, index_key: {type: string}, insecure_ssl: {type: boolean}, keep_keys: {type: boolean}, metric_name_key: {type: string}, metric_value_key: {type: string}, metrics_from_event: {type: boolean}, non_utf8_replacement_string: {type: string}, open_timeout: {type: integer}, protocol: {type: string}, read_timeout: {type: integer}, slow_flush_log_threshold: {type: string}, source: {type: string}, source_key: {type: string}, sourcetype: {type: string}, sourcetype_key: {type: string}, ssl_ciphers: {type: string}}, required: [hec_host, hec_token], type: object}, sqs: {properties: {aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, create_queue: {type: boolean}, delay_seconds: {type: integer}, include_tag: {type: boolean}, message_group_id: {type: string}, queue_name: {type: string}, region: {type: string}, slow_flush_log_threshold: {type: string}, sqs_url: {type: string}, tag_property_name: {type: string}}, type: object}, sumologic: {properties: {add_timestamp: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, compress: {type: boolean}, compress_encoding: {type: string}, custom_dimensions: {type: string}, custom_fields: {items: {type: string}, type: array}, data_type: {type: string}, delimiter: {type: string}, disable_cookies: {type: boolean}, endpoint: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, log_format: {type: string}, log_key: {type: string}, metric_data_format: {type: string}, open_timeout: {type: integer}, proxy_uri: {type: string}, slow_flush_log_threshold: {type: string}, source_category: {type: string}, source_host: {type: string}, source_name: {type: string}, source_name_key: {type: string}, sumo_client: {type: string}, timestamp_key: {type: string}, verify_ssl: {type: boolean}}, required: [endpoint, source_name], type: object}, syslog: {properties: {allow_self_signed_cert: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, client_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, enable_system_cert_store: {type: boolean}, format: {properties: {app_name_field: {type: string}, hostname_field: {type: string}, log_field: {type: string}, message_id_field: {type: string}, proc_id_field: {type: string}, rfc6587_message_size: {type: boolean}, structured_data_field: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, fqdn: {type: string}, host: {type: string}, insecure: {type: boolean}, port: {type: integer}, private_key_passphrase: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, private_key_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, slow_flush_log_threshold: {type: string}, transport: {type: string}, trusted_ca_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, verify_fqdn: {type: boolean}, version: {type: string}}, required: [host], type: object}}, type: object}, status: {properties: {active: {type: boolean}, problems: {items: {type: string}, type: array}, problemsCount: {type: integer}}, type: object}}, required: [spec], type: object}}, served: true, storage: true, subresources: {status: {}}}]}, status: {acceptedNames: {kind: "", plural: ""}, conditions: [], storedVersions: []}}
---
{apiVersion: apiextensions.k8s.io/v1, kind: CustomResourceDefinition, metadata: {annotations: {controller-gen.kubebuilder.io/version: v0.11.3}, creationTimestamp: null, name: collectorconfigs.logging.opni.io}, spec: {group: logging.opni.io, names: {kind: CollectorConfig, listKind: CollectorConfigList, plural: collectorconfigs, singular: collectorconfig}, scope: Cluster, versions: [{name: v1beta1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {aks: {type: object}, eks: {type: object}, gke: {type: object}, k3s: {properties: {containerEngine: {type: string}, logPath: {type: string}}, type: object}, provider: {enum: [aks, eks, gke, k3s, rke, rke2, generic], type: string}, rke: {properties: {logLevel: {type: string}}, type: object}, rke2: {properties: {logPath: {type: string}}, type: object}, seLinuxEnabled: {type: boolean}, selector: {properties: {exclude: {items: {properties: {namespace: {type: string}, podNames: {items: {type: string}, type: array}}, type: object}, type: array}, include: {items: {properties: {namespace: {type: string}, podNames: {items: {type: string}, type: array}}, type: object}, type: array}}, type: object}}, required: [provider], type: object}, status: {properties: {conditions: {items: {type: string}, type: array}, message: {type: string}, phase: {type: string}}, type: object}}, type: object}}, served: true, storage: true, subresources: {status: {}}}]}}
---
{apiVersion: apiextensions.k8s.io/v1, kind: CustomResourceDefinition, metadata: {annotations: {controller-gen.kubebuilder.io/version: v0.11.3}, creationTimestamp: null, name: collectors.core.opni.io}, spec: {group: core.opni.io, names: {kind: Collector, listKind: CollectorList, plural: collectors, singular: collector}, scope: Cluster, versions: [{name: v1beta1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {agentEndpoint: {type: string}, clusterID: {type: string}, image: {type: string}, imagePullPolicy: {type: string}, imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, loggingConfig: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, systemNamespace: {type: string}}, required: [clusterID], type: object}, status: {properties: {conditions: {items: {type: string}, type: array}, state: {type: string}}, type: object}}, type: object}}, served: true, storage: true, subresources: {status: {}}}]}}
---
{apiVersion: apiextensions.k8s.io/v1, kind: CustomResourceDefinition, metadata: {annotations: {controller-gen.kubebuilder.io/version: v0.11.3}, creationTimestamp: null, name: datapreppers.logging.opni.io}, spec: {group: logging.opni.io, names: {kind: DataPrepper, listKind: DataPrepperList, plural: datapreppers, singular: dataprepper}, scope: Namespaced, versions: [{additionalPrinterColumns: [{jsonPath: .metadata.creationTimestamp, name: Age, type: date}], name: v1beta1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {cluster: {type: string}, defaultRepo: {type: string}, enableTracing: {type: boolean}, image: {type: string}, imagePullPolicy: {type: string}, imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, nodeSelector: {additionalProperties: {type: string}, type: object}, opensearch: {properties: {endpoint: {type: string}, insecureDisableSSLVerify: {type: boolean}}, type: object}, passwordFrom: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, tolerations: {items: {properties: {effect: {type: string}, key: {type: string}, operator: {type: string}, tolerationSeconds: {format: int64, type: integer}, value: {type: string}}, type: object}, type: array}, username: {type: string}, version: {default: latest, type: string}}, type: object}, status: {properties: {conditions: {items: {type: string}, type: array}, state: {type: string}}, type: object}}, type: object}}, served: true, storage: true, subresources: {status: {}}}]}}
---
{apiVersion: apiextensions.k8s.io/v1, kind: CustomResourceDefinition, metadata: {annotations: {controller-gen.kubebuilder.io/version: v0.6.0}, creationTimestamp: null, name: flows.logging.opni.io}, spec: {group: logging.opni.io, names: {categories: [logging-all], kind: Flow, listKind: FlowList, plural: flows, singular: flow}, scope: Namespaced, versions: [{additionalPrinterColumns: [{jsonPath: .status.active, name: Active, type: boolean}, {jsonPath: .status.problemsCount, name: Problems, type: integer}], name: v1alpha1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {filters: {items: {properties: {concat: {properties: {continuous_line_regexp: {type: string}, flush_interval: {type: integer}, keep_partial_key: {type: boolean}, keep_partial_metadata: {type: string}, key: {type: string}, multiline_end_regexp: {type: string}, multiline_start_regexp: {type: string}, n_lines: {type: integer}, partial_cri_logtag_key: {type: string}, partial_cri_stream_key: {type: string}, partial_key: {type: string}, partial_metadata_format: {type: string}, partial_value: {type: string}, separator: {type: string}, stream_identity_key: {type: string}, timeout_label: {type: string}, use_first_timestamp: {type: boolean}, use_partial_cri_logtag: {type: boolean}, use_partial_metadata: {type: string}}, type: object}, dedot: {properties: {de_dot_nested: {type: boolean}, de_dot_separator: {type: string}}, type: object}, detectExceptions: {properties: {force_line_breaks: {type: boolean}, languages: {items: {type: string}, type: array}, match_tag: {type: string}, max_bytes: {type: integer}, max_lines: {type: integer}, message: {type: string}, multiline_flush_interval: {type: string}, remove_tag_prefix: {type: string}, stream: {type: string}}, type: object}, elasticsearch_genid: {properties: {hash_id_key: {type: string}, hash_type: {type: string}, include_tag_in_seed: {type: boolean}, include_time_in_seed: {type: boolean}, record_keys: {type: string}, separator: {type: string}, use_entire_record: {type: boolean}, use_record_as_seed: {type: boolean}}, type: object}, enhanceK8s: {properties: {api_groups: {items: {type: string}, type: array}, bearer_token_file: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cache_refresh: {type: integer}, cache_refresh_variation: {type: integer}, cache_size: {type: integer}, cache_ttl: {type: integer}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, core_api_versions: {items: {type: string}, type: array}, data_type: {type: string}, in_namespace_path: {items: {type: string}, type: array}, in_pod_path: {items: {type: string}, type: array}, kubernetes_url: {type: string}, secret_dir: {type: string}, ssl_partial_chain: {type: boolean}, verify_ssl: {type: boolean}}, type: object}, geoip: {properties: {backend_library: {type: string}, geoip_2_database: {type: string}, geoip_database: {type: string}, geoip_lookup_keys: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, skip_adding_null_record: {type: boolean}}, type: object}, grep: {properties: {and: {items: {properties: {exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, type: array}, exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, or: {items: {properties: {exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, kube_events_timestamp: {properties: {mapped_time_key: {type: string}, timestamp_fields: {items: {type: string}, type: array}}, type: object}, parser: {properties: {emit_invalid_record_to_error: {type: boolean}, hash_value_field: {type: string}, inject_key_prefix: {type: string}, key_name: {type: string}, parse: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, delimiter: {type: string}, delimiter_pattern: {type: string}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, format_firstline: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, keys: {type: string}, label_delimiter: {type: string}, local_time: {type: boolean}, multiline: {items: {type: string}, type: array}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, patterns: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, local_time: {type: boolean}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, parsers: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, delimiter: {type: string}, delimiter_pattern: {type: string}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, format_firstline: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, keys: {type: string}, label_delimiter: {type: string}, local_time: {type: boolean}, multiline: {items: {type: string}, type: array}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, patterns: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, local_time: {type: boolean}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, remove_key_name_field: {type: boolean}, replace_invalid_sequence: {type: boolean}, reserve_data: {type: boolean}, reserve_time: {type: boolean}}, type: object}, prometheus: {properties: {labels: {additionalProperties: {type: string}, type: object}, metrics: {items: {properties: {buckets: {type: string}, desc: {type: string}, key: {type: string}, labels: {additionalProperties: {type: string}, type: object}, name: {type: string}, type: {type: string}}, required: [desc, name, type], type: object}, type: array}}, type: object}, record_modifier: {properties: {char_encoding: {type: string}, prepare_value: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, remove_keys: {type: string}, replaces: {items: {properties: {expression: {type: string}, key: {type: string}, replace: {type: string}}, required: [expression, key, replace], type: object}, type: array}, whitelist_keys: {type: string}}, type: object}, record_transformer: {properties: {auto_typecast: {type: boolean}, enable_ruby: {type: boolean}, keep_keys: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, remove_keys: {type: string}, renew_record: {type: boolean}, renew_time_key: {type: string}}, type: object}, stdout: {properties: {output_type: {type: string}}, type: object}, sumologic: {properties: {collector_key_name: {type: string}, collector_value: {type: string}, exclude_container_regex: {type: string}, exclude_facility_regex: {type: string}, exclude_host_regex: {type: string}, exclude_namespace_regex: {type: string}, exclude_pod_regex: {type: string}, exclude_priority_regex: {type: string}, exclude_unit_regex: {type: string}, log_format: {type: string}, source_category: {type: string}, source_category_key_name: {type: string}, source_category_prefix: {type: string}, source_category_replace_dash: {type: string}, source_host: {type: string}, source_host_key_name: {type: string}, source_name: {type: string}, source_name_key_name: {type: string}, tracing_annotation_prefix: {type: string}, tracing_container_name: {type: string}, tracing_format: {type: boolean}, tracing_host: {type: string}, tracing_label_prefix: {type: string}, tracing_namespace: {type: string}, tracing_pod: {type: string}, tracing_pod_id: {type: string}}, type: object}, tag_normaliser: {properties: {format: {type: string}, match_tag: {type: string}}, type: object}, throttle: {properties: {group_bucket_limit: {type: integer}, group_bucket_period_s: {type: integer}, group_drop_logs: {type: boolean}, group_key: {type: string}, group_reset_rate_s: {type: integer}, group_warning_delay_s: {type: integer}}, type: object}}, type: object}, type: array}, globalOutputRefs: {items: {type: string}, type: array}, localOutputRefs: {items: {type: string}, type: array}, loggingRef: {type: string}, match: {items: {properties: {exclude: {properties: {container_names: {items: {type: string}, type: array}, hosts: {items: {type: string}, type: array}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, select: {properties: {container_names: {items: {type: string}, type: array}, hosts: {items: {type: string}, type: array}, labels: {additionalProperties: {type: string}, type: object}}, type: object}}, type: object}, type: array}, outputRefs: {items: {type: string}, type: array}, selectors: {additionalProperties: {type: string}, type: object}}, type: object}, status: {properties: {active: {type: boolean}, problems: {items: {type: string}, type: array}, problemsCount: {type: integer}}, type: object}}, type: object}}, served: true, storage: false, subresources: {status: {}}}, {additionalPrinterColumns: [{jsonPath: .status.active, name: Active, type: boolean}, {jsonPath: .status.problemsCount, name: Problems, type: integer}], name: v1beta1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {filters: {items: {properties: {concat: {properties: {continuous_line_regexp: {type: string}, flush_interval: {type: integer}, keep_partial_key: {type: boolean}, keep_partial_metadata: {type: string}, key: {type: string}, multiline_end_regexp: {type: string}, multiline_start_regexp: {type: string}, n_lines: {type: integer}, partial_cri_logtag_key: {type: string}, partial_cri_stream_key: {type: string}, partial_key: {type: string}, partial_metadata_format: {type: string}, partial_value: {type: string}, separator: {type: string}, stream_identity_key: {type: string}, timeout_label: {type: string}, use_first_timestamp: {type: boolean}, use_partial_cri_logtag: {type: boolean}, use_partial_metadata: {type: string}}, type: object}, dedot: {properties: {de_dot_nested: {type: boolean}, de_dot_separator: {type: string}}, type: object}, detectExceptions: {properties: {force_line_breaks: {type: boolean}, languages: {items: {type: string}, type: array}, match_tag: {type: string}, max_bytes: {type: integer}, max_lines: {type: integer}, message: {type: string}, multiline_flush_interval: {type: string}, remove_tag_prefix: {type: string}, stream: {type: string}}, type: object}, elasticsearch_genid: {properties: {hash_id_key: {type: string}, hash_type: {type: string}, include_tag_in_seed: {type: boolean}, include_time_in_seed: {type: boolean}, record_keys: {type: string}, separator: {type: string}, use_entire_record: {type: boolean}, use_record_as_seed: {type: boolean}}, type: object}, enhanceK8s: {properties: {api_groups: {items: {type: string}, type: array}, bearer_token_file: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cache_refresh: {type: integer}, cache_refresh_variation: {type: integer}, cache_size: {type: integer}, cache_ttl: {type: integer}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, core_api_versions: {items: {type: string}, type: array}, data_type: {type: string}, in_namespace_path: {items: {type: string}, type: array}, in_pod_path: {items: {type: string}, type: array}, kubernetes_url: {type: string}, secret_dir: {type: string}, ssl_partial_chain: {type: boolean}, verify_ssl: {type: boolean}}, type: object}, geoip: {properties: {backend_library: {type: string}, geoip_2_database: {type: string}, geoip_database: {type: string}, geoip_lookup_keys: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, skip_adding_null_record: {type: boolean}}, type: object}, grep: {properties: {and: {items: {properties: {exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, type: array}, exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, or: {items: {properties: {exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, kube_events_timestamp: {properties: {mapped_time_key: {type: string}, timestamp_fields: {items: {type: string}, type: array}}, type: object}, parser: {properties: {emit_invalid_record_to_error: {type: boolean}, hash_value_field: {type: string}, inject_key_prefix: {type: string}, key_name: {type: string}, parse: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, delimiter: {type: string}, delimiter_pattern: {type: string}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, format_firstline: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, keys: {type: string}, label_delimiter: {type: string}, local_time: {type: boolean}, multiline: {items: {type: string}, type: array}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, patterns: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, local_time: {type: boolean}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, parsers: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, delimiter: {type: string}, delimiter_pattern: {type: string}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, format_firstline: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, keys: {type: string}, label_delimiter: {type: string}, local_time: {type: boolean}, multiline: {items: {type: string}, type: array}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, patterns: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, local_time: {type: boolean}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, remove_key_name_field: {type: boolean}, replace_invalid_sequence: {type: boolean}, reserve_data: {type: boolean}, reserve_time: {type: boolean}}, type: object}, prometheus: {properties: {labels: {additionalProperties: {type: string}, type: object}, metrics: {items: {properties: {buckets: {type: string}, desc: {type: string}, key: {type: string}, labels: {additionalProperties: {type: string}, type: object}, name: {type: string}, type: {type: string}}, required: [desc, name, type], type: object}, type: array}}, type: object}, record_modifier: {properties: {char_encoding: {type: string}, prepare_value: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, remove_keys: {type: string}, replaces: {items: {properties: {expression: {type: string}, key: {type: string}, replace: {type: string}}, required: [expression, key, replace], type: object}, type: array}, whitelist_keys: {type: string}}, type: object}, record_transformer: {properties: {auto_typecast: {type: boolean}, enable_ruby: {type: boolean}, keep_keys: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, remove_keys: {type: string}, renew_record: {type: boolean}, renew_time_key: {type: string}}, type: object}, stdout: {properties: {output_type: {type: string}}, type: object}, sumologic: {properties: {collector_key_name: {type: string}, collector_value: {type: string}, exclude_container_regex: {type: string}, exclude_facility_regex: {type: string}, exclude_host_regex: {type: string}, exclude_namespace_regex: {type: string}, exclude_pod_regex: {type: string}, exclude_priority_regex: {type: string}, exclude_unit_regex: {type: string}, log_format: {type: string}, source_category: {type: string}, source_category_key_name: {type: string}, source_category_prefix: {type: string}, source_category_replace_dash: {type: string}, source_host: {type: string}, source_host_key_name: {type: string}, source_name: {type: string}, source_name_key_name: {type: string}, tracing_annotation_prefix: {type: string}, tracing_container_name: {type: string}, tracing_format: {type: boolean}, tracing_host: {type: string}, tracing_label_prefix: {type: string}, tracing_namespace: {type: string}, tracing_pod: {type: string}, tracing_pod_id: {type: string}}, type: object}, tag_normaliser: {properties: {format: {type: string}, match_tag: {type: string}}, type: object}, throttle: {properties: {group_bucket_limit: {type: integer}, group_bucket_period_s: {type: integer}, group_drop_logs: {type: boolean}, group_key: {type: string}, group_reset_rate_s: {type: integer}, group_warning_delay_s: {type: integer}}, type: object}}, type: object}, type: array}, globalOutputRefs: {items: {type: string}, type: array}, localOutputRefs: {items: {type: string}, type: array}, loggingRef: {type: string}, match: {items: {properties: {exclude: {properties: {container_names: {items: {type: string}, type: array}, hosts: {items: {type: string}, type: array}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, select: {properties: {container_names: {items: {type: string}, type: array}, hosts: {items: {type: string}, type: array}, labels: {additionalProperties: {type: string}, type: object}}, type: object}}, type: object}, type: array}, outputRefs: {items: {type: string}, type: array}, selectors: {additionalProperties: {type: string}, type: object}}, type: object}, status: {properties: {active: {type: boolean}, problems: {items: {type: string}, type: array}, problemsCount: {type: integer}}, type: object}}, type: object}}, served: true, storage: true, subresources: {status: {}}}]}, status: {acceptedNames: {kind: "", plural: ""}, conditions: [], storedVersions: []}}
---
{apiVersion: apiextensions.k8s.io/v1, kind: CustomResourceDefinition, metadata: {annotations: {controller-gen.kubebuilder.io/version: v0.11.3}, creationTimestamp: null, name: keyrings.core.opni.io}, spec: {group: core.opni.io, names: {kind: Keyring, listKind: KeyringList, plural: keyrings, singular: keyring}, scope: Namespaced, versions: [{name: v1beta1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, data: {format: byte, type: string}, kind: {type: string}, metadata: {type: object}}, type: object}}, served: true, storage: true}]}}
---
{apiVersion: apiextensions.k8s.io/v1, kind: CustomResourceDefinition, metadata: {annotations: {controller-gen.kubebuilder.io/version: v0.11.3}, creationTimestamp: null, name: logadapters.logging.opni.io}, spec: {group: logging.opni.io, names: {kind: LogAdapter, listKind: LogAdapterList, plural: logadapters, singular: logadapter}, scope: Cluster, versions: [{name: v1beta1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {aks: {type: object}, containerLogDir: {type: string}, controlNamespace: {type: string}, eks: {type: object}, fluentConfig: {properties: {fluentbit: {properties: {HostNetwork: {type: boolean}, affinity: {properties: {nodeAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {preference: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object, x-kubernetes-map-type: atomic}, weight: {format: int32, type: integer}}, required: [preference, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {properties: {nodeSelectorTerms: {items: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object, x-kubernetes-map-type: atomic}, type: array}}, required: [nodeSelectorTerms], type: object, x-kubernetes-map-type: atomic}}, type: object}, podAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}, podAntiAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}}, type: object}, annotations: {additionalProperties: {type: string}, type: object}, bufferStorage: {properties: {storage.backlog.mem_limit: {type: string}, storage.checksum: {type: string}, storage.path: {type: string}, storage.sync: {type: string}}, type: object}, bufferStorageVolume: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object, x-kubernetes-map-type: atomic}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}}, required: [kind, name], type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, bufferVolumeArgs: {items: {type: string}, type: array}, bufferVolumeImage: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, bufferVolumeMetrics: {properties: {interval: {type: string}, path: {type: string}, port: {format: int32, type: integer}, prometheusAnnotations: {type: boolean}, prometheusRules: {type: boolean}, serviceMonitor: {type: boolean}, serviceMonitorConfig: {properties: {additionalLabels: {additionalProperties: {type: string}, type: object}, honorLabels: {type: boolean}, metricRelabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, relabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, scheme: {type: string}, tlsConfig: {properties: {ca: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, caFile: {type: string}, cert: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, certFile: {type: string}, insecureSkipVerify: {type: boolean}, keyFile: {type: string}, keySecret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, serverName: {type: string}}, type: object}}, type: object}, timeout: {type: string}}, type: object}, coroStackSize: {format: int32, type: integer}, customConfigSecret: {type: string}, daemonsetAnnotations: {additionalProperties: {type: string}, type: object}, disableKubernetesFilter: {type: boolean}, dnsConfig: {properties: {nameservers: {items: {type: string}, type: array}, options: {items: {properties: {name: {type: string}, value: {type: string}}, type: object}, type: array}, searches: {items: {type: string}, type: array}}, type: object}, dnsPolicy: {type: string}, enableUpstream: {type: boolean}, envVars: {items: {properties: {name: {type: string}, value: {type: string}, valueFrom: {properties: {configMapKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object, x-kubernetes-map-type: atomic}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object, x-kubernetes-map-type: atomic}, secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}}, required: [name], type: object}, type: array}, extraVolumeMounts: {items: {properties: {destination: {pattern: ^/.+$, type: string}, readOnly: {type: boolean}, source: {pattern: ^/.+$, type: string}}, required: [destination, source], type: object}, type: array}, filterAws: {properties: {Match: {type: string}, account_id: {type: boolean}, ami_id: {type: boolean}, az: {type: boolean}, ec2_instance_id: {type: boolean}, ec2_instance_type: {type: boolean}, hostname: {type: boolean}, imds_version: {type: string}, private_ip: {type: boolean}, vpc_id: {type: boolean}}, type: object}, filterKubernetes: {properties: {Annotations: {type: string}, Buffer_Size: {type: string}, Cache_Use_Docker_Id: {type: string}, DNS_Retries: {type: string}, DNS_Wait_Time: {type: string}, Dummy_Meta: {type: string}, K8S-Logging.Exclude: {type: string}, K8S-Logging.Parser: {type: string}, Keep_Log: {type: string}, Kube_CA_File: {type: string}, Kube_CA_Path: {type: string}, Kube_Meta_Cache_TTL: {type: string}, Kube_Tag_Prefix: {type: string}, Kube_Token_File: {type: string}, Kube_Token_TTL: {type: string}, Kube_URL: {type: string}, Kube_meta_preload_cache_dir: {type: string}, Kubelet_Port: {type: string}, Labels: {type: string}, Match: {type: string}, Merge_Log: {type: string}, Merge_Log_Key: {type: string}, Merge_Log_Trim: {type: string}, Merge_Parser: {type: string}, Regex_Parser: {type: string}, Use_Journal: {type: string}, Use_Kubelet: {type: string}, tls.debug: {type: string}, tls.verify: {type: string}}, type: object}, filterModify: {items: {properties: {conditions: {items: {properties: {A_key_matches: {properties: {key: {type: string}}, type: object}, Key_does_not_exist: {properties: {key: {type: string}, value: {type: string}}, type: object}, Key_exists: {properties: {key: {type: string}}, type: object}, Key_value_does_not_equal: {properties: {key: {type: string}, value: {type: string}}, type: object}, Key_value_does_not_match: {properties: {key: {type: string}, value: {type: string}}, type: object}, Key_value_equals: {properties: {key: {type: string}, value: {type: string}}, type: object}, Key_value_matches: {properties: {key: {type: string}, value: {type: string}}, type: object}, Matching_keys_do_not_have_matching_values: {properties: {key: {type: string}, value: {type: string}}, type: object}, Matching_keys_have_matching_values: {properties: {key: {type: string}, value: {type: string}}, type: object}, No_key_matches: {properties: {key: {type: string}}, type: object}}, type: object}, type: array}, rules: {items: {properties: {Add: {properties: {key: {type: string}, value: {type: string}}, type: object}, Copy: {properties: {key: {type: string}, value: {type: string}}, type: object}, Hard_copy: {properties: {key: {type: string}, value: {type: string}}, type: object}, Hard_rename: {properties: {key: {type: string}, value: {type: string}}, type: object}, Remove: {properties: {key: {type: string}}, type: object}, Remove_regex: {properties: {key: {type: string}}, type: object}, Remove_wildcard: {properties: {key: {type: string}}, type: object}, Rename: {properties: {key: {type: string}, value: {type: string}}, type: object}, Set: {properties: {key: {type: string}, value: {type: string}}, type: object}}, type: object}, type: array}}, type: object}, type: array}, flush: {format: int32, type: integer}, forwardOptions: {properties: {Require_ack_response: {type: boolean}, Retry_Limit: {type: string}, Send_options: {type: boolean}, Tag: {type: string}, Time_as_Integer: {type: boolean}, storage.total_limit_size: {type: string}}, type: object}, grace: {format: int32, type: integer}, image: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, inputTail: {properties: {Buffer_Chunk_Size: {type: string}, Buffer_Max_Size: {type: string}, DB: {type: string}, DB.journal_mode: {type: string}, DB.locking: {type: boolean}, DB_Sync: {type: string}, Docker_Mode: {type: string}, Docker_Mode_Flush: {type: string}, Docker_Mode_Parser: {type: string}, Exclude_Path: {type: string}, Ignore_Older: {type: string}, Key: {type: string}, Mem_Buf_Limit: {type: string}, Multiline: {type: string}, Multiline_Flush: {type: string}, Parser: {type: string}, Parser_Firstline: {type: string}, Parser_N: {items: {type: string}, type: array}, Path: {type: string}, Path_Key: {type: string}, Read_From_Head: {type: boolean}, Refresh_Interval: {type: string}, Rotate_Wait: {type: string}, Skip_Long_Lines: {type: string}, Tag: {type: string}, Tag_Regex: {type: string}, multiline.parser: {items: {type: string}, type: array}, storage.type: {type: string}}, type: object}, labels: {additionalProperties: {type: string}, type: object}, livenessDefaultCheck: {type: boolean}, livenessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, logLevel: {type: string}, metrics: {properties: {interval: {type: string}, path: {type: string}, port: {format: int32, type: integer}, prometheusAnnotations: {type: boolean}, prometheusRules: {type: boolean}, serviceMonitor: {type: boolean}, serviceMonitorConfig: {properties: {additionalLabels: {additionalProperties: {type: string}, type: object}, honorLabels: {type: boolean}, metricRelabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, relabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, scheme: {type: string}, tlsConfig: {properties: {ca: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, caFile: {type: string}, cert: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, certFile: {type: string}, insecureSkipVerify: {type: boolean}, keyFile: {type: string}, keySecret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, serverName: {type: string}}, type: object}}, type: object}, timeout: {type: string}}, type: object}, mountPath: {type: string}, network: {properties: {connectTimeout: {format: int32, type: integer}, connectTimeoutLogError: {type: boolean}, dnsMode: {type: string}, dnsPreferIpv4: {type: boolean}, dnsResolver: {type: string}, keepalive: {type: boolean}, keepaliveIdleTimeout: {format: int32, type: integer}, keepaliveMaxRecycle: {format: int32, type: integer}, sourceAddress: {type: string}}, type: object}, nodeSelector: {additionalProperties: {type: string}, type: object}, parser: {type: string}, podPriorityClassName: {type: string}, position_db: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object, x-kubernetes-map-type: atomic}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}}, required: [kind, name], type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, positiondb: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object, x-kubernetes-map-type: atomic}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}}, required: [kind, name], type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, readinessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, security: {properties: {podSecurityContext: {properties: {fsGroup: {format: int64, type: integer}, fsGroupChangePolicy: {type: string}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, supplementalGroups: {items: {format: int64, type: integer}, type: array}, sysctls: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, podSecurityPolicyCreate: {type: boolean}, roleBasedAccessControlCreate: {type: boolean}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, serviceAccount: {type: string}}, type: object}, serviceAccount: {properties: {automountServiceAccountToken: {type: boolean}, imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, secrets: {items: {properties: {apiVersion: {type: string}, fieldPath: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}, resourceVersion: {type: string}, uid: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}}, type: object}, syslogng_output: {properties: {json_date_format: {type: string}, json_date_key: {type: string}}, type: object}, targetHost: {type: string}, targetPort: {format: int32, type: integer}, tls: {properties: {enabled: {type: boolean}, secretName: {type: string}, sharedKey: {type: string}}, required: [enabled], type: object}, tolerations: {items: {properties: {effect: {type: string}, key: {type: string}, operator: {type: string}, tolerationSeconds: {format: int64, type: integer}, value: {type: string}}, type: object}, type: array}, updateStrategy: {properties: {rollingUpdate: {properties: {maxSurge: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, maxUnavailable: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, type: object}, type: {type: string}}, type: object}}, type: object}, fluentd: {properties: {affinity: {properties: {nodeAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {preference: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object, x-kubernetes-map-type: atomic}, weight: {format: int32, type: integer}}, required: [preference, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {properties: {nodeSelectorTerms: {items: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object, x-kubernetes-map-type: atomic}, type: array}}, required: [nodeSelectorTerms], type: object, x-kubernetes-map-type: atomic}}, type: object}, podAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}, podAntiAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}}, type: object}, annotations: {additionalProperties: {type: string}, type: object}, bufferStorageVolume: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object, x-kubernetes-map-type: atomic}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}}, required: [kind, name], type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, bufferVolumeArgs: {items: {type: string}, type: array}, bufferVolumeImage: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, bufferVolumeMetrics: {properties: {interval: {type: string}, path: {type: string}, port: {format: int32, type: integer}, prometheusAnnotations: {type: boolean}, prometheusRules: {type: boolean}, serviceMonitor: {type: boolean}, serviceMonitorConfig: {properties: {additionalLabels: {additionalProperties: {type: string}, type: object}, honorLabels: {type: boolean}, metricRelabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, relabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, scheme: {type: string}, tlsConfig: {properties: {ca: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, caFile: {type: string}, cert: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, certFile: {type: string}, insecureSkipVerify: {type: boolean}, keyFile: {type: string}, keySecret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, serverName: {type: string}}, type: object}}, type: object}, timeout: {type: string}}, type: object}, compressConfigFile: {type: boolean}, configCheckAnnotations: {additionalProperties: {type: string}, type: object}, configCheckResources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, configReloaderImage: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, configReloaderResources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, disablePvc: {type: boolean}, dnsConfig: {properties: {nameservers: {items: {type: string}, type: array}, options: {items: {properties: {name: {type: string}, value: {type: string}}, type: object}, type: array}, searches: {items: {type: string}, type: array}}, type: object}, dnsPolicy: {type: string}, enableMsgpackTimeSupport: {type: boolean}, envVars: {items: {properties: {name: {type: string}, value: {type: string}, valueFrom: {properties: {configMapKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object, x-kubernetes-map-type: atomic}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object, x-kubernetes-map-type: atomic}, secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}}, required: [name], type: object}, type: array}, extraArgs: {items: {type: string}, type: array}, extraVolumes: {items: {properties: {containerName: {type: string}, path: {type: string}, volume: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object, x-kubernetes-map-type: atomic}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}}, required: [kind, name], type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, volumeName: {type: string}}, type: object}, type: array}, fluentLogDestination: {type: string}, fluentOutLogrotate: {properties: {age: {type: string}, enabled: {type: boolean}, path: {type: string}, size: {type: string}}, required: [enabled], type: object}, fluentdPvcSpec: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object, x-kubernetes-map-type: atomic}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}}, required: [kind, name], type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, forwardInputConfig: {properties: {add_tag_prefix: {type: string}, bind: {type: string}, chunk_size_limit: {type: string}, chunk_size_warn_limit: {type: string}, deny_keepalive: {type: boolean}, linger_timeout: {type: integer}, port: {type: string}, resolve_hostname: {type: boolean}, security: {properties: {allow_anonymous_source: {type: boolean}, self_hostname: {type: string}, shared_key: {type: string}, user_auth: {type: boolean}}, required: [self_hostname, shared_key], type: object}, send_keepalive_packet: {type: boolean}, skip_invalid_event: {type: boolean}, source_address_key: {type: string}, sourceHostnameKey: {type: string}, tag: {type: string}, transport: {properties: {ca_cert_path: {type: string}, ca_path: {type: string}, ca_private_key_passphrase: {type: string}, ca_private_key_path: {type: string}, cert_path: {type: string}, ciphers: {type: string}, client_cert_auth: {type: boolean}, insecure: {type: boolean}, private_key_passphrase: {type: string}, private_key_path: {type: string}, protocol: {type: string}, version: {type: string}}, type: object}}, type: object}, ignoreRepeatedLogInterval: {type: string}, ignoreSameLogInterval: {type: string}, image: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, labels: {additionalProperties: {type: string}, type: object}, livenessDefaultCheck: {type: boolean}, livenessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, logLevel: {type: string}, metrics: {properties: {interval: {type: string}, path: {type: string}, port: {format: int32, type: integer}, prometheusAnnotations: {type: boolean}, prometheusRules: {type: boolean}, serviceMonitor: {type: boolean}, serviceMonitorConfig: {properties: {additionalLabels: {additionalProperties: {type: string}, type: object}, honorLabels: {type: boolean}, metricRelabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, relabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, scheme: {type: string}, tlsConfig: {properties: {ca: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, caFile: {type: string}, cert: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, certFile: {type: string}, insecureSkipVerify: {type: boolean}, keyFile: {type: string}, keySecret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, serverName: {type: string}}, type: object}}, type: object}, timeout: {type: string}}, type: object}, nodeSelector: {additionalProperties: {type: string}, type: object}, podPriorityClassName: {type: string}, port: {format: int32, type: integer}, readinessDefaultCheck: {properties: {bufferFileNumber: {type: boolean}, bufferFileNumberMax: {format: int32, type: integer}, bufferFreeSpace: {type: boolean}, bufferFreeSpaceThreshold: {format: int32, type: integer}, failureThreshold: {format: int32, type: integer}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, readinessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, rootDir: {type: string}, scaling: {properties: {drain: {properties: {annotations: {additionalProperties: {type: string}, type: object}, deleteVolume: {type: boolean}, enabled: {type: boolean}, image: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, pauseImage: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}}, type: object}, podManagementPolicy: {type: string}, replicas: {type: integer}}, type: object}, security: {properties: {podSecurityContext: {properties: {fsGroup: {format: int64, type: integer}, fsGroupChangePolicy: {type: string}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, supplementalGroups: {items: {format: int64, type: integer}, type: array}, sysctls: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, podSecurityPolicyCreate: {type: boolean}, roleBasedAccessControlCreate: {type: boolean}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, serviceAccount: {type: string}}, type: object}, serviceAccount: {properties: {automountServiceAccountToken: {type: boolean}, imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, secrets: {items: {properties: {apiVersion: {type: string}, fieldPath: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}, resourceVersion: {type: string}, uid: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}}, type: object}, statefulsetAnnotations: {additionalProperties: {type: string}, type: object}, tls: {properties: {enabled: {type: boolean}, secretName: {type: string}, sharedKey: {type: string}}, required: [enabled], type: object}, tolerations: {items: {properties: {effect: {type: string}, key: {type: string}, operator: {type: string}, tolerationSeconds: {format: int64, type: integer}, value: {type: string}}, type: object}, type: array}, topologySpreadConstraints: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, matchLabelKeys: {items: {type: string}, type: array, x-kubernetes-list-type: atomic}, maxSkew: {format: int32, type: integer}, minDomains: {format: int32, type: integer}, nodeAffinityPolicy: {type: string}, nodeTaintsPolicy: {type: string}, topologyKey: {type: string}, whenUnsatisfiable: {type: string}}, required: [maxSkew, topologyKey, whenUnsatisfiable], type: object}, type: array}, volumeModImage: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, volumeMountChmod: {type: boolean}, workers: {format: int32, type: integer}}, type: object}}, type: object}, gke: {type: object}, k3s: {properties: {containerEngine: {type: string}, logPath: {type: string}}, type: object}, opniCluster: {properties: {name: {type: string}, namespace: {type: string}}, type: object}, provider: {enum: [aks, eks, gke, k3s, rke, rke2, generic], type: string}, rke: {properties: {logLevel: {type: string}}, type: object}, rke2: {properties: {logPath: {type: string}}, type: object}, rootFluentConfig: {properties: {fluentbit: {properties: {HostNetwork: {type: boolean}, affinity: {properties: {nodeAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {preference: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object, x-kubernetes-map-type: atomic}, weight: {format: int32, type: integer}}, required: [preference, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {properties: {nodeSelectorTerms: {items: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object, x-kubernetes-map-type: atomic}, type: array}}, required: [nodeSelectorTerms], type: object, x-kubernetes-map-type: atomic}}, type: object}, podAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}, podAntiAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}}, type: object}, annotations: {additionalProperties: {type: string}, type: object}, bufferStorage: {properties: {storage.backlog.mem_limit: {type: string}, storage.checksum: {type: string}, storage.path: {type: string}, storage.sync: {type: string}}, type: object}, bufferStorageVolume: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object, x-kubernetes-map-type: atomic}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}}, required: [kind, name], type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, bufferVolumeArgs: {items: {type: string}, type: array}, bufferVolumeImage: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, bufferVolumeMetrics: {properties: {interval: {type: string}, path: {type: string}, port: {format: int32, type: integer}, prometheusAnnotations: {type: boolean}, prometheusRules: {type: boolean}, serviceMonitor: {type: boolean}, serviceMonitorConfig: {properties: {additionalLabels: {additionalProperties: {type: string}, type: object}, honorLabels: {type: boolean}, metricRelabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, relabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, scheme: {type: string}, tlsConfig: {properties: {ca: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, caFile: {type: string}, cert: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, certFile: {type: string}, insecureSkipVerify: {type: boolean}, keyFile: {type: string}, keySecret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, serverName: {type: string}}, type: object}}, type: object}, timeout: {type: string}}, type: object}, coroStackSize: {format: int32, type: integer}, customConfigSecret: {type: string}, daemonsetAnnotations: {additionalProperties: {type: string}, type: object}, disableKubernetesFilter: {type: boolean}, dnsConfig: {properties: {nameservers: {items: {type: string}, type: array}, options: {items: {properties: {name: {type: string}, value: {type: string}}, type: object}, type: array}, searches: {items: {type: string}, type: array}}, type: object}, dnsPolicy: {type: string}, enableUpstream: {type: boolean}, envVars: {items: {properties: {name: {type: string}, value: {type: string}, valueFrom: {properties: {configMapKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object, x-kubernetes-map-type: atomic}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object, x-kubernetes-map-type: atomic}, secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}}, required: [name], type: object}, type: array}, extraVolumeMounts: {items: {properties: {destination: {pattern: ^/.+$, type: string}, readOnly: {type: boolean}, source: {pattern: ^/.+$, type: string}}, required: [destination, source], type: object}, type: array}, filterAws: {properties: {Match: {type: string}, account_id: {type: boolean}, ami_id: {type: boolean}, az: {type: boolean}, ec2_instance_id: {type: boolean}, ec2_instance_type: {type: boolean}, hostname: {type: boolean}, imds_version: {type: string}, private_ip: {type: boolean}, vpc_id: {type: boolean}}, type: object}, filterKubernetes: {properties: {Annotations: {type: string}, Buffer_Size: {type: string}, Cache_Use_Docker_Id: {type: string}, DNS_Retries: {type: string}, DNS_Wait_Time: {type: string}, Dummy_Meta: {type: string}, K8S-Logging.Exclude: {type: string}, K8S-Logging.Parser: {type: string}, Keep_Log: {type: string}, Kube_CA_File: {type: string}, Kube_CA_Path: {type: string}, Kube_Meta_Cache_TTL: {type: string}, Kube_Tag_Prefix: {type: string}, Kube_Token_File: {type: string}, Kube_Token_TTL: {type: string}, Kube_URL: {type: string}, Kube_meta_preload_cache_dir: {type: string}, Kubelet_Port: {type: string}, Labels: {type: string}, Match: {type: string}, Merge_Log: {type: string}, Merge_Log_Key: {type: string}, Merge_Log_Trim: {type: string}, Merge_Parser: {type: string}, Regex_Parser: {type: string}, Use_Journal: {type: string}, Use_Kubelet: {type: string}, tls.debug: {type: string}, tls.verify: {type: string}}, type: object}, filterModify: {items: {properties: {conditions: {items: {properties: {A_key_matches: {properties: {key: {type: string}}, type: object}, Key_does_not_exist: {properties: {key: {type: string}, value: {type: string}}, type: object}, Key_exists: {properties: {key: {type: string}}, type: object}, Key_value_does_not_equal: {properties: {key: {type: string}, value: {type: string}}, type: object}, Key_value_does_not_match: {properties: {key: {type: string}, value: {type: string}}, type: object}, Key_value_equals: {properties: {key: {type: string}, value: {type: string}}, type: object}, Key_value_matches: {properties: {key: {type: string}, value: {type: string}}, type: object}, Matching_keys_do_not_have_matching_values: {properties: {key: {type: string}, value: {type: string}}, type: object}, Matching_keys_have_matching_values: {properties: {key: {type: string}, value: {type: string}}, type: object}, No_key_matches: {properties: {key: {type: string}}, type: object}}, type: object}, type: array}, rules: {items: {properties: {Add: {properties: {key: {type: string}, value: {type: string}}, type: object}, Copy: {properties: {key: {type: string}, value: {type: string}}, type: object}, Hard_copy: {properties: {key: {type: string}, value: {type: string}}, type: object}, Hard_rename: {properties: {key: {type: string}, value: {type: string}}, type: object}, Remove: {properties: {key: {type: string}}, type: object}, Remove_regex: {properties: {key: {type: string}}, type: object}, Remove_wildcard: {properties: {key: {type: string}}, type: object}, Rename: {properties: {key: {type: string}, value: {type: string}}, type: object}, Set: {properties: {key: {type: string}, value: {type: string}}, type: object}}, type: object}, type: array}}, type: object}, type: array}, flush: {format: int32, type: integer}, forwardOptions: {properties: {Require_ack_response: {type: boolean}, Retry_Limit: {type: string}, Send_options: {type: boolean}, Tag: {type: string}, Time_as_Integer: {type: boolean}, storage.total_limit_size: {type: string}}, type: object}, grace: {format: int32, type: integer}, image: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, inputTail: {properties: {Buffer_Chunk_Size: {type: string}, Buffer_Max_Size: {type: string}, DB: {type: string}, DB.journal_mode: {type: string}, DB.locking: {type: boolean}, DB_Sync: {type: string}, Docker_Mode: {type: string}, Docker_Mode_Flush: {type: string}, Docker_Mode_Parser: {type: string}, Exclude_Path: {type: string}, Ignore_Older: {type: string}, Key: {type: string}, Mem_Buf_Limit: {type: string}, Multiline: {type: string}, Multiline_Flush: {type: string}, Parser: {type: string}, Parser_Firstline: {type: string}, Parser_N: {items: {type: string}, type: array}, Path: {type: string}, Path_Key: {type: string}, Read_From_Head: {type: boolean}, Refresh_Interval: {type: string}, Rotate_Wait: {type: string}, Skip_Long_Lines: {type: string}, Tag: {type: string}, Tag_Regex: {type: string}, multiline.parser: {items: {type: string}, type: array}, storage.type: {type: string}}, type: object}, labels: {additionalProperties: {type: string}, type: object}, livenessDefaultCheck: {type: boolean}, livenessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, logLevel: {type: string}, metrics: {properties: {interval: {type: string}, path: {type: string}, port: {format: int32, type: integer}, prometheusAnnotations: {type: boolean}, prometheusRules: {type: boolean}, serviceMonitor: {type: boolean}, serviceMonitorConfig: {properties: {additionalLabels: {additionalProperties: {type: string}, type: object}, honorLabels: {type: boolean}, metricRelabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, relabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, scheme: {type: string}, tlsConfig: {properties: {ca: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, caFile: {type: string}, cert: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, certFile: {type: string}, insecureSkipVerify: {type: boolean}, keyFile: {type: string}, keySecret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, serverName: {type: string}}, type: object}}, type: object}, timeout: {type: string}}, type: object}, mountPath: {type: string}, network: {properties: {connectTimeout: {format: int32, type: integer}, connectTimeoutLogError: {type: boolean}, dnsMode: {type: string}, dnsPreferIpv4: {type: boolean}, dnsResolver: {type: string}, keepalive: {type: boolean}, keepaliveIdleTimeout: {format: int32, type: integer}, keepaliveMaxRecycle: {format: int32, type: integer}, sourceAddress: {type: string}}, type: object}, nodeSelector: {additionalProperties: {type: string}, type: object}, parser: {type: string}, podPriorityClassName: {type: string}, position_db: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object, x-kubernetes-map-type: atomic}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}}, required: [kind, name], type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, positiondb: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object, x-kubernetes-map-type: atomic}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}}, required: [kind, name], type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, readinessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, security: {properties: {podSecurityContext: {properties: {fsGroup: {format: int64, type: integer}, fsGroupChangePolicy: {type: string}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, supplementalGroups: {items: {format: int64, type: integer}, type: array}, sysctls: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, podSecurityPolicyCreate: {type: boolean}, roleBasedAccessControlCreate: {type: boolean}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, serviceAccount: {type: string}}, type: object}, serviceAccount: {properties: {automountServiceAccountToken: {type: boolean}, imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, secrets: {items: {properties: {apiVersion: {type: string}, fieldPath: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}, resourceVersion: {type: string}, uid: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}}, type: object}, syslogng_output: {properties: {json_date_format: {type: string}, json_date_key: {type: string}}, type: object}, targetHost: {type: string}, targetPort: {format: int32, type: integer}, tls: {properties: {enabled: {type: boolean}, secretName: {type: string}, sharedKey: {type: string}}, required: [enabled], type: object}, tolerations: {items: {properties: {effect: {type: string}, key: {type: string}, operator: {type: string}, tolerationSeconds: {format: int64, type: integer}, value: {type: string}}, type: object}, type: array}, updateStrategy: {properties: {rollingUpdate: {properties: {maxSurge: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, maxUnavailable: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, type: object}, type: {type: string}}, type: object}}, type: object}, fluentd: {properties: {affinity: {properties: {nodeAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {preference: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object, x-kubernetes-map-type: atomic}, weight: {format: int32, type: integer}}, required: [preference, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {properties: {nodeSelectorTerms: {items: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object, x-kubernetes-map-type: atomic}, type: array}}, required: [nodeSelectorTerms], type: object, x-kubernetes-map-type: atomic}}, type: object}, podAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}, podAntiAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}}, type: object}, annotations: {additionalProperties: {type: string}, type: object}, bufferStorageVolume: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object, x-kubernetes-map-type: atomic}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}}, required: [kind, name], type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, bufferVolumeArgs: {items: {type: string}, type: array}, bufferVolumeImage: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, bufferVolumeMetrics: {properties: {interval: {type: string}, path: {type: string}, port: {format: int32, type: integer}, prometheusAnnotations: {type: boolean}, prometheusRules: {type: boolean}, serviceMonitor: {type: boolean}, serviceMonitorConfig: {properties: {additionalLabels: {additionalProperties: {type: string}, type: object}, honorLabels: {type: boolean}, metricRelabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, relabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, scheme: {type: string}, tlsConfig: {properties: {ca: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, caFile: {type: string}, cert: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, certFile: {type: string}, insecureSkipVerify: {type: boolean}, keyFile: {type: string}, keySecret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, serverName: {type: string}}, type: object}}, type: object}, timeout: {type: string}}, type: object}, compressConfigFile: {type: boolean}, configCheckAnnotations: {additionalProperties: {type: string}, type: object}, configCheckResources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, configReloaderImage: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, configReloaderResources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, disablePvc: {type: boolean}, dnsConfig: {properties: {nameservers: {items: {type: string}, type: array}, options: {items: {properties: {name: {type: string}, value: {type: string}}, type: object}, type: array}, searches: {items: {type: string}, type: array}}, type: object}, dnsPolicy: {type: string}, enableMsgpackTimeSupport: {type: boolean}, envVars: {items: {properties: {name: {type: string}, value: {type: string}, valueFrom: {properties: {configMapKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object, x-kubernetes-map-type: atomic}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object, x-kubernetes-map-type: atomic}, secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}}, required: [name], type: object}, type: array}, extraArgs: {items: {type: string}, type: array}, extraVolumes: {items: {properties: {containerName: {type: string}, path: {type: string}, volume: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object, x-kubernetes-map-type: atomic}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}}, required: [kind, name], type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, volumeName: {type: string}}, type: object}, type: array}, fluentLogDestination: {type: string}, fluentOutLogrotate: {properties: {age: {type: string}, enabled: {type: boolean}, path: {type: string}, size: {type: string}}, required: [enabled], type: object}, fluentdPvcSpec: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object, x-kubernetes-map-type: atomic}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}}, required: [kind, name], type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, forwardInputConfig: {properties: {add_tag_prefix: {type: string}, bind: {type: string}, chunk_size_limit: {type: string}, chunk_size_warn_limit: {type: string}, deny_keepalive: {type: boolean}, linger_timeout: {type: integer}, port: {type: string}, resolve_hostname: {type: boolean}, security: {properties: {allow_anonymous_source: {type: boolean}, self_hostname: {type: string}, shared_key: {type: string}, user_auth: {type: boolean}}, required: [self_hostname, shared_key], type: object}, send_keepalive_packet: {type: boolean}, skip_invalid_event: {type: boolean}, source_address_key: {type: string}, sourceHostnameKey: {type: string}, tag: {type: string}, transport: {properties: {ca_cert_path: {type: string}, ca_path: {type: string}, ca_private_key_passphrase: {type: string}, ca_private_key_path: {type: string}, cert_path: {type: string}, ciphers: {type: string}, client_cert_auth: {type: boolean}, insecure: {type: boolean}, private_key_passphrase: {type: string}, private_key_path: {type: string}, protocol: {type: string}, version: {type: string}}, type: object}}, type: object}, ignoreRepeatedLogInterval: {type: string}, ignoreSameLogInterval: {type: string}, image: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, labels: {additionalProperties: {type: string}, type: object}, livenessDefaultCheck: {type: boolean}, livenessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, logLevel: {type: string}, metrics: {properties: {interval: {type: string}, path: {type: string}, port: {format: int32, type: integer}, prometheusAnnotations: {type: boolean}, prometheusRules: {type: boolean}, serviceMonitor: {type: boolean}, serviceMonitorConfig: {properties: {additionalLabels: {additionalProperties: {type: string}, type: object}, honorLabels: {type: boolean}, metricRelabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, relabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, scheme: {type: string}, tlsConfig: {properties: {ca: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, caFile: {type: string}, cert: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}}, type: object}, certFile: {type: string}, insecureSkipVerify: {type: boolean}, keyFile: {type: string}, keySecret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object, x-kubernetes-map-type: atomic}, serverName: {type: string}}, type: object}}, type: object}, timeout: {type: string}}, type: object}, nodeSelector: {additionalProperties: {type: string}, type: object}, podPriorityClassName: {type: string}, port: {format: int32, type: integer}, readinessDefaultCheck: {properties: {bufferFileNumber: {type: boolean}, bufferFileNumberMax: {format: int32, type: integer}, bufferFreeSpace: {type: boolean}, bufferFreeSpaceThreshold: {format: int32, type: integer}, failureThreshold: {format: int32, type: integer}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, readinessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, resources: {properties: {claims: {items: {properties: {name: {type: string}}, required: [name], type: object}, type: array, x-kubernetes-list-map-keys: [name], x-kubernetes-list-type: map}, limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, rootDir: {type: string}, scaling: {properties: {drain: {properties: {annotations: {additionalProperties: {type: string}, type: object}, deleteVolume: {type: boolean}, enabled: {type: boolean}, image: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, pauseImage: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}}, type: object}, podManagementPolicy: {type: string}, replicas: {type: integer}}, type: object}, security: {properties: {podSecurityContext: {properties: {fsGroup: {format: int64, type: integer}, fsGroupChangePolicy: {type: string}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, supplementalGroups: {items: {format: int64, type: integer}, type: array}, sysctls: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, podSecurityPolicyCreate: {type: boolean}, roleBasedAccessControlCreate: {type: boolean}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, serviceAccount: {type: string}}, type: object}, serviceAccount: {properties: {automountServiceAccountToken: {type: boolean}, imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, secrets: {items: {properties: {apiVersion: {type: string}, fieldPath: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}, resourceVersion: {type: string}, uid: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}}, type: object}, statefulsetAnnotations: {additionalProperties: {type: string}, type: object}, tls: {properties: {enabled: {type: boolean}, secretName: {type: string}, sharedKey: {type: string}}, required: [enabled], type: object}, tolerations: {items: {properties: {effect: {type: string}, key: {type: string}, operator: {type: string}, tolerationSeconds: {format: int64, type: integer}, value: {type: string}}, type: object}, type: array}, topologySpreadConstraints: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object, x-kubernetes-map-type: atomic}, matchLabelKeys: {items: {type: string}, type: array, x-kubernetes-list-type: atomic}, maxSkew: {format: int32, type: integer}, minDomains: {format: int32, type: integer}, nodeAffinityPolicy: {type: string}, nodeTaintsPolicy: {type: string}, topologyKey: {type: string}, whenUnsatisfiable: {type: string}}, required: [maxSkew, topologyKey, whenUnsatisfiable], type: object}, type: array}, volumeModImage: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object, x-kubernetes-map-type: atomic}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, volumeMountChmod: {type: boolean}, workers: {format: int32, type: integer}}, type: object}}, type: object}, seLinuxEnabled: {type: boolean}}, required: [provider], type: object}, status: {properties: {conditions: {items: {type: string}, type: array}, message: {type: string}, phase: {type: string}}, type: object}}, type: object}}, served: true, storage: true, subresources: {status: {}}}]}}
---
{apiVersion: apiextensions.k8s.io/v1, kind: CustomResourceDefinition, metadata: {annotations: {controller-gen.kubebuilder.io/version: v0.6.0}, creationTimestamp: null, name: loggings.logging.opni.io}, spec: {group: logging.opni.io, names: {categories: [logging-all], kind: Logging, listKind: LoggingList, plural: loggings, singular: logging}, scope: Cluster, versions: [{name: v1alpha1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {type: object}, status: {type: object}}, type: object}}, served: true, storage: false, subresources: {status: {}}}, {name: v1beta1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {allowClusterResourcesFromAllNamespaces: {type: boolean}, clusterDomain: {type: string}, controlNamespace: {type: string}, defaultFlow: {properties: {filters: {items: {properties: {concat: {properties: {continuous_line_regexp: {type: string}, flush_interval: {type: integer}, keep_partial_key: {type: boolean}, keep_partial_metadata: {type: string}, key: {type: string}, multiline_end_regexp: {type: string}, multiline_start_regexp: {type: string}, n_lines: {type: integer}, partial_cri_logtag_key: {type: string}, partial_cri_stream_key: {type: string}, partial_key: {type: string}, partial_metadata_format: {type: string}, partial_value: {type: string}, separator: {type: string}, stream_identity_key: {type: string}, timeout_label: {type: string}, use_first_timestamp: {type: boolean}, use_partial_cri_logtag: {type: boolean}, use_partial_metadata: {type: string}}, type: object}, dedot: {properties: {de_dot_nested: {type: boolean}, de_dot_separator: {type: string}}, type: object}, detectExceptions: {properties: {force_line_breaks: {type: boolean}, languages: {items: {type: string}, type: array}, match_tag: {type: string}, max_bytes: {type: integer}, max_lines: {type: integer}, message: {type: string}, multiline_flush_interval: {type: string}, remove_tag_prefix: {type: string}, stream: {type: string}}, type: object}, elasticsearch_genid: {properties: {hash_id_key: {type: string}, hash_type: {type: string}, include_tag_in_seed: {type: boolean}, include_time_in_seed: {type: boolean}, record_keys: {type: string}, separator: {type: string}, use_entire_record: {type: boolean}, use_record_as_seed: {type: boolean}}, type: object}, enhanceK8s: {properties: {api_groups: {items: {type: string}, type: array}, bearer_token_file: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cache_refresh: {type: integer}, cache_refresh_variation: {type: integer}, cache_size: {type: integer}, cache_ttl: {type: integer}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, core_api_versions: {items: {type: string}, type: array}, data_type: {type: string}, in_namespace_path: {items: {type: string}, type: array}, in_pod_path: {items: {type: string}, type: array}, kubernetes_url: {type: string}, secret_dir: {type: string}, ssl_partial_chain: {type: boolean}, verify_ssl: {type: boolean}}, type: object}, geoip: {properties: {backend_library: {type: string}, geoip_2_database: {type: string}, geoip_database: {type: string}, geoip_lookup_keys: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, skip_adding_null_record: {type: boolean}}, type: object}, grep: {properties: {and: {items: {properties: {exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, type: array}, exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, or: {items: {properties: {exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, kube_events_timestamp: {properties: {mapped_time_key: {type: string}, timestamp_fields: {items: {type: string}, type: array}}, type: object}, parser: {properties: {emit_invalid_record_to_error: {type: boolean}, hash_value_field: {type: string}, inject_key_prefix: {type: string}, key_name: {type: string}, parse: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, delimiter: {type: string}, delimiter_pattern: {type: string}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, format_firstline: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, keys: {type: string}, label_delimiter: {type: string}, local_time: {type: boolean}, multiline: {items: {type: string}, type: array}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, patterns: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, local_time: {type: boolean}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, parsers: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, delimiter: {type: string}, delimiter_pattern: {type: string}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, format_firstline: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, keys: {type: string}, label_delimiter: {type: string}, local_time: {type: boolean}, multiline: {items: {type: string}, type: array}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, patterns: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, local_time: {type: boolean}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, remove_key_name_field: {type: boolean}, replace_invalid_sequence: {type: boolean}, reserve_data: {type: boolean}, reserve_time: {type: boolean}}, type: object}, prometheus: {properties: {labels: {additionalProperties: {type: string}, type: object}, metrics: {items: {properties: {buckets: {type: string}, desc: {type: string}, key: {type: string}, labels: {additionalProperties: {type: string}, type: object}, name: {type: string}, type: {type: string}}, required: [desc, name, type], type: object}, type: array}}, type: object}, record_modifier: {properties: {char_encoding: {type: string}, prepare_value: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, remove_keys: {type: string}, replaces: {items: {properties: {expression: {type: string}, key: {type: string}, replace: {type: string}}, required: [expression, key, replace], type: object}, type: array}, whitelist_keys: {type: string}}, type: object}, record_transformer: {properties: {auto_typecast: {type: boolean}, enable_ruby: {type: boolean}, keep_keys: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, remove_keys: {type: string}, renew_record: {type: boolean}, renew_time_key: {type: string}}, type: object}, stdout: {properties: {output_type: {type: string}}, type: object}, sumologic: {properties: {collector_key_name: {type: string}, collector_value: {type: string}, exclude_container_regex: {type: string}, exclude_facility_regex: {type: string}, exclude_host_regex: {type: string}, exclude_namespace_regex: {type: string}, exclude_pod_regex: {type: string}, exclude_priority_regex: {type: string}, exclude_unit_regex: {type: string}, log_format: {type: string}, source_category: {type: string}, source_category_key_name: {type: string}, source_category_prefix: {type: string}, source_category_replace_dash: {type: string}, source_host: {type: string}, source_host_key_name: {type: string}, source_name: {type: string}, source_name_key_name: {type: string}, tracing_annotation_prefix: {type: string}, tracing_container_name: {type: string}, tracing_format: {type: boolean}, tracing_host: {type: string}, tracing_label_prefix: {type: string}, tracing_namespace: {type: string}, tracing_pod: {type: string}, tracing_pod_id: {type: string}}, type: object}, tag_normaliser: {properties: {format: {type: string}, match_tag: {type: string}}, type: object}, throttle: {properties: {group_bucket_limit: {type: integer}, group_bucket_period_s: {type: integer}, group_drop_logs: {type: boolean}, group_key: {type: string}, group_reset_rate_s: {type: integer}, group_warning_delay_s: {type: integer}}, type: object}}, type: object}, type: array}, globalOutputRefs: {items: {type: string}, type: array}, outputRefs: {items: {type: string}, type: array}}, type: object}, enableRecreateWorkloadOnImmutableFieldChange: {type: boolean}, errorOutputRef: {type: string}, flowConfigCheckDisabled: {type: boolean}, flowConfigOverride: {type: string}, fluentbit: {properties: {HostNetwork: {type: boolean}, affinity: {properties: {nodeAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {preference: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object}, weight: {format: int32, type: integer}}, required: [preference, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {properties: {nodeSelectorTerms: {items: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object}, type: array}}, required: [nodeSelectorTerms], type: object}}, type: object}, podAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}, podAntiAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}}, type: object}, annotations: {additionalProperties: {type: string}, type: object}, bufferStorage: {properties: {storage.backlog.mem_limit: {type: string}, storage.checksum: {type: string}, storage.path: {type: string}, storage.sync: {type: string}}, type: object}, bufferStorageVolume: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, bufferVolumeArgs: {items: {type: string}, type: array}, bufferVolumeImage: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, bufferVolumeMetrics: {properties: {interval: {type: string}, path: {type: string}, port: {format: int32, type: integer}, prometheusAnnotations: {type: boolean}, prometheusRules: {type: boolean}, serviceMonitor: {type: boolean}, serviceMonitorConfig: {properties: {additionalLabels: {additionalProperties: {type: string}, type: object}, honorLabels: {type: boolean}, metricRelabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, relabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, scheme: {type: string}, tlsConfig: {properties: {ca: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, caFile: {type: string}, cert: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, certFile: {type: string}, insecureSkipVerify: {type: boolean}, keyFile: {type: string}, keySecret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, serverName: {type: string}}, type: object}}, type: object}, timeout: {type: string}}, type: object}, coroStackSize: {format: int32, type: integer}, customConfigSecret: {type: string}, daemonsetAnnotations: {additionalProperties: {type: string}, type: object}, disableKubernetesFilter: {type: boolean}, dnsConfig: {properties: {nameservers: {items: {type: string}, type: array}, options: {items: {properties: {name: {type: string}, value: {type: string}}, type: object}, type: array}, searches: {items: {type: string}, type: array}}, type: object}, dnsPolicy: {type: string}, enableUpstream: {type: boolean}, envVars: {items: {properties: {name: {type: string}, value: {type: string}, valueFrom: {properties: {configMapKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}, secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, required: [name], type: object}, type: array}, extraVolumeMounts: {items: {properties: {destination: {pattern: ^/.+$, type: string}, readOnly: {type: boolean}, source: {pattern: ^/.+$, type: string}}, required: [destination, source], type: object}, type: array}, filterAws: {properties: {Match: {type: string}, account_id: {type: boolean}, ami_id: {type: boolean}, az: {type: boolean}, ec2_instance_id: {type: boolean}, ec2_instance_type: {type: boolean}, hostname: {type: boolean}, imds_version: {type: string}, private_ip: {type: boolean}, vpc_id: {type: boolean}}, type: object}, filterKubernetes: {properties: {Annotations: {type: string}, Buffer_Size: {type: string}, Cache_Use_Docker_Id: {type: string}, DNS_Retries: {type: string}, DNS_Wait_Time: {type: string}, Dummy_Meta: {type: string}, K8S-Logging.Exclude: {type: string}, K8S-Logging.Parser: {type: string}, Keep_Log: {type: string}, Kube_CA_File: {type: string}, Kube_CA_Path: {type: string}, Kube_Meta_Cache_TTL: {type: string}, Kube_Tag_Prefix: {type: string}, Kube_Token_File: {type: string}, Kube_Token_TTL: {type: string}, Kube_URL: {type: string}, Kube_meta_preload_cache_dir: {type: string}, Kubelet_Port: {type: string}, Labels: {type: string}, Match: {type: string}, Merge_Log: {type: string}, Merge_Log_Key: {type: string}, Merge_Log_Trim: {type: string}, Merge_Parser: {type: string}, Regex_Parser: {type: string}, Use_Journal: {type: string}, Use_Kubelet: {type: string}, tls.debug: {type: string}, tls.verify: {type: string}}, type: object}, filterModify: {items: {properties: {conditions: {items: {properties: {A_key_matches: {properties: {key: {type: string}}, type: object}, Key_does_not_exist: {properties: {key: {type: string}, value: {type: string}}, type: object}, Key_exists: {properties: {key: {type: string}}, type: object}, Key_value_does_not_equal: {properties: {key: {type: string}, value: {type: string}}, type: object}, Key_value_does_not_match: {properties: {key: {type: string}, value: {type: string}}, type: object}, Key_value_equals: {properties: {key: {type: string}, value: {type: string}}, type: object}, Key_value_matches: {properties: {key: {type: string}, value: {type: string}}, type: object}, Matching_keys_do_not_have_matching_values: {properties: {key: {type: string}, value: {type: string}}, type: object}, Matching_keys_have_matching_values: {properties: {key: {type: string}, value: {type: string}}, type: object}, No_key_matches: {properties: {key: {type: string}}, type: object}}, type: object}, type: array}, rules: {items: {properties: {Add: {properties: {key: {type: string}, value: {type: string}}, type: object}, Copy: {properties: {key: {type: string}, value: {type: string}}, type: object}, Hard_copy: {properties: {key: {type: string}, value: {type: string}}, type: object}, Hard_rename: {properties: {key: {type: string}, value: {type: string}}, type: object}, Remove: {properties: {key: {type: string}}, type: object}, Remove_regex: {properties: {key: {type: string}}, type: object}, Remove_wildcard: {properties: {key: {type: string}}, type: object}, Rename: {properties: {key: {type: string}, value: {type: string}}, type: object}, Set: {properties: {key: {type: string}, value: {type: string}}, type: object}}, type: object}, type: array}}, type: object}, type: array}, flush: {format: int32, type: integer}, forwardOptions: {properties: {Require_ack_response: {type: boolean}, Retry_Limit: {type: string}, Send_options: {type: boolean}, Tag: {type: string}, Time_as_Integer: {type: boolean}, storage.total_limit_size: {type: string}}, type: object}, grace: {format: int32, type: integer}, image: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, inputTail: {properties: {Buffer_Chunk_Size: {type: string}, Buffer_Max_Size: {type: string}, DB: {type: string}, DB.journal_mode: {type: string}, DB.locking: {type: boolean}, DB_Sync: {type: string}, Docker_Mode: {type: string}, Docker_Mode_Flush: {type: string}, Docker_Mode_Parser: {type: string}, Exclude_Path: {type: string}, Ignore_Older: {type: string}, Key: {type: string}, Mem_Buf_Limit: {type: string}, Multiline: {type: string}, Multiline_Flush: {type: string}, Parser: {type: string}, Parser_Firstline: {type: string}, Parser_N: {items: {type: string}, type: array}, Path: {type: string}, Path_Key: {type: string}, Read_From_Head: {type: boolean}, Refresh_Interval: {type: string}, Rotate_Wait: {type: string}, Skip_Long_Lines: {type: string}, Tag: {type: string}, Tag_Regex: {type: string}, multiline.parser: {items: {type: string}, type: array}, storage.type: {type: string}}, type: object}, labels: {additionalProperties: {type: string}, type: object}, livenessDefaultCheck: {type: boolean}, livenessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, logLevel: {type: string}, metrics: {properties: {interval: {type: string}, path: {type: string}, port: {format: int32, type: integer}, prometheusAnnotations: {type: boolean}, prometheusRules: {type: boolean}, serviceMonitor: {type: boolean}, serviceMonitorConfig: {properties: {additionalLabels: {additionalProperties: {type: string}, type: object}, honorLabels: {type: boolean}, metricRelabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, relabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, scheme: {type: string}, tlsConfig: {properties: {ca: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, caFile: {type: string}, cert: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, certFile: {type: string}, insecureSkipVerify: {type: boolean}, keyFile: {type: string}, keySecret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, serverName: {type: string}}, type: object}}, type: object}, timeout: {type: string}}, type: object}, mountPath: {type: string}, network: {properties: {connectTimeout: {format: int32, type: integer}, connectTimeoutLogError: {type: boolean}, dnsMode: {type: string}, dnsPreferIpv4: {type: boolean}, dnsResolver: {type: string}, keepalive: {type: boolean}, keepaliveIdleTimeout: {format: int32, type: integer}, keepaliveMaxRecycle: {format: int32, type: integer}, sourceAddress: {type: string}}, type: object}, nodeSelector: {additionalProperties: {type: string}, type: object}, parser: {type: string}, podPriorityClassName: {type: string}, position_db: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, positiondb: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, readinessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, security: {properties: {podSecurityContext: {properties: {fsGroup: {format: int64, type: integer}, fsGroupChangePolicy: {type: string}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, supplementalGroups: {items: {format: int64, type: integer}, type: array}, sysctls: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, podSecurityPolicyCreate: {type: boolean}, roleBasedAccessControlCreate: {type: boolean}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, serviceAccount: {type: string}}, type: object}, serviceAccount: {properties: {automountServiceAccountToken: {type: boolean}, imagePullSecrets: {items: {properties: {name: {type: string}}, type: object}, type: array}, metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, secrets: {items: {properties: {apiVersion: {type: string}, fieldPath: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}, resourceVersion: {type: string}, uid: {type: string}}, type: object}, type: array}}, type: object}, syslogng_output: {properties: {json_date_format: {type: string}, json_date_key: {type: string}}, type: object}, targetHost: {type: string}, targetPort: {format: int32, type: integer}, tls: {properties: {enabled: {type: boolean}, secretName: {type: string}, sharedKey: {type: string}}, required: [enabled], type: object}, tolerations: {items: {properties: {effect: {type: string}, key: {type: string}, operator: {type: string}, tolerationSeconds: {format: int64, type: integer}, value: {type: string}}, type: object}, type: array}, updateStrategy: {properties: {rollingUpdate: {properties: {maxSurge: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, maxUnavailable: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, type: object}, type: {type: string}}, type: object}}, type: object}, fluentd: {properties: {affinity: {properties: {nodeAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {preference: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object}, weight: {format: int32, type: integer}}, required: [preference, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {properties: {nodeSelectorTerms: {items: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object}, type: array}}, required: [nodeSelectorTerms], type: object}}, type: object}, podAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}, podAntiAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}}, type: object}, annotations: {additionalProperties: {type: string}, type: object}, bufferStorageVolume: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, bufferVolumeArgs: {items: {type: string}, type: array}, bufferVolumeImage: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, bufferVolumeMetrics: {properties: {interval: {type: string}, path: {type: string}, port: {format: int32, type: integer}, prometheusAnnotations: {type: boolean}, prometheusRules: {type: boolean}, serviceMonitor: {type: boolean}, serviceMonitorConfig: {properties: {additionalLabels: {additionalProperties: {type: string}, type: object}, honorLabels: {type: boolean}, metricRelabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, relabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, scheme: {type: string}, tlsConfig: {properties: {ca: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, caFile: {type: string}, cert: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, certFile: {type: string}, insecureSkipVerify: {type: boolean}, keyFile: {type: string}, keySecret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, serverName: {type: string}}, type: object}}, type: object}, timeout: {type: string}}, type: object}, compressConfigFile: {type: boolean}, configCheckAnnotations: {additionalProperties: {type: string}, type: object}, configCheckResources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, configReloaderImage: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, configReloaderResources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, disablePvc: {type: boolean}, dnsConfig: {properties: {nameservers: {items: {type: string}, type: array}, options: {items: {properties: {name: {type: string}, value: {type: string}}, type: object}, type: array}, searches: {items: {type: string}, type: array}}, type: object}, dnsPolicy: {type: string}, enableMsgpackTimeSupport: {type: boolean}, envVars: {items: {properties: {name: {type: string}, value: {type: string}, valueFrom: {properties: {configMapKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}, secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, required: [name], type: object}, type: array}, extraArgs: {items: {type: string}, type: array}, extraVolumes: {items: {properties: {containerName: {type: string}, path: {type: string}, volume: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, volumeName: {type: string}}, type: object}, type: array}, fluentLogDestination: {type: string}, fluentOutLogrotate: {properties: {age: {type: string}, enabled: {type: boolean}, path: {type: string}, size: {type: string}}, required: [enabled], type: object}, fluentdPvcSpec: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, forwardInputConfig: {properties: {add_tag_prefix: {type: string}, bind: {type: string}, chunk_size_limit: {type: string}, chunk_size_warn_limit: {type: string}, deny_keepalive: {type: boolean}, linger_timeout: {type: integer}, port: {type: string}, resolve_hostname: {type: boolean}, security: {properties: {allow_anonymous_source: {type: boolean}, self_hostname: {type: string}, shared_key: {type: string}, user_auth: {type: boolean}}, required: [self_hostname, shared_key], type: object}, send_keepalive_packet: {type: boolean}, skip_invalid_event: {type: boolean}, source_address_key: {type: string}, sourceHostnameKey: {type: string}, tag: {type: string}, transport: {properties: {ca_cert_path: {type: string}, ca_path: {type: string}, ca_private_key_passphrase: {type: string}, ca_private_key_path: {type: string}, cert_path: {type: string}, ciphers: {type: string}, client_cert_auth: {type: boolean}, insecure: {type: boolean}, private_key_passphrase: {type: string}, private_key_path: {type: string}, protocol: {type: string}, version: {type: string}}, type: object}}, type: object}, ignoreRepeatedLogInterval: {type: string}, ignoreSameLogInterval: {type: string}, image: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, labels: {additionalProperties: {type: string}, type: object}, livenessDefaultCheck: {type: boolean}, livenessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, logLevel: {type: string}, metrics: {properties: {interval: {type: string}, path: {type: string}, port: {format: int32, type: integer}, prometheusAnnotations: {type: boolean}, prometheusRules: {type: boolean}, serviceMonitor: {type: boolean}, serviceMonitorConfig: {properties: {additionalLabels: {additionalProperties: {type: string}, type: object}, honorLabels: {type: boolean}, metricRelabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, relabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, scheme: {type: string}, tlsConfig: {properties: {ca: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, caFile: {type: string}, cert: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, certFile: {type: string}, insecureSkipVerify: {type: boolean}, keyFile: {type: string}, keySecret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, serverName: {type: string}}, type: object}}, type: object}, timeout: {type: string}}, type: object}, nodeSelector: {additionalProperties: {type: string}, type: object}, podPriorityClassName: {type: string}, port: {format: int32, type: integer}, readinessDefaultCheck: {properties: {bufferFileNumber: {type: boolean}, bufferFileNumberMax: {format: int32, type: integer}, bufferFreeSpace: {type: boolean}, bufferFreeSpaceThreshold: {format: int32, type: integer}, failureThreshold: {format: int32, type: integer}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, readinessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, rootDir: {type: string}, scaling: {properties: {drain: {properties: {annotations: {additionalProperties: {type: string}, type: object}, deleteVolume: {type: boolean}, enabled: {type: boolean}, image: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, pauseImage: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}}, type: object}, podManagementPolicy: {type: string}, replicas: {type: integer}}, type: object}, security: {properties: {podSecurityContext: {properties: {fsGroup: {format: int64, type: integer}, fsGroupChangePolicy: {type: string}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, supplementalGroups: {items: {format: int64, type: integer}, type: array}, sysctls: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, podSecurityPolicyCreate: {type: boolean}, roleBasedAccessControlCreate: {type: boolean}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, serviceAccount: {type: string}}, type: object}, serviceAccount: {properties: {automountServiceAccountToken: {type: boolean}, imagePullSecrets: {items: {properties: {name: {type: string}}, type: object}, type: array}, metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, secrets: {items: {properties: {apiVersion: {type: string}, fieldPath: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}, resourceVersion: {type: string}, uid: {type: string}}, type: object}, type: array}}, type: object}, statefulsetAnnotations: {additionalProperties: {type: string}, type: object}, tls: {properties: {enabled: {type: boolean}, secretName: {type: string}, sharedKey: {type: string}}, required: [enabled], type: object}, tolerations: {items: {properties: {effect: {type: string}, key: {type: string}, operator: {type: string}, tolerationSeconds: {format: int64, type: integer}, value: {type: string}}, type: object}, type: array}, topologySpreadConstraints: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, matchLabelKeys: {items: {type: string}, type: array, x-kubernetes-list-type: atomic}, maxSkew: {format: int32, type: integer}, minDomains: {format: int32, type: integer}, nodeAffinityPolicy: {type: string}, nodeTaintsPolicy: {type: string}, topologyKey: {type: string}, whenUnsatisfiable: {type: string}}, required: [maxSkew, topologyKey, whenUnsatisfiable], type: object}, type: array}, volumeModImage: {properties: {imagePullSecrets: {items: {properties: {name: {type: string}}, type: object}, type: array}, pullPolicy: {type: string}, repository: {type: string}, tag: {type: string}}, type: object}, volumeMountChmod: {type: boolean}, workers: {format: int32, type: integer}}, type: object}, globalFilters: {items: {properties: {concat: {properties: {continuous_line_regexp: {type: string}, flush_interval: {type: integer}, keep_partial_key: {type: boolean}, keep_partial_metadata: {type: string}, key: {type: string}, multiline_end_regexp: {type: string}, multiline_start_regexp: {type: string}, n_lines: {type: integer}, partial_cri_logtag_key: {type: string}, partial_cri_stream_key: {type: string}, partial_key: {type: string}, partial_metadata_format: {type: string}, partial_value: {type: string}, separator: {type: string}, stream_identity_key: {type: string}, timeout_label: {type: string}, use_first_timestamp: {type: boolean}, use_partial_cri_logtag: {type: boolean}, use_partial_metadata: {type: string}}, type: object}, dedot: {properties: {de_dot_nested: {type: boolean}, de_dot_separator: {type: string}}, type: object}, detectExceptions: {properties: {force_line_breaks: {type: boolean}, languages: {items: {type: string}, type: array}, match_tag: {type: string}, max_bytes: {type: integer}, max_lines: {type: integer}, message: {type: string}, multiline_flush_interval: {type: string}, remove_tag_prefix: {type: string}, stream: {type: string}}, type: object}, elasticsearch_genid: {properties: {hash_id_key: {type: string}, hash_type: {type: string}, include_tag_in_seed: {type: boolean}, include_time_in_seed: {type: boolean}, record_keys: {type: string}, separator: {type: string}, use_entire_record: {type: boolean}, use_record_as_seed: {type: boolean}}, type: object}, enhanceK8s: {properties: {api_groups: {items: {type: string}, type: array}, bearer_token_file: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cache_refresh: {type: integer}, cache_refresh_variation: {type: integer}, cache_size: {type: integer}, cache_ttl: {type: integer}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, core_api_versions: {items: {type: string}, type: array}, data_type: {type: string}, in_namespace_path: {items: {type: string}, type: array}, in_pod_path: {items: {type: string}, type: array}, kubernetes_url: {type: string}, secret_dir: {type: string}, ssl_partial_chain: {type: boolean}, verify_ssl: {type: boolean}}, type: object}, geoip: {properties: {backend_library: {type: string}, geoip_2_database: {type: string}, geoip_database: {type: string}, geoip_lookup_keys: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, skip_adding_null_record: {type: boolean}}, type: object}, grep: {properties: {and: {items: {properties: {exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, type: array}, exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, or: {items: {properties: {exclude: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, type: array}, regexp: {items: {properties: {key: {type: string}, pattern: {type: string}}, required: [key, pattern], type: object}, type: array}}, type: object}, kube_events_timestamp: {properties: {mapped_time_key: {type: string}, timestamp_fields: {items: {type: string}, type: array}}, type: object}, parser: {properties: {emit_invalid_record_to_error: {type: boolean}, hash_value_field: {type: string}, inject_key_prefix: {type: string}, key_name: {type: string}, parse: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, delimiter: {type: string}, delimiter_pattern: {type: string}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, format_firstline: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, keys: {type: string}, label_delimiter: {type: string}, local_time: {type: boolean}, multiline: {items: {type: string}, type: array}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, patterns: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, local_time: {type: boolean}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, parsers: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, delimiter: {type: string}, delimiter_pattern: {type: string}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, format_firstline: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, keys: {type: string}, label_delimiter: {type: string}, local_time: {type: boolean}, multiline: {items: {type: string}, type: array}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, patterns: {items: {properties: {custom_pattern_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, estimate_current_event: {type: boolean}, expression: {type: string}, format: {type: string}, grok_failure_key: {type: string}, grok_name_key: {type: string}, grok_pattern: {type: string}, grok_patterns: {items: {properties: {keep_time_key: {type: boolean}, name: {type: string}, pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, timezone: {type: string}}, required: [pattern], type: object}, type: array}, keep_time_key: {type: boolean}, local_time: {type: boolean}, multiline_start_regexp: {type: string}, null_empty_string: {type: boolean}, null_value_pattern: {type: string}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, time_format: {type: string}, time_key: {type: string}, time_type: {type: string}, timezone: {type: string}, type: {type: string}, types: {type: string}, utc: {type: boolean}}, type: object}, type: array}, remove_key_name_field: {type: boolean}, replace_invalid_sequence: {type: boolean}, reserve_data: {type: boolean}, reserve_time: {type: boolean}}, type: object}, prometheus: {properties: {labels: {additionalProperties: {type: string}, type: object}, metrics: {items: {properties: {buckets: {type: string}, desc: {type: string}, key: {type: string}, labels: {additionalProperties: {type: string}, type: object}, name: {type: string}, type: {type: string}}, required: [desc, name, type], type: object}, type: array}}, type: object}, record_modifier: {properties: {char_encoding: {type: string}, prepare_value: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, remove_keys: {type: string}, replaces: {items: {properties: {expression: {type: string}, key: {type: string}, replace: {type: string}}, required: [expression, key, replace], type: object}, type: array}, whitelist_keys: {type: string}}, type: object}, record_transformer: {properties: {auto_typecast: {type: boolean}, enable_ruby: {type: boolean}, keep_keys: {type: string}, records: {items: {additionalProperties: {type: string}, type: object}, type: array}, remove_keys: {type: string}, renew_record: {type: boolean}, renew_time_key: {type: string}}, type: object}, stdout: {properties: {output_type: {type: string}}, type: object}, sumologic: {properties: {collector_key_name: {type: string}, collector_value: {type: string}, exclude_container_regex: {type: string}, exclude_facility_regex: {type: string}, exclude_host_regex: {type: string}, exclude_namespace_regex: {type: string}, exclude_pod_regex: {type: string}, exclude_priority_regex: {type: string}, exclude_unit_regex: {type: string}, log_format: {type: string}, source_category: {type: string}, source_category_key_name: {type: string}, source_category_prefix: {type: string}, source_category_replace_dash: {type: string}, source_host: {type: string}, source_host_key_name: {type: string}, source_name: {type: string}, source_name_key_name: {type: string}, tracing_annotation_prefix: {type: string}, tracing_container_name: {type: string}, tracing_format: {type: boolean}, tracing_host: {type: string}, tracing_label_prefix: {type: string}, tracing_namespace: {type: string}, tracing_pod: {type: string}, tracing_pod_id: {type: string}}, type: object}, tag_normaliser: {properties: {format: {type: string}, match_tag: {type: string}}, type: object}, throttle: {properties: {group_bucket_limit: {type: integer}, group_bucket_period_s: {type: integer}, group_drop_logs: {type: boolean}, group_key: {type: string}, group_reset_rate_s: {type: integer}, group_warning_delay_s: {type: integer}}, type: object}}, type: object}, type: array}, loggingRef: {type: string}, nodeAgents: {items: {properties: {metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, name: {type: string}, nodeAgentFluentbit: {properties: {bufferStorage: {properties: {storage.backlog.mem_limit: {type: string}, storage.checksum: {type: string}, storage.path: {type: string}, storage.sync: {type: string}}, type: object}, bufferStorageVolume: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, containersPath: {type: string}, coroStackSize: {format: int32, type: integer}, customConfigSecret: {type: string}, daemonSet: {properties: {metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, spec: {properties: {minReadySeconds: {format: int32, type: integer}, revisionHistoryLimit: {format: int32, type: integer}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, template: {properties: {metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, spec: {properties: {activeDeadlineSeconds: {format: int64, type: integer}, affinity: {properties: {nodeAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {preference: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object}, weight: {format: int32, type: integer}}, required: [preference, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {properties: {nodeSelectorTerms: {items: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object}, type: array}}, required: [nodeSelectorTerms], type: object}}, type: object}, podAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}, podAntiAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}}, type: object}, automountServiceAccountToken: {type: boolean}, containers: {items: {properties: {args: {items: {type: string}, type: array}, command: {items: {type: string}, type: array}, env: {items: {properties: {name: {type: string}, value: {type: string}, valueFrom: {properties: {configMapKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}, secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, required: [name], type: object}, type: array}, envFrom: {items: {properties: {configMapRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}, prefix: {type: string}, secretRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}}, type: object}, type: array}, image: {type: string}, imagePullPolicy: {type: string}, lifecycle: {properties: {postStart: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}, preStop: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}}, type: object}, livenessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, name: {type: string}, ports: {items: {properties: {containerPort: {format: int32, type: integer}, hostIP: {type: string}, hostPort: {format: int32, type: integer}, name: {type: string}, protocol: {default: TCP, type: string}}, required: [containerPort], type: object}, type: array, x-kubernetes-list-map-keys: [containerPort, protocol], x-kubernetes-list-type: map}, readinessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, startupProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, stdin: {type: boolean}, stdinOnce: {type: boolean}, terminationMessagePath: {type: string}, terminationMessagePolicy: {type: string}, tty: {type: boolean}, volumeDevices: {items: {properties: {devicePath: {type: string}, name: {type: string}}, required: [devicePath, name], type: object}, type: array}, volumeMounts: {items: {properties: {mountPath: {type: string}, mountPropagation: {type: string}, name: {type: string}, readOnly: {type: boolean}, subPath: {type: string}, subPathExpr: {type: string}}, required: [mountPath, name], type: object}, type: array}, workingDir: {type: string}}, required: [name], type: object}, type: array}, dnsConfig: {properties: {nameservers: {items: {type: string}, type: array}, options: {items: {properties: {name: {type: string}, value: {type: string}}, type: object}, type: array}, searches: {items: {type: string}, type: array}}, type: object}, dnsPolicy: {type: string}, enableServiceLinks: {type: boolean}, ephemeralContainers: {items: {properties: {args: {items: {type: string}, type: array}, command: {items: {type: string}, type: array}, env: {items: {properties: {name: {type: string}, value: {type: string}, valueFrom: {properties: {configMapKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}, secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, required: [name], type: object}, type: array}, envFrom: {items: {properties: {configMapRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}, prefix: {type: string}, secretRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}}, type: object}, type: array}, image: {type: string}, imagePullPolicy: {type: string}, lifecycle: {properties: {postStart: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}, preStop: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}}, type: object}, livenessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, name: {type: string}, ports: {items: {properties: {containerPort: {format: int32, type: integer}, hostIP: {type: string}, hostPort: {format: int32, type: integer}, name: {type: string}, protocol: {default: TCP, type: string}}, required: [containerPort], type: object}, type: array, x-kubernetes-list-map-keys: [containerPort, protocol], x-kubernetes-list-type: map}, readinessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, startupProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, stdin: {type: boolean}, stdinOnce: {type: boolean}, targetContainerName: {type: string}, terminationMessagePath: {type: string}, terminationMessagePolicy: {type: string}, tty: {type: boolean}, volumeDevices: {items: {properties: {devicePath: {type: string}, name: {type: string}}, required: [devicePath, name], type: object}, type: array}, volumeMounts: {items: {properties: {mountPath: {type: string}, mountPropagation: {type: string}, name: {type: string}, readOnly: {type: boolean}, subPath: {type: string}, subPathExpr: {type: string}}, required: [mountPath, name], type: object}, type: array}, workingDir: {type: string}}, required: [name], type: object}, type: array}, hostAliases: {items: {properties: {hostnames: {items: {type: string}, type: array}, ip: {type: string}}, type: object}, type: array}, hostIPC: {type: boolean}, hostNetwork: {type: boolean}, hostPID: {type: boolean}, hostname: {type: string}, imagePullSecrets: {items: {properties: {name: {type: string}}, type: object}, type: array}, initContainers: {items: {properties: {args: {items: {type: string}, type: array}, command: {items: {type: string}, type: array}, env: {items: {properties: {name: {type: string}, value: {type: string}, valueFrom: {properties: {configMapKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}, secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, required: [name], type: object}, type: array}, envFrom: {items: {properties: {configMapRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}, prefix: {type: string}, secretRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}}, type: object}, type: array}, image: {type: string}, imagePullPolicy: {type: string}, lifecycle: {properties: {postStart: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}, preStop: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}}, type: object}, livenessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, name: {type: string}, ports: {items: {properties: {containerPort: {format: int32, type: integer}, hostIP: {type: string}, hostPort: {format: int32, type: integer}, name: {type: string}, protocol: {default: TCP, type: string}}, required: [containerPort], type: object}, type: array, x-kubernetes-list-map-keys: [containerPort, protocol], x-kubernetes-list-type: map}, readinessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, startupProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, stdin: {type: boolean}, stdinOnce: {type: boolean}, terminationMessagePath: {type: string}, terminationMessagePolicy: {type: string}, tty: {type: boolean}, volumeDevices: {items: {properties: {devicePath: {type: string}, name: {type: string}}, required: [devicePath, name], type: object}, type: array}, volumeMounts: {items: {properties: {mountPath: {type: string}, mountPropagation: {type: string}, name: {type: string}, readOnly: {type: boolean}, subPath: {type: string}, subPathExpr: {type: string}}, required: [mountPath, name], type: object}, type: array}, workingDir: {type: string}}, required: [name], type: object}, type: array}, nodeName: {type: string}, nodeSelector: {additionalProperties: {type: string}, type: object}, overhead: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, preemptionPolicy: {type: string}, priority: {format: int32, type: integer}, priorityClassName: {type: string}, readinessGates: {items: {properties: {conditionType: {type: string}}, required: [conditionType], type: object}, type: array}, restartPolicy: {type: string}, runtimeClassName: {type: string}, schedulerName: {type: string}, securityContext: {properties: {fsGroup: {format: int64, type: integer}, fsGroupChangePolicy: {type: string}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, supplementalGroups: {items: {format: int64, type: integer}, type: array}, sysctls: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, serviceAccountName: {type: string}, setHostnameAsFQDN: {type: boolean}, shareProcessNamespace: {type: boolean}, subdomain: {type: string}, terminationGracePeriodSeconds: {format: int64, type: integer}, tolerations: {items: {properties: {effect: {type: string}, key: {type: string}, operator: {type: string}, tolerationSeconds: {format: int64, type: integer}, value: {type: string}}, type: object}, type: array}, topologySpreadConstraints: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, matchLabelKeys: {items: {type: string}, type: array, x-kubernetes-list-type: atomic}, maxSkew: {format: int32, type: integer}, minDomains: {format: int32, type: integer}, nodeAffinityPolicy: {type: string}, nodeTaintsPolicy: {type: string}, topologyKey: {type: string}, whenUnsatisfiable: {type: string}}, required: [maxSkew, topologyKey, whenUnsatisfiable], type: object}, type: array, x-kubernetes-list-map-keys: [topologyKey, whenUnsatisfiable], x-kubernetes-list-type: map}, volumes: {items: {properties: {awsElasticBlockStore: {properties: {fsType: {type: string}, partition: {format: int32, type: integer}, readOnly: {type: boolean}, volumeID: {type: string}}, required: [volumeID], type: object}, azureDisk: {properties: {cachingMode: {type: string}, diskName: {type: string}, diskURI: {type: string}, fsType: {type: string}, kind: {type: string}, readOnly: {type: boolean}}, required: [diskName, diskURI], type: object}, azureFile: {properties: {readOnly: {type: boolean}, secretName: {type: string}, shareName: {type: string}}, required: [secretName, shareName], type: object}, cephfs: {properties: {monitors: {items: {type: string}, type: array}, path: {type: string}, readOnly: {type: boolean}, secretFile: {type: string}, secretRef: {properties: {name: {type: string}}, type: object}, user: {type: string}}, required: [monitors], type: object}, cinder: {properties: {fsType: {type: string}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}, volumeID: {type: string}}, required: [volumeID], type: object}, configMap: {properties: {defaultMode: {format: int32, type: integer}, items: {items: {properties: {key: {type: string}, mode: {format: int32, type: integer}, path: {type: string}}, required: [key, path], type: object}, type: array}, name: {type: string}, optional: {type: boolean}}, type: object}, csi: {properties: {driver: {type: string}, fsType: {type: string}, nodePublishSecretRef: {properties: {name: {type: string}}, type: object}, readOnly: {type: boolean}, volumeAttributes: {additionalProperties: {type: string}, type: object}}, required: [driver], type: object}, downwardAPI: {properties: {defaultMode: {format: int32, type: integer}, items: {items: {properties: {fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, mode: {format: int32, type: integer}, path: {type: string}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}}, required: [path], type: object}, type: array}}, type: object}, emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, ephemeral: {properties: {volumeClaimTemplate: {properties: {metadata: {type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, required: [spec], type: object}}, type: object}, fc: {properties: {fsType: {type: string}, lun: {format: int32, type: integer}, readOnly: {type: boolean}, targetWWNs: {items: {type: string}, type: array}, wwids: {items: {type: string}, type: array}}, type: object}, flexVolume: {properties: {driver: {type: string}, fsType: {type: string}, options: {additionalProperties: {type: string}, type: object}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}}, required: [driver], type: object}, flocker: {properties: {datasetName: {type: string}, datasetUUID: {type: string}}, type: object}, gcePersistentDisk: {properties: {fsType: {type: string}, partition: {format: int32, type: integer}, pdName: {type: string}, readOnly: {type: boolean}}, required: [pdName], type: object}, gitRepo: {properties: {directory: {type: string}, repository: {type: string}, revision: {type: string}}, required: [repository], type: object}, glusterfs: {properties: {endpoints: {type: string}, path: {type: string}, readOnly: {type: boolean}}, required: [endpoints, path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, iscsi: {properties: {chapAuthDiscovery: {type: boolean}, chapAuthSession: {type: boolean}, fsType: {type: string}, initiatorName: {type: string}, iqn: {type: string}, iscsiInterface: {type: string}, lun: {format: int32, type: integer}, portals: {items: {type: string}, type: array}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}, targetPortal: {type: string}}, required: [iqn, lun, targetPortal], type: object}, name: {type: string}, nfs: {properties: {path: {type: string}, readOnly: {type: boolean}, server: {type: string}}, required: [path, server], type: object}, persistentVolumeClaim: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, photonPersistentDisk: {properties: {fsType: {type: string}, pdID: {type: string}}, required: [pdID], type: object}, portworxVolume: {properties: {fsType: {type: string}, readOnly: {type: boolean}, volumeID: {type: string}}, required: [volumeID], type: object}, projected: {properties: {defaultMode: {format: int32, type: integer}, sources: {items: {properties: {configMap: {properties: {items: {items: {properties: {key: {type: string}, mode: {format: int32, type: integer}, path: {type: string}}, required: [key, path], type: object}, type: array}, name: {type: string}, optional: {type: boolean}}, type: object}, downwardAPI: {properties: {items: {items: {properties: {fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, mode: {format: int32, type: integer}, path: {type: string}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}}, required: [path], type: object}, type: array}}, type: object}, secret: {properties: {items: {items: {properties: {key: {type: string}, mode: {format: int32, type: integer}, path: {type: string}}, required: [key, path], type: object}, type: array}, name: {type: string}, optional: {type: boolean}}, type: object}, serviceAccountToken: {properties: {audience: {type: string}, expirationSeconds: {format: int64, type: integer}, path: {type: string}}, required: [path], type: object}}, type: object}, type: array}}, type: object}, quobyte: {properties: {group: {type: string}, readOnly: {type: boolean}, registry: {type: string}, tenant: {type: string}, user: {type: string}, volume: {type: string}}, required: [registry, volume], type: object}, rbd: {properties: {fsType: {type: string}, image: {type: string}, keyring: {type: string}, monitors: {items: {type: string}, type: array}, pool: {type: string}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}, user: {type: string}}, required: [image, monitors], type: object}, scaleIO: {properties: {fsType: {type: string}, gateway: {type: string}, protectionDomain: {type: string}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}, sslEnabled: {type: boolean}, storageMode: {type: string}, storagePool: {type: string}, system: {type: string}, volumeName: {type: string}}, required: [gateway, secretRef, system], type: object}, secret: {properties: {defaultMode: {format: int32, type: integer}, items: {items: {properties: {key: {type: string}, mode: {format: int32, type: integer}, path: {type: string}}, required: [key, path], type: object}, type: array}, optional: {type: boolean}, secretName: {type: string}}, type: object}, storageos: {properties: {fsType: {type: string}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}, volumeName: {type: string}, volumeNamespace: {type: string}}, type: object}, vsphereVolume: {properties: {fsType: {type: string}, storagePolicyID: {type: string}, storagePolicyName: {type: string}, volumePath: {type: string}}, required: [volumePath], type: object}}, required: [name], type: object}, type: array}}, type: object}}, type: object}, updateStrategy: {properties: {rollingUpdate: {properties: {maxSurge: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, maxUnavailable: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, type: object}, type: {type: string}}, type: object}}, type: object}}, type: object}, disableKubernetesFilter: {type: boolean}, enableUpstream: {type: boolean}, enabled: {type: boolean}, extraVolumeMounts: {items: {properties: {destination: {pattern: ^/.+$, type: string}, readOnly: {type: boolean}, source: {pattern: ^/.+$, type: string}}, required: [destination, source], type: object}, type: array}, filterAws: {properties: {Match: {type: string}, account_id: {type: boolean}, ami_id: {type: boolean}, az: {type: boolean}, ec2_instance_id: {type: boolean}, ec2_instance_type: {type: boolean}, hostname: {type: boolean}, imds_version: {type: string}, private_ip: {type: boolean}, vpc_id: {type: boolean}}, type: object}, filterKubernetes: {properties: {Annotations: {type: string}, Buffer_Size: {type: string}, Cache_Use_Docker_Id: {type: string}, DNS_Retries: {type: string}, DNS_Wait_Time: {type: string}, Dummy_Meta: {type: string}, K8S-Logging.Exclude: {type: string}, K8S-Logging.Parser: {type: string}, Keep_Log: {type: string}, Kube_CA_File: {type: string}, Kube_CA_Path: {type: string}, Kube_Meta_Cache_TTL: {type: string}, Kube_Tag_Prefix: {type: string}, Kube_Token_File: {type: string}, Kube_Token_TTL: {type: string}, Kube_URL: {type: string}, Kube_meta_preload_cache_dir: {type: string}, Kubelet_Port: {type: string}, Labels: {type: string}, Match: {type: string}, Merge_Log: {type: string}, Merge_Log_Key: {type: string}, Merge_Log_Trim: {type: string}, Merge_Parser: {type: string}, Regex_Parser: {type: string}, Use_Journal: {type: string}, Use_Kubelet: {type: string}, tls.debug: {type: string}, tls.verify: {type: string}}, type: object}, flush: {format: int32, type: integer}, forwardOptions: {properties: {Require_ack_response: {type: boolean}, Retry_Limit: {type: string}, Send_options: {type: boolean}, Tag: {type: string}, Time_as_Integer: {type: boolean}, storage.total_limit_size: {type: string}}, type: object}, grace: {format: int32, type: integer}, inputTail: {properties: {Buffer_Chunk_Size: {type: string}, Buffer_Max_Size: {type: string}, DB: {type: string}, DB.journal_mode: {type: string}, DB.locking: {type: boolean}, DB_Sync: {type: string}, Docker_Mode: {type: string}, Docker_Mode_Flush: {type: string}, Docker_Mode_Parser: {type: string}, Exclude_Path: {type: string}, Ignore_Older: {type: string}, Key: {type: string}, Mem_Buf_Limit: {type: string}, Multiline: {type: string}, Multiline_Flush: {type: string}, Parser: {type: string}, Parser_Firstline: {type: string}, Parser_N: {items: {type: string}, type: array}, Path: {type: string}, Path_Key: {type: string}, Read_From_Head: {type: boolean}, Refresh_Interval: {type: string}, Rotate_Wait: {type: string}, Skip_Long_Lines: {type: string}, Tag: {type: string}, Tag_Regex: {type: string}, multiline.parser: {items: {type: string}, type: array}, storage.type: {type: string}}, type: object}, livenessDefaultCheck: {type: boolean}, logLevel: {type: string}, metrics: {properties: {interval: {type: string}, path: {type: string}, port: {format: int32, type: integer}, prometheusAnnotations: {type: boolean}, prometheusRules: {type: boolean}, serviceMonitor: {type: boolean}, serviceMonitorConfig: {properties: {additionalLabels: {additionalProperties: {type: string}, type: object}, honorLabels: {type: boolean}, metricRelabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, relabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, scheme: {type: string}, tlsConfig: {properties: {ca: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, caFile: {type: string}, cert: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, certFile: {type: string}, insecureSkipVerify: {type: boolean}, keyFile: {type: string}, keySecret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, serverName: {type: string}}, type: object}}, type: object}, timeout: {type: string}}, type: object}, metricsService: {properties: {metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, spec: {properties: {allocateLoadBalancerNodePorts: {type: boolean}, clusterIP: {type: string}, clusterIPs: {items: {type: string}, type: array, x-kubernetes-list-type: atomic}, externalIPs: {items: {type: string}, type: array}, externalName: {type: string}, externalTrafficPolicy: {type: string}, healthCheckNodePort: {format: int32, type: integer}, internalTrafficPolicy: {type: string}, ipFamilies: {items: {type: string}, type: array, x-kubernetes-list-type: atomic}, ipFamilyPolicy: {type: string}, loadBalancerClass: {type: string}, loadBalancerIP: {type: string}, loadBalancerSourceRanges: {items: {type: string}, type: array}, ports: {items: {properties: {appProtocol: {type: string}, name: {type: string}, nodePort: {format: int32, type: integer}, port: {format: int32, type: integer}, protocol: {default: TCP, type: string}, targetPort: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, type: array, x-kubernetes-list-map-keys: [port, protocol], x-kubernetes-list-type: map}, publishNotReadyAddresses: {type: boolean}, selector: {additionalProperties: {type: string}, type: object, x-kubernetes-map-type: atomic}, sessionAffinity: {type: string}, sessionAffinityConfig: {properties: {clientIP: {properties: {timeoutSeconds: {format: int32, type: integer}}, type: object}}, type: object}, type: {type: string}}, type: object}}, type: object}, network: {properties: {connectTimeout: {format: int32, type: integer}, connectTimeoutLogError: {type: boolean}, dnsMode: {type: string}, dnsPreferIpv4: {type: boolean}, dnsResolver: {type: string}, keepalive: {type: boolean}, keepaliveIdleTimeout: {format: int32, type: integer}, keepaliveMaxRecycle: {format: int32, type: integer}, sourceAddress: {type: string}}, type: object}, podPriorityClassName: {type: string}, positiondb: {properties: {emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, host_path: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, pvc: {properties: {source: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}}, type: object}, security: {properties: {podSecurityContext: {properties: {fsGroup: {format: int64, type: integer}, fsGroupChangePolicy: {type: string}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, supplementalGroups: {items: {format: int64, type: integer}, type: array}, sysctls: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, podSecurityPolicyCreate: {type: boolean}, roleBasedAccessControlCreate: {type: boolean}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, serviceAccount: {type: string}}, type: object}, serviceAccount: {properties: {automountServiceAccountToken: {type: boolean}, imagePullSecrets: {items: {properties: {name: {type: string}}, type: object}, type: array}, metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, secrets: {items: {properties: {apiVersion: {type: string}, fieldPath: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}, resourceVersion: {type: string}, uid: {type: string}}, type: object}, type: array}}, type: object}, targetHost: {type: string}, targetPort: {format: int32, type: integer}, tls: {properties: {enabled: {type: boolean}, secretName: {type: string}, sharedKey: {type: string}}, required: [enabled], type: object}, varLogsPath: {type: string}}, type: object}, profile: {type: string}}, type: object}, type: array}, skipInvalidResources: {type: boolean}, syslogNG: {properties: {bufferVolumeMetrics: {properties: {interval: {type: string}, mount_name: {type: string}, path: {type: string}, port: {format: int32, type: integer}, prometheusAnnotations: {type: boolean}, prometheusRules: {type: boolean}, serviceMonitor: {type: boolean}, serviceMonitorConfig: {properties: {additionalLabels: {additionalProperties: {type: string}, type: object}, honorLabels: {type: boolean}, metricRelabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, relabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, scheme: {type: string}, tlsConfig: {properties: {ca: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, caFile: {type: string}, cert: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, certFile: {type: string}, insecureSkipVerify: {type: boolean}, keyFile: {type: string}, keySecret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, serverName: {type: string}}, type: object}}, type: object}, timeout: {type: string}}, type: object}, bufferVolumeMetricsService: {properties: {metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, spec: {properties: {allocateLoadBalancerNodePorts: {type: boolean}, clusterIP: {type: string}, clusterIPs: {items: {type: string}, type: array, x-kubernetes-list-type: atomic}, externalIPs: {items: {type: string}, type: array}, externalName: {type: string}, externalTrafficPolicy: {type: string}, healthCheckNodePort: {format: int32, type: integer}, internalTrafficPolicy: {type: string}, ipFamilies: {items: {type: string}, type: array, x-kubernetes-list-type: atomic}, ipFamilyPolicy: {type: string}, loadBalancerClass: {type: string}, loadBalancerIP: {type: string}, loadBalancerSourceRanges: {items: {type: string}, type: array}, ports: {items: {properties: {appProtocol: {type: string}, name: {type: string}, nodePort: {format: int32, type: integer}, port: {format: int32, type: integer}, protocol: {default: TCP, type: string}, targetPort: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, type: array, x-kubernetes-list-map-keys: [port, protocol], x-kubernetes-list-type: map}, publishNotReadyAddresses: {type: boolean}, selector: {additionalProperties: {type: string}, type: object, x-kubernetes-map-type: atomic}, sessionAffinity: {type: string}, sessionAffinityConfig: {properties: {clientIP: {properties: {timeoutSeconds: {format: int32, type: integer}}, type: object}}, type: object}, type: {type: string}}, type: object}}, type: object}, configCheckPod: {properties: {activeDeadlineSeconds: {format: int64, type: integer}, affinity: {properties: {nodeAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {preference: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object}, weight: {format: int32, type: integer}}, required: [preference, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {properties: {nodeSelectorTerms: {items: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object}, type: array}}, required: [nodeSelectorTerms], type: object}}, type: object}, podAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}, podAntiAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}}, type: object}, automountServiceAccountToken: {type: boolean}, containers: {items: {properties: {args: {items: {type: string}, type: array}, command: {items: {type: string}, type: array}, env: {items: {properties: {name: {type: string}, value: {type: string}, valueFrom: {properties: {configMapKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}, secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, required: [name], type: object}, type: array}, envFrom: {items: {properties: {configMapRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}, prefix: {type: string}, secretRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}}, type: object}, type: array}, image: {type: string}, imagePullPolicy: {type: string}, lifecycle: {properties: {postStart: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}, preStop: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}}, type: object}, livenessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, name: {type: string}, ports: {items: {properties: {containerPort: {format: int32, type: integer}, hostIP: {type: string}, hostPort: {format: int32, type: integer}, name: {type: string}, protocol: {default: TCP, type: string}}, required: [containerPort], type: object}, type: array, x-kubernetes-list-map-keys: [containerPort, protocol], x-kubernetes-list-type: map}, readinessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, startupProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, stdin: {type: boolean}, stdinOnce: {type: boolean}, terminationMessagePath: {type: string}, terminationMessagePolicy: {type: string}, tty: {type: boolean}, volumeDevices: {items: {properties: {devicePath: {type: string}, name: {type: string}}, required: [devicePath, name], type: object}, type: array}, volumeMounts: {items: {properties: {mountPath: {type: string}, mountPropagation: {type: string}, name: {type: string}, readOnly: {type: boolean}, subPath: {type: string}, subPathExpr: {type: string}}, required: [mountPath, name], type: object}, type: array}, workingDir: {type: string}}, required: [name], type: object}, type: array}, dnsConfig: {properties: {nameservers: {items: {type: string}, type: array}, options: {items: {properties: {name: {type: string}, value: {type: string}}, type: object}, type: array}, searches: {items: {type: string}, type: array}}, type: object}, dnsPolicy: {type: string}, enableServiceLinks: {type: boolean}, ephemeralContainers: {items: {properties: {args: {items: {type: string}, type: array}, command: {items: {type: string}, type: array}, env: {items: {properties: {name: {type: string}, value: {type: string}, valueFrom: {properties: {configMapKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}, secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, required: [name], type: object}, type: array}, envFrom: {items: {properties: {configMapRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}, prefix: {type: string}, secretRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}}, type: object}, type: array}, image: {type: string}, imagePullPolicy: {type: string}, lifecycle: {properties: {postStart: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}, preStop: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}}, type: object}, livenessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, name: {type: string}, ports: {items: {properties: {containerPort: {format: int32, type: integer}, hostIP: {type: string}, hostPort: {format: int32, type: integer}, name: {type: string}, protocol: {default: TCP, type: string}}, required: [containerPort], type: object}, type: array, x-kubernetes-list-map-keys: [containerPort, protocol], x-kubernetes-list-type: map}, readinessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, startupProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, stdin: {type: boolean}, stdinOnce: {type: boolean}, targetContainerName: {type: string}, terminationMessagePath: {type: string}, terminationMessagePolicy: {type: string}, tty: {type: boolean}, volumeDevices: {items: {properties: {devicePath: {type: string}, name: {type: string}}, required: [devicePath, name], type: object}, type: array}, volumeMounts: {items: {properties: {mountPath: {type: string}, mountPropagation: {type: string}, name: {type: string}, readOnly: {type: boolean}, subPath: {type: string}, subPathExpr: {type: string}}, required: [mountPath, name], type: object}, type: array}, workingDir: {type: string}}, required: [name], type: object}, type: array}, hostAliases: {items: {properties: {hostnames: {items: {type: string}, type: array}, ip: {type: string}}, type: object}, type: array}, hostIPC: {type: boolean}, hostNetwork: {type: boolean}, hostPID: {type: boolean}, hostname: {type: string}, imagePullSecrets: {items: {properties: {name: {type: string}}, type: object}, type: array}, initContainers: {items: {properties: {args: {items: {type: string}, type: array}, command: {items: {type: string}, type: array}, env: {items: {properties: {name: {type: string}, value: {type: string}, valueFrom: {properties: {configMapKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}, secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, required: [name], type: object}, type: array}, envFrom: {items: {properties: {configMapRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}, prefix: {type: string}, secretRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}}, type: object}, type: array}, image: {type: string}, imagePullPolicy: {type: string}, lifecycle: {properties: {postStart: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}, preStop: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}}, type: object}, livenessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, name: {type: string}, ports: {items: {properties: {containerPort: {format: int32, type: integer}, hostIP: {type: string}, hostPort: {format: int32, type: integer}, name: {type: string}, protocol: {default: TCP, type: string}}, required: [containerPort], type: object}, type: array, x-kubernetes-list-map-keys: [containerPort, protocol], x-kubernetes-list-type: map}, readinessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, startupProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, stdin: {type: boolean}, stdinOnce: {type: boolean}, terminationMessagePath: {type: string}, terminationMessagePolicy: {type: string}, tty: {type: boolean}, volumeDevices: {items: {properties: {devicePath: {type: string}, name: {type: string}}, required: [devicePath, name], type: object}, type: array}, volumeMounts: {items: {properties: {mountPath: {type: string}, mountPropagation: {type: string}, name: {type: string}, readOnly: {type: boolean}, subPath: {type: string}, subPathExpr: {type: string}}, required: [mountPath, name], type: object}, type: array}, workingDir: {type: string}}, required: [name], type: object}, type: array}, nodeName: {type: string}, nodeSelector: {additionalProperties: {type: string}, type: object}, overhead: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, preemptionPolicy: {type: string}, priority: {format: int32, type: integer}, priorityClassName: {type: string}, readinessGates: {items: {properties: {conditionType: {type: string}}, required: [conditionType], type: object}, type: array}, restartPolicy: {type: string}, runtimeClassName: {type: string}, schedulerName: {type: string}, securityContext: {properties: {fsGroup: {format: int64, type: integer}, fsGroupChangePolicy: {type: string}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, supplementalGroups: {items: {format: int64, type: integer}, type: array}, sysctls: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, serviceAccountName: {type: string}, setHostnameAsFQDN: {type: boolean}, shareProcessNamespace: {type: boolean}, subdomain: {type: string}, terminationGracePeriodSeconds: {format: int64, type: integer}, tolerations: {items: {properties: {effect: {type: string}, key: {type: string}, operator: {type: string}, tolerationSeconds: {format: int64, type: integer}, value: {type: string}}, type: object}, type: array}, topologySpreadConstraints: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, matchLabelKeys: {items: {type: string}, type: array, x-kubernetes-list-type: atomic}, maxSkew: {format: int32, type: integer}, minDomains: {format: int32, type: integer}, nodeAffinityPolicy: {type: string}, nodeTaintsPolicy: {type: string}, topologyKey: {type: string}, whenUnsatisfiable: {type: string}}, required: [maxSkew, topologyKey, whenUnsatisfiable], type: object}, type: array, x-kubernetes-list-map-keys: [topologyKey, whenUnsatisfiable], x-kubernetes-list-type: map}, volumes: {items: {properties: {awsElasticBlockStore: {properties: {fsType: {type: string}, partition: {format: int32, type: integer}, readOnly: {type: boolean}, volumeID: {type: string}}, required: [volumeID], type: object}, azureDisk: {properties: {cachingMode: {type: string}, diskName: {type: string}, diskURI: {type: string}, fsType: {type: string}, kind: {type: string}, readOnly: {type: boolean}}, required: [diskName, diskURI], type: object}, azureFile: {properties: {readOnly: {type: boolean}, secretName: {type: string}, shareName: {type: string}}, required: [secretName, shareName], type: object}, cephfs: {properties: {monitors: {items: {type: string}, type: array}, path: {type: string}, readOnly: {type: boolean}, secretFile: {type: string}, secretRef: {properties: {name: {type: string}}, type: object}, user: {type: string}}, required: [monitors], type: object}, cinder: {properties: {fsType: {type: string}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}, volumeID: {type: string}}, required: [volumeID], type: object}, configMap: {properties: {defaultMode: {format: int32, type: integer}, items: {items: {properties: {key: {type: string}, mode: {format: int32, type: integer}, path: {type: string}}, required: [key, path], type: object}, type: array}, name: {type: string}, optional: {type: boolean}}, type: object}, csi: {properties: {driver: {type: string}, fsType: {type: string}, nodePublishSecretRef: {properties: {name: {type: string}}, type: object}, readOnly: {type: boolean}, volumeAttributes: {additionalProperties: {type: string}, type: object}}, required: [driver], type: object}, downwardAPI: {properties: {defaultMode: {format: int32, type: integer}, items: {items: {properties: {fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, mode: {format: int32, type: integer}, path: {type: string}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}}, required: [path], type: object}, type: array}}, type: object}, emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, ephemeral: {properties: {volumeClaimTemplate: {properties: {metadata: {type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, required: [spec], type: object}}, type: object}, fc: {properties: {fsType: {type: string}, lun: {format: int32, type: integer}, readOnly: {type: boolean}, targetWWNs: {items: {type: string}, type: array}, wwids: {items: {type: string}, type: array}}, type: object}, flexVolume: {properties: {driver: {type: string}, fsType: {type: string}, options: {additionalProperties: {type: string}, type: object}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}}, required: [driver], type: object}, flocker: {properties: {datasetName: {type: string}, datasetUUID: {type: string}}, type: object}, gcePersistentDisk: {properties: {fsType: {type: string}, partition: {format: int32, type: integer}, pdName: {type: string}, readOnly: {type: boolean}}, required: [pdName], type: object}, gitRepo: {properties: {directory: {type: string}, repository: {type: string}, revision: {type: string}}, required: [repository], type: object}, glusterfs: {properties: {endpoints: {type: string}, path: {type: string}, readOnly: {type: boolean}}, required: [endpoints, path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, iscsi: {properties: {chapAuthDiscovery: {type: boolean}, chapAuthSession: {type: boolean}, fsType: {type: string}, initiatorName: {type: string}, iqn: {type: string}, iscsiInterface: {type: string}, lun: {format: int32, type: integer}, portals: {items: {type: string}, type: array}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}, targetPortal: {type: string}}, required: [iqn, lun, targetPortal], type: object}, name: {type: string}, nfs: {properties: {path: {type: string}, readOnly: {type: boolean}, server: {type: string}}, required: [path, server], type: object}, persistentVolumeClaim: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, photonPersistentDisk: {properties: {fsType: {type: string}, pdID: {type: string}}, required: [pdID], type: object}, portworxVolume: {properties: {fsType: {type: string}, readOnly: {type: boolean}, volumeID: {type: string}}, required: [volumeID], type: object}, projected: {properties: {defaultMode: {format: int32, type: integer}, sources: {items: {properties: {configMap: {properties: {items: {items: {properties: {key: {type: string}, mode: {format: int32, type: integer}, path: {type: string}}, required: [key, path], type: object}, type: array}, name: {type: string}, optional: {type: boolean}}, type: object}, downwardAPI: {properties: {items: {items: {properties: {fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, mode: {format: int32, type: integer}, path: {type: string}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}}, required: [path], type: object}, type: array}}, type: object}, secret: {properties: {items: {items: {properties: {key: {type: string}, mode: {format: int32, type: integer}, path: {type: string}}, required: [key, path], type: object}, type: array}, name: {type: string}, optional: {type: boolean}}, type: object}, serviceAccountToken: {properties: {audience: {type: string}, expirationSeconds: {format: int64, type: integer}, path: {type: string}}, required: [path], type: object}}, type: object}, type: array}}, type: object}, quobyte: {properties: {group: {type: string}, readOnly: {type: boolean}, registry: {type: string}, tenant: {type: string}, user: {type: string}, volume: {type: string}}, required: [registry, volume], type: object}, rbd: {properties: {fsType: {type: string}, image: {type: string}, keyring: {type: string}, monitors: {items: {type: string}, type: array}, pool: {type: string}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}, user: {type: string}}, required: [image, monitors], type: object}, scaleIO: {properties: {fsType: {type: string}, gateway: {type: string}, protectionDomain: {type: string}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}, sslEnabled: {type: boolean}, storageMode: {type: string}, storagePool: {type: string}, system: {type: string}, volumeName: {type: string}}, required: [gateway, secretRef, system], type: object}, secret: {properties: {defaultMode: {format: int32, type: integer}, items: {items: {properties: {key: {type: string}, mode: {format: int32, type: integer}, path: {type: string}}, required: [key, path], type: object}, type: array}, optional: {type: boolean}, secretName: {type: string}}, type: object}, storageos: {properties: {fsType: {type: string}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}, volumeName: {type: string}, volumeNamespace: {type: string}}, type: object}, vsphereVolume: {properties: {fsType: {type: string}, storagePolicyID: {type: string}, storagePolicyName: {type: string}, volumePath: {type: string}}, required: [volumePath], type: object}}, required: [name], type: object}, type: array}}, type: object}, globalOptions: {properties: {stats_freq: {type: integer}, stats_level: {type: integer}}, type: object}, jsonKeyDelim: {type: string}, jsonKeyPrefix: {type: string}, logIWSize: {type: integer}, maxConnections: {type: integer}, metrics: {properties: {interval: {type: string}, path: {type: string}, port: {format: int32, type: integer}, prometheusAnnotations: {type: boolean}, prometheusRules: {type: boolean}, serviceMonitor: {type: boolean}, serviceMonitorConfig: {properties: {additionalLabels: {additionalProperties: {type: string}, type: object}, honorLabels: {type: boolean}, metricRelabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, relabelings: {items: {properties: {action: {default: replace, enum: [replace, Replace, keep, Keep, drop, Drop, hashmod, HashMod, labelmap, LabelMap, labeldrop, LabelDrop, labelkeep, LabelKeep, lowercase, Lowercase, uppercase, Uppercase], type: string}, modulus: {format: int64, type: integer}, regex: {type: string}, replacement: {type: string}, separator: {type: string}, sourceLabels: {items: {pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$', type: string}, type: array}, targetLabel: {type: string}}, type: object}, type: array}, scheme: {type: string}, tlsConfig: {properties: {ca: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, caFile: {type: string}, cert: {properties: {configMap: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, secret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, certFile: {type: string}, insecureSkipVerify: {type: boolean}, keyFile: {type: string}, keySecret: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, serverName: {type: string}}, type: object}}, type: object}, timeout: {type: string}}, type: object}, metricsService: {properties: {metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, spec: {properties: {allocateLoadBalancerNodePorts: {type: boolean}, clusterIP: {type: string}, clusterIPs: {items: {type: string}, type: array, x-kubernetes-list-type: atomic}, externalIPs: {items: {type: string}, type: array}, externalName: {type: string}, externalTrafficPolicy: {type: string}, healthCheckNodePort: {format: int32, type: integer}, internalTrafficPolicy: {type: string}, ipFamilies: {items: {type: string}, type: array, x-kubernetes-list-type: atomic}, ipFamilyPolicy: {type: string}, loadBalancerClass: {type: string}, loadBalancerIP: {type: string}, loadBalancerSourceRanges: {items: {type: string}, type: array}, ports: {items: {properties: {appProtocol: {type: string}, name: {type: string}, nodePort: {format: int32, type: integer}, port: {format: int32, type: integer}, protocol: {default: TCP, type: string}, targetPort: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, type: array, x-kubernetes-list-map-keys: [port, protocol], x-kubernetes-list-type: map}, publishNotReadyAddresses: {type: boolean}, selector: {additionalProperties: {type: string}, type: object, x-kubernetes-map-type: atomic}, sessionAffinity: {type: string}, sessionAffinityConfig: {properties: {clientIP: {properties: {timeoutSeconds: {format: int32, type: integer}}, type: object}}, type: object}, type: {type: string}}, type: object}}, type: object}, readinessDefaultCheck: {properties: {bufferFileNumber: {type: boolean}, bufferFileNumberMax: {format: int32, type: integer}, bufferFreeSpace: {type: boolean}, bufferFreeSpaceThreshold: {format: int32, type: integer}, failureThreshold: {format: int32, type: integer}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, service: {properties: {metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, spec: {properties: {allocateLoadBalancerNodePorts: {type: boolean}, clusterIP: {type: string}, clusterIPs: {items: {type: string}, type: array, x-kubernetes-list-type: atomic}, externalIPs: {items: {type: string}, type: array}, externalName: {type: string}, externalTrafficPolicy: {type: string}, healthCheckNodePort: {format: int32, type: integer}, internalTrafficPolicy: {type: string}, ipFamilies: {items: {type: string}, type: array, x-kubernetes-list-type: atomic}, ipFamilyPolicy: {type: string}, loadBalancerClass: {type: string}, loadBalancerIP: {type: string}, loadBalancerSourceRanges: {items: {type: string}, type: array}, ports: {items: {properties: {appProtocol: {type: string}, name: {type: string}, nodePort: {format: int32, type: integer}, port: {format: int32, type: integer}, protocol: {default: TCP, type: string}, targetPort: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, type: array, x-kubernetes-list-map-keys: [port, protocol], x-kubernetes-list-type: map}, publishNotReadyAddresses: {type: boolean}, selector: {additionalProperties: {type: string}, type: object, x-kubernetes-map-type: atomic}, sessionAffinity: {type: string}, sessionAffinityConfig: {properties: {clientIP: {properties: {timeoutSeconds: {format: int32, type: integer}}, type: object}}, type: object}, type: {type: string}}, type: object}}, type: object}, serviceAccount: {properties: {automountServiceAccountToken: {type: boolean}, imagePullSecrets: {items: {properties: {name: {type: string}}, type: object}, type: array}, metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, secrets: {items: {properties: {apiVersion: {type: string}, fieldPath: {type: string}, kind: {type: string}, name: {type: string}, namespace: {type: string}, resourceVersion: {type: string}, uid: {type: string}}, type: object}, type: array}}, type: object}, skipRBACCreate: {type: boolean}, statefulSet: {properties: {metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, spec: {properties: {podManagementPolicy: {type: string}, replicas: {format: int32, type: integer}, revisionHistoryLimit: {format: int32, type: integer}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, serviceName: {type: string}, template: {properties: {metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}}, type: object}, spec: {properties: {activeDeadlineSeconds: {format: int64, type: integer}, affinity: {properties: {nodeAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {preference: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object}, weight: {format: int32, type: integer}}, required: [preference, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {properties: {nodeSelectorTerms: {items: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchFields: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}}, type: object}, type: array}}, required: [nodeSelectorTerms], type: object}}, type: object}, podAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}, podAntiAffinity: {properties: {preferredDuringSchedulingIgnoredDuringExecution: {items: {properties: {podAffinityTerm: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, weight: {format: int32, type: integer}}, required: [podAffinityTerm, weight], type: object}, type: array}, requiredDuringSchedulingIgnoredDuringExecution: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaceSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, namespaces: {items: {type: string}, type: array}, topologyKey: {type: string}}, required: [topologyKey], type: object}, type: array}}, type: object}}, type: object}, automountServiceAccountToken: {type: boolean}, containers: {items: {properties: {args: {items: {type: string}, type: array}, command: {items: {type: string}, type: array}, env: {items: {properties: {name: {type: string}, value: {type: string}, valueFrom: {properties: {configMapKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}, secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, required: [name], type: object}, type: array}, envFrom: {items: {properties: {configMapRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}, prefix: {type: string}, secretRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}}, type: object}, type: array}, image: {type: string}, imagePullPolicy: {type: string}, lifecycle: {properties: {postStart: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}, preStop: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}}, type: object}, livenessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, name: {type: string}, ports: {items: {properties: {containerPort: {format: int32, type: integer}, hostIP: {type: string}, hostPort: {format: int32, type: integer}, name: {type: string}, protocol: {default: TCP, type: string}}, required: [containerPort], type: object}, type: array, x-kubernetes-list-map-keys: [containerPort, protocol], x-kubernetes-list-type: map}, readinessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, startupProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, stdin: {type: boolean}, stdinOnce: {type: boolean}, terminationMessagePath: {type: string}, terminationMessagePolicy: {type: string}, tty: {type: boolean}, volumeDevices: {items: {properties: {devicePath: {type: string}, name: {type: string}}, required: [devicePath, name], type: object}, type: array}, volumeMounts: {items: {properties: {mountPath: {type: string}, mountPropagation: {type: string}, name: {type: string}, readOnly: {type: boolean}, subPath: {type: string}, subPathExpr: {type: string}}, required: [mountPath, name], type: object}, type: array}, workingDir: {type: string}}, required: [name], type: object}, type: array}, dnsConfig: {properties: {nameservers: {items: {type: string}, type: array}, options: {items: {properties: {name: {type: string}, value: {type: string}}, type: object}, type: array}, searches: {items: {type: string}, type: array}}, type: object}, dnsPolicy: {type: string}, enableServiceLinks: {type: boolean}, ephemeralContainers: {items: {properties: {args: {items: {type: string}, type: array}, command: {items: {type: string}, type: array}, env: {items: {properties: {name: {type: string}, value: {type: string}, valueFrom: {properties: {configMapKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}, secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, required: [name], type: object}, type: array}, envFrom: {items: {properties: {configMapRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}, prefix: {type: string}, secretRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}}, type: object}, type: array}, image: {type: string}, imagePullPolicy: {type: string}, lifecycle: {properties: {postStart: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}, preStop: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}}, type: object}, livenessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, name: {type: string}, ports: {items: {properties: {containerPort: {format: int32, type: integer}, hostIP: {type: string}, hostPort: {format: int32, type: integer}, name: {type: string}, protocol: {default: TCP, type: string}}, required: [containerPort], type: object}, type: array, x-kubernetes-list-map-keys: [containerPort, protocol], x-kubernetes-list-type: map}, readinessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, startupProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, stdin: {type: boolean}, stdinOnce: {type: boolean}, targetContainerName: {type: string}, terminationMessagePath: {type: string}, terminationMessagePolicy: {type: string}, tty: {type: boolean}, volumeDevices: {items: {properties: {devicePath: {type: string}, name: {type: string}}, required: [devicePath, name], type: object}, type: array}, volumeMounts: {items: {properties: {mountPath: {type: string}, mountPropagation: {type: string}, name: {type: string}, readOnly: {type: boolean}, subPath: {type: string}, subPathExpr: {type: string}}, required: [mountPath, name], type: object}, type: array}, workingDir: {type: string}}, required: [name], type: object}, type: array}, hostAliases: {items: {properties: {hostnames: {items: {type: string}, type: array}, ip: {type: string}}, type: object}, type: array}, hostIPC: {type: boolean}, hostNetwork: {type: boolean}, hostPID: {type: boolean}, hostname: {type: string}, imagePullSecrets: {items: {properties: {name: {type: string}}, type: object}, type: array}, initContainers: {items: {properties: {args: {items: {type: string}, type: array}, command: {items: {type: string}, type: array}, env: {items: {properties: {name: {type: string}, value: {type: string}, valueFrom: {properties: {configMapKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}, fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}, secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, required: [name], type: object}, type: array}, envFrom: {items: {properties: {configMapRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}, prefix: {type: string}, secretRef: {properties: {name: {type: string}, optional: {type: boolean}}, type: object}}, type: object}, type: array}, image: {type: string}, imagePullPolicy: {type: string}, lifecycle: {properties: {postStart: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}, preStop: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}}, type: object}}, type: object}, livenessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, name: {type: string}, ports: {items: {properties: {containerPort: {format: int32, type: integer}, hostIP: {type: string}, hostPort: {format: int32, type: integer}, name: {type: string}, protocol: {default: TCP, type: string}}, required: [containerPort], type: object}, type: array, x-kubernetes-list-map-keys: [containerPort, protocol], x-kubernetes-list-type: map}, readinessProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, securityContext: {properties: {allowPrivilegeEscalation: {type: boolean}, capabilities: {properties: {add: {items: {type: string}, type: array}, drop: {items: {type: string}, type: array}}, type: object}, privileged: {type: boolean}, procMount: {type: string}, readOnlyRootFilesystem: {type: boolean}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, startupProbe: {properties: {exec: {properties: {command: {items: {type: string}, type: array}}, type: object}, failureThreshold: {format: int32, type: integer}, grpc: {properties: {port: {format: int32, type: integer}, service: {type: string}}, required: [port], type: object}, httpGet: {properties: {host: {type: string}, httpHeaders: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, path: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, scheme: {type: string}}, required: [port], type: object}, initialDelaySeconds: {format: int32, type: integer}, periodSeconds: {format: int32, type: integer}, successThreshold: {format: int32, type: integer}, tcpSocket: {properties: {host: {type: string}, port: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}}, required: [port], type: object}, terminationGracePeriodSeconds: {format: int64, type: integer}, timeoutSeconds: {format: int32, type: integer}}, type: object}, stdin: {type: boolean}, stdinOnce: {type: boolean}, terminationMessagePath: {type: string}, terminationMessagePolicy: {type: string}, tty: {type: boolean}, volumeDevices: {items: {properties: {devicePath: {type: string}, name: {type: string}}, required: [devicePath, name], type: object}, type: array}, volumeMounts: {items: {properties: {mountPath: {type: string}, mountPropagation: {type: string}, name: {type: string}, readOnly: {type: boolean}, subPath: {type: string}, subPathExpr: {type: string}}, required: [mountPath, name], type: object}, type: array}, workingDir: {type: string}}, required: [name], type: object}, type: array}, nodeName: {type: string}, nodeSelector: {additionalProperties: {type: string}, type: object}, overhead: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, preemptionPolicy: {type: string}, priority: {format: int32, type: integer}, priorityClassName: {type: string}, readinessGates: {items: {properties: {conditionType: {type: string}}, required: [conditionType], type: object}, type: array}, restartPolicy: {type: string}, runtimeClassName: {type: string}, schedulerName: {type: string}, securityContext: {properties: {fsGroup: {format: int64, type: integer}, fsGroupChangePolicy: {type: string}, runAsGroup: {format: int64, type: integer}, runAsNonRoot: {type: boolean}, runAsUser: {format: int64, type: integer}, seLinuxOptions: {properties: {level: {type: string}, role: {type: string}, type: {type: string}, user: {type: string}}, type: object}, seccompProfile: {properties: {localhostProfile: {type: string}, type: {type: string}}, required: [type], type: object}, supplementalGroups: {items: {format: int64, type: integer}, type: array}, sysctls: {items: {properties: {name: {type: string}, value: {type: string}}, required: [name, value], type: object}, type: array}, windowsOptions: {properties: {gmsaCredentialSpec: {type: string}, gmsaCredentialSpecName: {type: string}, hostProcess: {type: boolean}, runAsUserName: {type: string}}, type: object}}, type: object}, serviceAccountName: {type: string}, setHostnameAsFQDN: {type: boolean}, shareProcessNamespace: {type: boolean}, subdomain: {type: string}, terminationGracePeriodSeconds: {format: int64, type: integer}, tolerations: {items: {properties: {effect: {type: string}, key: {type: string}, operator: {type: string}, tolerationSeconds: {format: int64, type: integer}, value: {type: string}}, type: object}, type: array}, topologySpreadConstraints: {items: {properties: {labelSelector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, matchLabelKeys: {items: {type: string}, type: array, x-kubernetes-list-type: atomic}, maxSkew: {format: int32, type: integer}, minDomains: {format: int32, type: integer}, nodeAffinityPolicy: {type: string}, nodeTaintsPolicy: {type: string}, topologyKey: {type: string}, whenUnsatisfiable: {type: string}}, required: [maxSkew, topologyKey, whenUnsatisfiable], type: object}, type: array, x-kubernetes-list-map-keys: [topologyKey, whenUnsatisfiable], x-kubernetes-list-type: map}, volumes: {items: {properties: {awsElasticBlockStore: {properties: {fsType: {type: string}, partition: {format: int32, type: integer}, readOnly: {type: boolean}, volumeID: {type: string}}, required: [volumeID], type: object}, azureDisk: {properties: {cachingMode: {type: string}, diskName: {type: string}, diskURI: {type: string}, fsType: {type: string}, kind: {type: string}, readOnly: {type: boolean}}, required: [diskName, diskURI], type: object}, azureFile: {properties: {readOnly: {type: boolean}, secretName: {type: string}, shareName: {type: string}}, required: [secretName, shareName], type: object}, cephfs: {properties: {monitors: {items: {type: string}, type: array}, path: {type: string}, readOnly: {type: boolean}, secretFile: {type: string}, secretRef: {properties: {name: {type: string}}, type: object}, user: {type: string}}, required: [monitors], type: object}, cinder: {properties: {fsType: {type: string}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}, volumeID: {type: string}}, required: [volumeID], type: object}, configMap: {properties: {defaultMode: {format: int32, type: integer}, items: {items: {properties: {key: {type: string}, mode: {format: int32, type: integer}, path: {type: string}}, required: [key, path], type: object}, type: array}, name: {type: string}, optional: {type: boolean}}, type: object}, csi: {properties: {driver: {type: string}, fsType: {type: string}, nodePublishSecretRef: {properties: {name: {type: string}}, type: object}, readOnly: {type: boolean}, volumeAttributes: {additionalProperties: {type: string}, type: object}}, required: [driver], type: object}, downwardAPI: {properties: {defaultMode: {format: int32, type: integer}, items: {items: {properties: {fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, mode: {format: int32, type: integer}, path: {type: string}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}}, required: [path], type: object}, type: array}}, type: object}, emptyDir: {properties: {medium: {type: string}, sizeLimit: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}}, type: object}, ephemeral: {properties: {volumeClaimTemplate: {properties: {metadata: {type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, required: [spec], type: object}}, type: object}, fc: {properties: {fsType: {type: string}, lun: {format: int32, type: integer}, readOnly: {type: boolean}, targetWWNs: {items: {type: string}, type: array}, wwids: {items: {type: string}, type: array}}, type: object}, flexVolume: {properties: {driver: {type: string}, fsType: {type: string}, options: {additionalProperties: {type: string}, type: object}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}}, required: [driver], type: object}, flocker: {properties: {datasetName: {type: string}, datasetUUID: {type: string}}, type: object}, gcePersistentDisk: {properties: {fsType: {type: string}, partition: {format: int32, type: integer}, pdName: {type: string}, readOnly: {type: boolean}}, required: [pdName], type: object}, gitRepo: {properties: {directory: {type: string}, repository: {type: string}, revision: {type: string}}, required: [repository], type: object}, glusterfs: {properties: {endpoints: {type: string}, path: {type: string}, readOnly: {type: boolean}}, required: [endpoints, path], type: object}, hostPath: {properties: {path: {type: string}, type: {type: string}}, required: [path], type: object}, iscsi: {properties: {chapAuthDiscovery: {type: boolean}, chapAuthSession: {type: boolean}, fsType: {type: string}, initiatorName: {type: string}, iqn: {type: string}, iscsiInterface: {type: string}, lun: {format: int32, type: integer}, portals: {items: {type: string}, type: array}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}, targetPortal: {type: string}}, required: [iqn, lun, targetPortal], type: object}, name: {type: string}, nfs: {properties: {path: {type: string}, readOnly: {type: boolean}, server: {type: string}}, required: [path, server], type: object}, persistentVolumeClaim: {properties: {claimName: {type: string}, readOnly: {type: boolean}}, required: [claimName], type: object}, photonPersistentDisk: {properties: {fsType: {type: string}, pdID: {type: string}}, required: [pdID], type: object}, portworxVolume: {properties: {fsType: {type: string}, readOnly: {type: boolean}, volumeID: {type: string}}, required: [volumeID], type: object}, projected: {properties: {defaultMode: {format: int32, type: integer}, sources: {items: {properties: {configMap: {properties: {items: {items: {properties: {key: {type: string}, mode: {format: int32, type: integer}, path: {type: string}}, required: [key, path], type: object}, type: array}, name: {type: string}, optional: {type: boolean}}, type: object}, downwardAPI: {properties: {items: {items: {properties: {fieldRef: {properties: {apiVersion: {type: string}, fieldPath: {type: string}}, required: [fieldPath], type: object}, mode: {format: int32, type: integer}, path: {type: string}, resourceFieldRef: {properties: {containerName: {type: string}, divisor: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, resource: {type: string}}, required: [resource], type: object}}, required: [path], type: object}, type: array}}, type: object}, secret: {properties: {items: {items: {properties: {key: {type: string}, mode: {format: int32, type: integer}, path: {type: string}}, required: [key, path], type: object}, type: array}, name: {type: string}, optional: {type: boolean}}, type: object}, serviceAccountToken: {properties: {audience: {type: string}, expirationSeconds: {format: int64, type: integer}, path: {type: string}}, required: [path], type: object}}, type: object}, type: array}}, type: object}, quobyte: {properties: {group: {type: string}, readOnly: {type: boolean}, registry: {type: string}, tenant: {type: string}, user: {type: string}, volume: {type: string}}, required: [registry, volume], type: object}, rbd: {properties: {fsType: {type: string}, image: {type: string}, keyring: {type: string}, monitors: {items: {type: string}, type: array}, pool: {type: string}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}, user: {type: string}}, required: [image, monitors], type: object}, scaleIO: {properties: {fsType: {type: string}, gateway: {type: string}, protectionDomain: {type: string}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}, sslEnabled: {type: boolean}, storageMode: {type: string}, storagePool: {type: string}, system: {type: string}, volumeName: {type: string}}, required: [gateway, secretRef, system], type: object}, secret: {properties: {defaultMode: {format: int32, type: integer}, items: {items: {properties: {key: {type: string}, mode: {format: int32, type: integer}, path: {type: string}}, required: [key, path], type: object}, type: array}, optional: {type: boolean}, secretName: {type: string}}, type: object}, storageos: {properties: {fsType: {type: string}, readOnly: {type: boolean}, secretRef: {properties: {name: {type: string}}, type: object}, volumeName: {type: string}, volumeNamespace: {type: string}}, type: object}, vsphereVolume: {properties: {fsType: {type: string}, storagePolicyID: {type: string}, storagePolicyName: {type: string}, volumePath: {type: string}}, required: [volumePath], type: object}}, required: [name], type: object}, type: array}}, type: object}}, type: object}, updateStrategy: {properties: {rollingUpdate: {properties: {maxUnavailable: {anyOf: [{type: integer}, {type: string}], x-kubernetes-int-or-string: true}, partition: {format: int32, type: integer}}, type: object}, type: {type: string}}, type: object}, volumeClaimTemplates: {items: {properties: {metadata: {properties: {annotations: {additionalProperties: {type: string}, type: object}, labels: {additionalProperties: {type: string}, type: object}, name: {type: string}}, type: object}, spec: {properties: {accessModes: {items: {type: string}, type: array}, dataSource: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, dataSourceRef: {properties: {apiGroup: {type: string}, kind: {type: string}, name: {type: string}}, required: [kind, name], type: object}, resources: {properties: {limits: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}, requests: {additionalProperties: {anyOf: [{type: integer}, {type: string}], pattern: '^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$', x-kubernetes-int-or-string: true}, type: object}}, type: object}, selector: {properties: {matchExpressions: {items: {properties: {key: {type: string}, operator: {type: string}, values: {items: {type: string}, type: array}}, required: [key, operator], type: object}, type: array}, matchLabels: {additionalProperties: {type: string}, type: object}}, type: object}, storageClassName: {type: string}, volumeMode: {type: string}, volumeName: {type: string}}, type: object}}, type: object}, type: array}}, type: object}}, type: object}, tls: {properties: {enabled: {type: boolean}, secretName: {type: string}, sharedKey: {type: string}}, required: [enabled], type: object}}, type: object}, watchNamespaces: {items: {type: string}, type: array}}, required: [controlNamespace], type: object}, status: {properties: {configCheckResults: {additionalProperties: {type: boolean}, type: object}}, type: object}}, type: object}}, served: true, storage: true, subresources: {status: {}}}]}, status: {acceptedNames: {kind: "", plural: ""}, conditions: [], storedVersions: []}}
---
{apiVersion: apiextensions.k8s.io/v1, kind: CustomResourceDefinition, metadata: {annotations: {controller-gen.kubebuilder.io/version: v0.6.0}, creationTimestamp: null, name: outputs.logging.opni.io}, spec: {group: logging.opni.io, names: {categories: [logging-all], kind: Output, listKind: OutputList, plural: outputs, singular: output}, scope: Namespaced, versions: [{additionalPrinterColumns: [{jsonPath: .status.active, name: Active, type: boolean}, {jsonPath: .status.problemsCount, name: Problems, type: integer}], name: v1alpha1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {awsElasticsearch: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, application_name: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_message_request_threshold: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key_pass: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, content_type: {type: string}, custom_headers: {type: string}, customize_template: {type: string}, data_stream_enable: {type: boolean}, data_stream_ilm_name: {type: string}, data_stream_ilm_policy: {type: string}, data_stream_ilm_policy_overwrite: {type: boolean}, data_stream_name: {type: string}, data_stream_template_name: {type: string}, default_elasticsearch_version: {type: string}, deflector_alias: {type: string}, enable_ilm: {type: boolean}, endpoint: {properties: {access_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, assume_role_arn: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, assume_role_session_name: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, assume_role_web_identity_token_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ecs_container_credentials_relative_uri: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, region: {type: string}, secret_access_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, sts_credentials_region: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, url: {type: string}}, type: object}, exception_backup: {type: boolean}, fail_on_detecting_es_version_retry_exceed: {type: boolean}, fail_on_putting_template_retry_exceed: {type: boolean}, flatten_hashes: {type: boolean}, flatten_hashes_separator: {type: string}, flush_interval: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, host: {type: string}, hosts: {type: string}, http_backend: {type: string}, id_key: {type: string}, ignore_exceptions: {type: string}, ilm_policy: {type: string}, ilm_policy_id: {type: string}, ilm_policy_overwrite: {type: boolean}, include_index_in_url: {type: boolean}, include_tag_key: {type: boolean}, include_timestamp: {type: boolean}, index_date_pattern: {type: string}, index_name: {type: string}, index_prefix: {type: string}, log_es_400_reason: {type: boolean}, logstash_dateformat: {type: string}, logstash_format: {type: boolean}, logstash_prefix: {type: string}, logstash_prefix_separator: {type: string}, max_retry_get_es_version: {type: string}, max_retry_putting_template: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, path: {type: string}, pipeline: {type: string}, port: {type: integer}, prefer_oj_serializer: {type: boolean}, reconnect_on_error: {type: boolean}, reload_after: {type: string}, reload_connections: {type: boolean}, reload_on_failure: {type: boolean}, remove_keys: {type: string}, remove_keys_on_update: {type: string}, remove_keys_on_update_key: {type: string}, request_timeout: {type: string}, resurrect_after: {type: string}, retry_tag: {type: string}, rollover_index: {type: boolean}, routing_key: {type: string}, scheme: {type: string}, slow_flush_log_threshold: {type: string}, sniffer_class_name: {type: string}, ssl_max_version: {type: string}, ssl_min_version: {type: string}, ssl_verify: {type: boolean}, ssl_version: {type: string}, suppress_doc_wrap: {type: boolean}, suppress_type_name: {type: boolean}, tag_key: {type: string}, target_index_key: {type: string}, target_type_key: {type: string}, template_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, template_name: {type: string}, template_overwrite: {type: boolean}, templates: {type: string}, time_key: {type: string}, time_key_format: {type: string}, time_parse_error_tag: {type: string}, time_precision: {type: string}, type_name: {type: string}, unrecoverable_error_types: {type: string}, user: {type: string}, utc_index: {type: boolean}, validate_client_version: {type: boolean}, verify_es_version_at_startup: {type: boolean}, with_transporter_log: {type: boolean}, write_operation: {type: string}}, type: object}, azurestorage: {properties: {auto_create_container: {type: boolean}, azure_container: {type: string}, azure_imds_api_version: {type: string}, azure_object_key_format: {type: string}, azure_storage_access_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, azure_storage_account: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, azure_storage_sas_token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, format: {type: string}, path: {type: string}, slow_flush_log_threshold: {type: string}}, required: [azure_container, azure_storage_account], type: object}, cloudwatch: {properties: {auto_create_stream: {type: boolean}, aws_instance_profile_credentials_retries: {type: integer}, aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sts_role_arn: {type: string}, aws_sts_session_name: {type: string}, aws_use_sts: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, concurrency: {type: integer}, endpoint: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, http_proxy: {type: string}, include_time_key: {type: boolean}, json_handler: {type: string}, localtime: {type: boolean}, log_group_aws_tags: {type: string}, log_group_aws_tags_key: {type: string}, log_group_name: {type: string}, log_group_name_key: {type: string}, log_rejected_request: {type: string}, log_stream_name: {type: string}, log_stream_name_key: {type: string}, max_events_per_batch: {type: integer}, max_message_length: {type: integer}, message_keys: {type: string}, put_log_events_disable_retry_limit: {type: boolean}, put_log_events_retry_limit: {type: integer}, put_log_events_retry_wait: {type: string}, region: {type: string}, remove_log_group_aws_tags_key: {type: string}, remove_log_group_name_key: {type: string}, remove_log_stream_name_key: {type: string}, remove_retention_in_days: {type: string}, retention_in_days: {type: string}, retention_in_days_key: {type: string}, slow_flush_log_threshold: {type: string}, use_tag_as_group: {type: boolean}, use_tag_as_stream: {type: boolean}}, required: [region], type: object}, datadog: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, compression_level: {type: string}, dd_hostname: {type: string}, dd_source: {type: string}, dd_sourcecategory: {type: string}, dd_tags: {type: string}, host: {type: string}, include_tag_key: {type: boolean}, max_backoff: {type: string}, max_retries: {type: string}, no_ssl_validation: {type: boolean}, port: {type: string}, service: {type: string}, slow_flush_log_threshold: {type: string}, ssl_port: {type: string}, tag_key: {type: string}, timestamp_key: {type: string}, use_compression: {type: boolean}, use_http: {type: boolean}, use_json: {type: boolean}, use_ssl: {type: boolean}}, required: [api_key], type: object}, elasticsearch: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, application_name: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_message_request_threshold: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key_pass: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, content_type: {type: string}, custom_headers: {type: string}, customize_template: {type: string}, data_stream_enable: {type: boolean}, data_stream_ilm_name: {type: string}, data_stream_ilm_policy: {type: string}, data_stream_ilm_policy_overwrite: {type: boolean}, data_stream_name: {type: string}, data_stream_template_name: {type: string}, default_elasticsearch_version: {type: string}, deflector_alias: {type: string}, enable_ilm: {type: boolean}, exception_backup: {type: boolean}, fail_on_detecting_es_version_retry_exceed: {type: boolean}, fail_on_putting_template_retry_exceed: {type: boolean}, flatten_hashes: {type: boolean}, flatten_hashes_separator: {type: string}, host: {type: string}, hosts: {type: string}, http_backend: {type: string}, id_key: {type: string}, ignore_exceptions: {type: string}, ilm_policy: {type: string}, ilm_policy_id: {type: string}, ilm_policy_overwrite: {type: boolean}, include_index_in_url: {type: boolean}, include_tag_key: {type: boolean}, include_timestamp: {type: boolean}, index_date_pattern: {type: string}, index_name: {type: string}, index_prefix: {type: string}, log_es_400_reason: {type: boolean}, logstash_dateformat: {type: string}, logstash_format: {type: boolean}, logstash_prefix: {type: string}, logstash_prefix_separator: {type: string}, max_retry_get_es_version: {type: string}, max_retry_putting_template: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, path: {type: string}, pipeline: {type: string}, port: {type: integer}, prefer_oj_serializer: {type: boolean}, reconnect_on_error: {type: boolean}, reload_after: {type: string}, reload_connections: {type: boolean}, reload_on_failure: {type: boolean}, remove_keys: {type: string}, remove_keys_on_update: {type: string}, remove_keys_on_update_key: {type: string}, request_timeout: {type: string}, resurrect_after: {type: string}, retry_tag: {type: string}, rollover_index: {type: boolean}, routing_key: {type: string}, scheme: {type: string}, slow_flush_log_threshold: {type: string}, sniffer_class_name: {type: string}, ssl_max_version: {type: string}, ssl_min_version: {type: string}, ssl_verify: {type: boolean}, ssl_version: {type: string}, suppress_doc_wrap: {type: boolean}, suppress_type_name: {type: boolean}, tag_key: {type: string}, target_index_key: {type: string}, target_type_key: {type: string}, template_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, template_name: {type: string}, template_overwrite: {type: boolean}, templates: {type: string}, time_key: {type: string}, time_key_format: {type: string}, time_parse_error_tag: {type: string}, time_precision: {type: string}, type_name: {type: string}, unrecoverable_error_types: {type: string}, user: {type: string}, utc_index: {type: boolean}, validate_client_version: {type: boolean}, verify_es_version_at_startup: {type: boolean}, with_transporter_log: {type: boolean}, write_operation: {type: string}}, type: object}, file: {properties: {add_path_suffix: {type: boolean}, append: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, compress: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, path: {type: string}, path_suffix: {type: string}, recompress: {type: boolean}, slow_flush_log_threshold: {type: string}, symlink_path: {type: boolean}}, required: [path], type: object}, forward: {properties: {ack_response_timeout: {type: integer}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, connect_timeout: {type: integer}, dns_round_robin: {type: boolean}, expire_dns_cache: {type: integer}, hard_timeout: {type: integer}, heartbeat_interval: {type: integer}, heartbeat_type: {type: string}, ignore_network_errors_at_startup: {type: boolean}, keepalive: {type: boolean}, keepalive_timeout: {type: integer}, phi_failure_detector: {type: boolean}, phi_threshold: {type: integer}, recover_wait: {type: integer}, require_ack_response: {type: boolean}, security: {properties: {allow_anonymous_source: {type: boolean}, self_hostname: {type: string}, shared_key: {type: string}, user_auth: {type: boolean}}, required: [self_hostname, shared_key], type: object}, send_timeout: {type: integer}, servers: {items: {properties: {host: {type: string}, name: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, port: {type: integer}, shared_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, standby: {type: boolean}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, weight: {type: integer}}, required: [host], type: object}, type: array}, slow_flush_log_threshold: {type: string}, tls_allow_self_signed_cert: {type: boolean}, tls_cert_logical_store_name: {type: string}, tls_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_cert_thumbprint: {type: string}, tls_cert_use_enterprise_store: {type: boolean}, tls_ciphers: {type: string}, tls_client_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_client_private_key_passphrase: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_client_private_key_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_insecure_mode: {type: boolean}, tls_verify_hostname: {type: boolean}, tls_version: {type: string}, transport: {type: string}, verify_connection_at_startup: {type: boolean}}, required: [servers], type: object}, gcs: {properties: {acl: {type: string}, auto_create_bucket: {type: boolean}, bucket: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, client_retries: {type: integer}, client_timeout: {type: integer}, credentials_json: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, encryption_key: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, hex_random_length: {type: integer}, keyfile: {type: string}, object_key_format: {type: string}, object_metadata: {items: {properties: {key: {type: string}, value: {type: string}}, required: [key, value], type: object}, type: array}, overwrite: {type: boolean}, path: {type: string}, project: {type: string}, slow_flush_log_threshold: {type: string}, storage_class: {type: string}, store_as: {type: string}, transcoding: {type: boolean}}, required: [bucket, project], type: object}, gelf: {properties: {host: {type: string}, port: {type: integer}, protocol: {type: string}, tls: {type: boolean}, tls_options: {additionalProperties: {type: string}, type: object}}, required: [host, port], type: object}, http: {properties: {auth: {properties: {password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, required: [password, username], type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, content_type: {type: string}, endpoint: {type: string}, error_response_as_unrecoverable: {type: boolean}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, headers: {additionalProperties: {type: string}, type: object}, http_method: {type: string}, json_array: {type: boolean}, open_timeout: {type: integer}, proxy: {type: string}, read_timeout: {type: integer}, retryable_response_codes: {items: {type: integer}, type: array}, slow_flush_log_threshold: {type: string}, ssl_timeout: {type: integer}, tls_ca_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_ciphers: {type: string}, tls_client_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_private_key_passphrase: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_private_key_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_verify_mode: {type: string}, tls_version: {type: string}}, required: [endpoint], type: object}, kafka: {properties: {ack_timeout: {type: integer}, brokers: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, client_id: {type: string}, compression_codec: {type: string}, default_message_key: {type: string}, default_partition_key: {type: string}, default_topic: {type: string}, discard_kafka_delivery_failed: {type: boolean}, exclude_partion_key: {type: boolean}, exclude_topic_key: {type: boolean}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, get_kafka_client_log: {type: boolean}, headers: {additionalProperties: {type: string}, type: object}, headers_from_record: {additionalProperties: {type: string}, type: object}, idempotent: {type: boolean}, kafka_agg_max_bytes: {type: integer}, kafka_agg_max_messages: {type: integer}, keytab: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, max_send_retries: {type: integer}, message_key_key: {type: string}, partition_key: {type: string}, partition_key_key: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, principal: {type: string}, required_acks: {type: integer}, sasl_over_ssl: {type: boolean}, scram_mechanism: {type: string}, slow_flush_log_threshold: {type: string}, ssl_ca_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_ca_certs_from_system: {type: boolean}, ssl_client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_client_cert_chain: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_client_cert_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_verify_hostname: {type: boolean}, topic_key: {type: string}, use_default_for_unknown_topic: {type: boolean}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, required: [brokers, format], type: object}, kinesisStream: {properties: {assume_role_credentials: {properties: {duration_seconds: {type: string}, external_id: {type: string}, policy: {type: string}, role_arn: {type: string}, role_session_name: {type: string}}, required: [role_arn, role_session_name], type: object}, aws_iam_retries: {type: integer}, aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_ses_token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, batch_request_max_count: {type: integer}, batch_request_max_size: {type: integer}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, partition_key: {type: string}, process_credentials: {properties: {process: {type: string}}, required: [process], type: object}, region: {type: string}, reset_backoff_if_success: {type: boolean}, retries_on_batch_request: {type: integer}, slow_flush_log_threshold: {type: string}, stream_name: {type: string}}, required: [stream_name], type: object}, logdna: {properties: {api_key: {type: string}, app: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, hostname: {type: string}, ingester_domain: {type: string}, ingester_endpoint: {type: string}, request_timeout: {type: string}, slow_flush_log_threshold: {type: string}, tags: {type: string}}, required: [api_key, hostname], type: object}, loggingRef: {type: string}, logz: {properties: {buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_limit: {type: integer}, bulk_limit_warning_limit: {type: integer}, endpoint: {properties: {port: {type: integer}, token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, url: {type: string}}, type: object}, gzip: {type: boolean}, http_idle_timeout: {type: integer}, output_include_tags: {type: boolean}, output_include_time: {type: boolean}, retry_count: {type: integer}, retry_sleep: {type: integer}, slow_flush_log_threshold: {type: string}}, required: [endpoint], type: object}, loki: {properties: {buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, ca_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, configure_kubernetes_labels: {type: boolean}, drop_single_key: {type: boolean}, extra_labels: {additionalProperties: {type: string}, type: object}, extract_kubernetes_labels: {type: boolean}, include_thread_label: {type: boolean}, insecure_tls: {type: boolean}, key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, labels: {additionalProperties: {type: string}, type: object}, line_format: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, remove_keys: {items: {type: string}, type: array}, slow_flush_log_threshold: {type: string}, tenant: {type: string}, url: {type: string}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, type: object}, newrelic: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, base_uri: {type: string}, license_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, type: object}, nullout: {type: object}, opensearch: {properties: {application_name: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_message_request_threshold: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, catch_transport_exception_on_retry: {type: boolean}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key_pass: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, compression_level: {type: string}, custom_headers: {type: string}, customize_template: {type: string}, data_stream_enable: {type: boolean}, data_stream_name: {type: string}, data_stream_template_name: {type: string}, default_opensearch_version: {type: integer}, emit_error_for_missing_id: {type: boolean}, emit_error_label_event: {type: boolean}, exception_backup: {type: boolean}, fail_on_detecting_os_version_retry_exceed: {type: boolean}, fail_on_putting_template_retry_exceed: {type: boolean}, flatten_hashes: {type: boolean}, flatten_hashes_separator: {type: string}, host: {type: string}, hosts: {type: string}, http_backend: {type: string}, http_backend_excon_nonblock: {type: boolean}, id_key: {type: string}, ignore_exceptions: {type: string}, include_index_in_url: {type: boolean}, include_tag_key: {type: boolean}, include_timestamp: {type: boolean}, index_date_pattern: {type: string}, index_name: {type: string}, index_separator: {type: string}, log_os_400_reason: {type: boolean}, logstash_dateformat: {type: string}, logstash_format: {type: boolean}, logstash_prefix: {type: string}, logstash_prefix_separator: {type: string}, max_retry_get_os_version: {type: integer}, max_retry_putting_template: {type: string}, parent_key: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, path: {type: string}, pipeline: {type: string}, port: {type: integer}, prefer_oj_serializer: {type: boolean}, reconnect_on_error: {type: boolean}, reload_after: {type: string}, reload_connections: {type: boolean}, reload_on_failure: {type: boolean}, remove_keys_on_update: {type: string}, remove_keys_on_update_key: {type: string}, request_timeout: {type: string}, resurrect_after: {type: string}, retry_tag: {type: string}, routing_key: {type: string}, scheme: {type: string}, selector_class_name: {type: string}, slow_flush_log_threshold: {type: string}, sniffer_class_name: {type: string}, ssl_verify: {type: boolean}, suppress_doc_wrap: {type: boolean}, suppress_type_name: {type: boolean}, tag_key: {type: string}, target_index_affinity: {type: boolean}, target_index_key: {type: string}, template_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, template_name: {type: string}, template_overwrite: {type: boolean}, templates: {type: string}, time_key: {type: string}, time_key_exclude_timestamp: {type: boolean}, time_key_format: {type: string}, time_parse_error_tag: {type: string}, time_precision: {type: string}, truncate_caches_interval: {type: string}, unrecoverable_error_types: {type: string}, unrecoverable_record_types: {type: string}, use_legacy_template: {type: boolean}, user: {type: string}, utc_index: {type: boolean}, validate_client_version: {type: boolean}, verify_os_version_at_startup: {type: boolean}, with_transporter_log: {type: boolean}, write_operation: {type: string}}, type: object}, oss: {properties: {aaccess_key_secret: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, access_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, auto_create_bucket: {type: boolean}, bucket: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, check_bucket: {type: boolean}, check_object: {type: boolean}, download_crc_enable: {type: boolean}, endpoint: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, hex_random_length: {type: integer}, index_format: {type: string}, key_format: {type: string}, open_timeout: {type: integer}, oss_sdk_log_dir: {type: string}, overwrite: {type: boolean}, path: {type: string}, read_timeout: {type: integer}, slow_flush_log_threshold: {type: string}, store_as: {type: string}, upload_crc_enable: {type: boolean}, warn_for_delay: {type: string}}, required: [aaccess_key_secret, access_key_id, bucket, endpoint], type: object}, redis: {properties: {allow_duplicate_key: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, db_number: {type: integer}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, host: {type: string}, insert_key_prefix: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, port: {type: integer}, slow_flush_log_threshold: {type: string}, strftime_format: {type: string}, ttl: {type: integer}}, type: object}, s3: {properties: {acl: {type: string}, assume_role_credentials: {properties: {duration_seconds: {type: string}, external_id: {type: string}, policy: {type: string}, role_arn: {type: string}, role_session_name: {type: string}}, required: [role_arn, role_session_name], type: object}, auto_create_bucket: {type: string}, aws_iam_retries: {type: string}, aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, check_apikey_on_start: {type: string}, check_bucket: {type: string}, check_object: {type: string}, clustername: {type: string}, compress: {properties: {parquet_compression_codec: {type: string}, parquet_page_size: {type: string}, parquet_row_group_size: {type: string}, record_type: {type: string}, schema_file: {type: string}, schema_type: {type: string}}, type: object}, compute_checksums: {type: string}, enable_transfer_acceleration: {type: string}, force_path_style: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, grant_full_control: {type: string}, grant_read: {type: string}, grant_read_acp: {type: string}, grant_write_acp: {type: string}, hex_random_length: {type: string}, index_format: {type: string}, instance_profile_credentials: {properties: {http_open_timeout: {type: string}, http_read_timeout: {type: string}, ip_address: {type: string}, port: {type: string}, retries: {type: string}}, type: object}, oneeye_format: {type: boolean}, overwrite: {type: string}, path: {type: string}, proxy_uri: {type: string}, s3_bucket: {type: string}, s3_endpoint: {type: string}, s3_metadata: {type: string}, s3_object_key_format: {type: string}, s3_region: {type: string}, shared_credentials: {properties: {path: {type: string}, profile_name: {type: string}}, type: object}, signature_version: {type: string}, slow_flush_log_threshold: {type: string}, sse_customer_algorithm: {type: string}, sse_customer_key: {type: string}, sse_customer_key_md5: {type: string}, ssekms_key_id: {type: string}, ssl_verify_peer: {type: string}, storage_class: {type: string}, store_as: {type: string}, use_bundled_cert: {type: string}, use_server_side_encryption: {type: string}, warn_for_delay: {type: string}}, required: [s3_bucket], type: object}, splunkHec: {properties: {buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ca_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, coerce_to_utf8: {type: boolean}, data_type: {type: string}, fields: {additionalProperties: {type: string}, type: object}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, hec_host: {type: string}, hec_port: {type: integer}, hec_token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, host: {type: string}, host_key: {type: string}, idle_timeout: {type: integer}, index: {type: string}, index_key: {type: string}, insecure_ssl: {type: boolean}, keep_keys: {type: boolean}, metric_name_key: {type: string}, metric_value_key: {type: string}, metrics_from_event: {type: boolean}, non_utf8_replacement_string: {type: string}, open_timeout: {type: integer}, protocol: {type: string}, read_timeout: {type: integer}, slow_flush_log_threshold: {type: string}, source: {type: string}, source_key: {type: string}, sourcetype: {type: string}, sourcetype_key: {type: string}, ssl_ciphers: {type: string}}, required: [hec_host, hec_token], type: object}, sqs: {properties: {aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, create_queue: {type: boolean}, delay_seconds: {type: integer}, include_tag: {type: boolean}, message_group_id: {type: string}, queue_name: {type: string}, region: {type: string}, slow_flush_log_threshold: {type: string}, sqs_url: {type: string}, tag_property_name: {type: string}}, type: object}, sumologic: {properties: {add_timestamp: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, compress: {type: boolean}, compress_encoding: {type: string}, custom_dimensions: {type: string}, custom_fields: {items: {type: string}, type: array}, data_type: {type: string}, delimiter: {type: string}, disable_cookies: {type: boolean}, endpoint: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, log_format: {type: string}, log_key: {type: string}, metric_data_format: {type: string}, open_timeout: {type: integer}, proxy_uri: {type: string}, slow_flush_log_threshold: {type: string}, source_category: {type: string}, source_host: {type: string}, source_name: {type: string}, source_name_key: {type: string}, sumo_client: {type: string}, timestamp_key: {type: string}, verify_ssl: {type: boolean}}, required: [endpoint, source_name], type: object}, syslog: {properties: {allow_self_signed_cert: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, client_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, enable_system_cert_store: {type: boolean}, format: {properties: {app_name_field: {type: string}, hostname_field: {type: string}, log_field: {type: string}, message_id_field: {type: string}, proc_id_field: {type: string}, rfc6587_message_size: {type: boolean}, structured_data_field: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, fqdn: {type: string}, host: {type: string}, insecure: {type: boolean}, port: {type: integer}, private_key_passphrase: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, private_key_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, slow_flush_log_threshold: {type: string}, transport: {type: string}, trusted_ca_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, verify_fqdn: {type: boolean}, version: {type: string}}, required: [host], type: object}}, type: object}, status: {properties: {active: {type: boolean}, problems: {items: {type: string}, type: array}, problemsCount: {type: integer}}, type: object}}, type: object}}, served: true, storage: false, subresources: {status: {}}}, {additionalPrinterColumns: [{jsonPath: .status.active, name: Active, type: boolean}, {jsonPath: .status.problemsCount, name: Problems, type: integer}], name: v1beta1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {awsElasticsearch: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, application_name: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_message_request_threshold: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key_pass: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, content_type: {type: string}, custom_headers: {type: string}, customize_template: {type: string}, data_stream_enable: {type: boolean}, data_stream_ilm_name: {type: string}, data_stream_ilm_policy: {type: string}, data_stream_ilm_policy_overwrite: {type: boolean}, data_stream_name: {type: string}, data_stream_template_name: {type: string}, default_elasticsearch_version: {type: string}, deflector_alias: {type: string}, enable_ilm: {type: boolean}, endpoint: {properties: {access_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, assume_role_arn: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, assume_role_session_name: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, assume_role_web_identity_token_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ecs_container_credentials_relative_uri: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, region: {type: string}, secret_access_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, sts_credentials_region: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, url: {type: string}}, type: object}, exception_backup: {type: boolean}, fail_on_detecting_es_version_retry_exceed: {type: boolean}, fail_on_putting_template_retry_exceed: {type: boolean}, flatten_hashes: {type: boolean}, flatten_hashes_separator: {type: string}, flush_interval: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, host: {type: string}, hosts: {type: string}, http_backend: {type: string}, id_key: {type: string}, ignore_exceptions: {type: string}, ilm_policy: {type: string}, ilm_policy_id: {type: string}, ilm_policy_overwrite: {type: boolean}, include_index_in_url: {type: boolean}, include_tag_key: {type: boolean}, include_timestamp: {type: boolean}, index_date_pattern: {type: string}, index_name: {type: string}, index_prefix: {type: string}, log_es_400_reason: {type: boolean}, logstash_dateformat: {type: string}, logstash_format: {type: boolean}, logstash_prefix: {type: string}, logstash_prefix_separator: {type: string}, max_retry_get_es_version: {type: string}, max_retry_putting_template: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, path: {type: string}, pipeline: {type: string}, port: {type: integer}, prefer_oj_serializer: {type: boolean}, reconnect_on_error: {type: boolean}, reload_after: {type: string}, reload_connections: {type: boolean}, reload_on_failure: {type: boolean}, remove_keys: {type: string}, remove_keys_on_update: {type: string}, remove_keys_on_update_key: {type: string}, request_timeout: {type: string}, resurrect_after: {type: string}, retry_tag: {type: string}, rollover_index: {type: boolean}, routing_key: {type: string}, scheme: {type: string}, slow_flush_log_threshold: {type: string}, sniffer_class_name: {type: string}, ssl_max_version: {type: string}, ssl_min_version: {type: string}, ssl_verify: {type: boolean}, ssl_version: {type: string}, suppress_doc_wrap: {type: boolean}, suppress_type_name: {type: boolean}, tag_key: {type: string}, target_index_key: {type: string}, target_type_key: {type: string}, template_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, template_name: {type: string}, template_overwrite: {type: boolean}, templates: {type: string}, time_key: {type: string}, time_key_format: {type: string}, time_parse_error_tag: {type: string}, time_precision: {type: string}, type_name: {type: string}, unrecoverable_error_types: {type: string}, user: {type: string}, utc_index: {type: boolean}, validate_client_version: {type: boolean}, verify_es_version_at_startup: {type: boolean}, with_transporter_log: {type: boolean}, write_operation: {type: string}}, type: object}, azurestorage: {properties: {auto_create_container: {type: boolean}, azure_container: {type: string}, azure_imds_api_version: {type: string}, azure_object_key_format: {type: string}, azure_storage_access_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, azure_storage_account: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, azure_storage_sas_token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, format: {type: string}, path: {type: string}, slow_flush_log_threshold: {type: string}}, required: [azure_container, azure_storage_account], type: object}, cloudwatch: {properties: {auto_create_stream: {type: boolean}, aws_instance_profile_credentials_retries: {type: integer}, aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sts_role_arn: {type: string}, aws_sts_session_name: {type: string}, aws_use_sts: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, concurrency: {type: integer}, endpoint: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, http_proxy: {type: string}, include_time_key: {type: boolean}, json_handler: {type: string}, localtime: {type: boolean}, log_group_aws_tags: {type: string}, log_group_aws_tags_key: {type: string}, log_group_name: {type: string}, log_group_name_key: {type: string}, log_rejected_request: {type: string}, log_stream_name: {type: string}, log_stream_name_key: {type: string}, max_events_per_batch: {type: integer}, max_message_length: {type: integer}, message_keys: {type: string}, put_log_events_disable_retry_limit: {type: boolean}, put_log_events_retry_limit: {type: integer}, put_log_events_retry_wait: {type: string}, region: {type: string}, remove_log_group_aws_tags_key: {type: string}, remove_log_group_name_key: {type: string}, remove_log_stream_name_key: {type: string}, remove_retention_in_days: {type: string}, retention_in_days: {type: string}, retention_in_days_key: {type: string}, slow_flush_log_threshold: {type: string}, use_tag_as_group: {type: boolean}, use_tag_as_stream: {type: boolean}}, required: [region], type: object}, datadog: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, compression_level: {type: string}, dd_hostname: {type: string}, dd_source: {type: string}, dd_sourcecategory: {type: string}, dd_tags: {type: string}, host: {type: string}, include_tag_key: {type: boolean}, max_backoff: {type: string}, max_retries: {type: string}, no_ssl_validation: {type: boolean}, port: {type: string}, service: {type: string}, slow_flush_log_threshold: {type: string}, ssl_port: {type: string}, tag_key: {type: string}, timestamp_key: {type: string}, use_compression: {type: boolean}, use_http: {type: boolean}, use_json: {type: boolean}, use_ssl: {type: boolean}}, required: [api_key], type: object}, elasticsearch: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, application_name: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_message_request_threshold: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key_pass: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, content_type: {type: string}, custom_headers: {type: string}, customize_template: {type: string}, data_stream_enable: {type: boolean}, data_stream_ilm_name: {type: string}, data_stream_ilm_policy: {type: string}, data_stream_ilm_policy_overwrite: {type: boolean}, data_stream_name: {type: string}, data_stream_template_name: {type: string}, default_elasticsearch_version: {type: string}, deflector_alias: {type: string}, enable_ilm: {type: boolean}, exception_backup: {type: boolean}, fail_on_detecting_es_version_retry_exceed: {type: boolean}, fail_on_putting_template_retry_exceed: {type: boolean}, flatten_hashes: {type: boolean}, flatten_hashes_separator: {type: string}, host: {type: string}, hosts: {type: string}, http_backend: {type: string}, id_key: {type: string}, ignore_exceptions: {type: string}, ilm_policy: {type: string}, ilm_policy_id: {type: string}, ilm_policy_overwrite: {type: boolean}, include_index_in_url: {type: boolean}, include_tag_key: {type: boolean}, include_timestamp: {type: boolean}, index_date_pattern: {type: string}, index_name: {type: string}, index_prefix: {type: string}, log_es_400_reason: {type: boolean}, logstash_dateformat: {type: string}, logstash_format: {type: boolean}, logstash_prefix: {type: string}, logstash_prefix_separator: {type: string}, max_retry_get_es_version: {type: string}, max_retry_putting_template: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, path: {type: string}, pipeline: {type: string}, port: {type: integer}, prefer_oj_serializer: {type: boolean}, reconnect_on_error: {type: boolean}, reload_after: {type: string}, reload_connections: {type: boolean}, reload_on_failure: {type: boolean}, remove_keys: {type: string}, remove_keys_on_update: {type: string}, remove_keys_on_update_key: {type: string}, request_timeout: {type: string}, resurrect_after: {type: string}, retry_tag: {type: string}, rollover_index: {type: boolean}, routing_key: {type: string}, scheme: {type: string}, slow_flush_log_threshold: {type: string}, sniffer_class_name: {type: string}, ssl_max_version: {type: string}, ssl_min_version: {type: string}, ssl_verify: {type: boolean}, ssl_version: {type: string}, suppress_doc_wrap: {type: boolean}, suppress_type_name: {type: boolean}, tag_key: {type: string}, target_index_key: {type: string}, target_type_key: {type: string}, template_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, template_name: {type: string}, template_overwrite: {type: boolean}, templates: {type: string}, time_key: {type: string}, time_key_format: {type: string}, time_parse_error_tag: {type: string}, time_precision: {type: string}, type_name: {type: string}, unrecoverable_error_types: {type: string}, user: {type: string}, utc_index: {type: boolean}, validate_client_version: {type: boolean}, verify_es_version_at_startup: {type: boolean}, with_transporter_log: {type: boolean}, write_operation: {type: string}}, type: object}, file: {properties: {add_path_suffix: {type: boolean}, append: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, compress: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, path: {type: string}, path_suffix: {type: string}, recompress: {type: boolean}, slow_flush_log_threshold: {type: string}, symlink_path: {type: boolean}}, required: [path], type: object}, forward: {properties: {ack_response_timeout: {type: integer}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, connect_timeout: {type: integer}, dns_round_robin: {type: boolean}, expire_dns_cache: {type: integer}, hard_timeout: {type: integer}, heartbeat_interval: {type: integer}, heartbeat_type: {type: string}, ignore_network_errors_at_startup: {type: boolean}, keepalive: {type: boolean}, keepalive_timeout: {type: integer}, phi_failure_detector: {type: boolean}, phi_threshold: {type: integer}, recover_wait: {type: integer}, require_ack_response: {type: boolean}, security: {properties: {allow_anonymous_source: {type: boolean}, self_hostname: {type: string}, shared_key: {type: string}, user_auth: {type: boolean}}, required: [self_hostname, shared_key], type: object}, send_timeout: {type: integer}, servers: {items: {properties: {host: {type: string}, name: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, port: {type: integer}, shared_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, standby: {type: boolean}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, weight: {type: integer}}, required: [host], type: object}, type: array}, slow_flush_log_threshold: {type: string}, tls_allow_self_signed_cert: {type: boolean}, tls_cert_logical_store_name: {type: string}, tls_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_cert_thumbprint: {type: string}, tls_cert_use_enterprise_store: {type: boolean}, tls_ciphers: {type: string}, tls_client_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_client_private_key_passphrase: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_client_private_key_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_insecure_mode: {type: boolean}, tls_verify_hostname: {type: boolean}, tls_version: {type: string}, transport: {type: string}, verify_connection_at_startup: {type: boolean}}, required: [servers], type: object}, gcs: {properties: {acl: {type: string}, auto_create_bucket: {type: boolean}, bucket: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, client_retries: {type: integer}, client_timeout: {type: integer}, credentials_json: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, encryption_key: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, hex_random_length: {type: integer}, keyfile: {type: string}, object_key_format: {type: string}, object_metadata: {items: {properties: {key: {type: string}, value: {type: string}}, required: [key, value], type: object}, type: array}, overwrite: {type: boolean}, path: {type: string}, project: {type: string}, slow_flush_log_threshold: {type: string}, storage_class: {type: string}, store_as: {type: string}, transcoding: {type: boolean}}, required: [bucket, project], type: object}, gelf: {properties: {host: {type: string}, port: {type: integer}, protocol: {type: string}, tls: {type: boolean}, tls_options: {additionalProperties: {type: string}, type: object}}, required: [host, port], type: object}, http: {properties: {auth: {properties: {password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, required: [password, username], type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, content_type: {type: string}, endpoint: {type: string}, error_response_as_unrecoverable: {type: boolean}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, headers: {additionalProperties: {type: string}, type: object}, http_method: {type: string}, json_array: {type: boolean}, open_timeout: {type: integer}, proxy: {type: string}, read_timeout: {type: integer}, retryable_response_codes: {items: {type: integer}, type: array}, slow_flush_log_threshold: {type: string}, ssl_timeout: {type: integer}, tls_ca_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_ciphers: {type: string}, tls_client_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_private_key_passphrase: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_private_key_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, tls_verify_mode: {type: string}, tls_version: {type: string}}, required: [endpoint], type: object}, kafka: {properties: {ack_timeout: {type: integer}, brokers: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, client_id: {type: string}, compression_codec: {type: string}, default_message_key: {type: string}, default_partition_key: {type: string}, default_topic: {type: string}, discard_kafka_delivery_failed: {type: boolean}, exclude_partion_key: {type: boolean}, exclude_topic_key: {type: boolean}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, get_kafka_client_log: {type: boolean}, headers: {additionalProperties: {type: string}, type: object}, headers_from_record: {additionalProperties: {type: string}, type: object}, idempotent: {type: boolean}, kafka_agg_max_bytes: {type: integer}, kafka_agg_max_messages: {type: integer}, keytab: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, max_send_retries: {type: integer}, message_key_key: {type: string}, partition_key: {type: string}, partition_key_key: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, principal: {type: string}, required_acks: {type: integer}, sasl_over_ssl: {type: boolean}, scram_mechanism: {type: string}, slow_flush_log_threshold: {type: string}, ssl_ca_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_ca_certs_from_system: {type: boolean}, ssl_client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_client_cert_chain: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_client_cert_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ssl_verify_hostname: {type: boolean}, topic_key: {type: string}, use_default_for_unknown_topic: {type: boolean}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, required: [brokers, format], type: object}, kinesisStream: {properties: {assume_role_credentials: {properties: {duration_seconds: {type: string}, external_id: {type: string}, policy: {type: string}, role_arn: {type: string}, role_session_name: {type: string}}, required: [role_arn, role_session_name], type: object}, aws_iam_retries: {type: integer}, aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_ses_token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, batch_request_max_count: {type: integer}, batch_request_max_size: {type: integer}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, partition_key: {type: string}, process_credentials: {properties: {process: {type: string}}, required: [process], type: object}, region: {type: string}, reset_backoff_if_success: {type: boolean}, retries_on_batch_request: {type: integer}, slow_flush_log_threshold: {type: string}, stream_name: {type: string}}, required: [stream_name], type: object}, logdna: {properties: {api_key: {type: string}, app: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, hostname: {type: string}, ingester_domain: {type: string}, ingester_endpoint: {type: string}, request_timeout: {type: string}, slow_flush_log_threshold: {type: string}, tags: {type: string}}, required: [api_key, hostname], type: object}, loggingRef: {type: string}, logz: {properties: {buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_limit: {type: integer}, bulk_limit_warning_limit: {type: integer}, endpoint: {properties: {port: {type: integer}, token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, url: {type: string}}, type: object}, gzip: {type: boolean}, http_idle_timeout: {type: integer}, output_include_tags: {type: boolean}, output_include_time: {type: boolean}, retry_count: {type: integer}, retry_sleep: {type: integer}, slow_flush_log_threshold: {type: string}}, required: [endpoint], type: object}, loki: {properties: {buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, ca_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, configure_kubernetes_labels: {type: boolean}, drop_single_key: {type: boolean}, extra_labels: {additionalProperties: {type: string}, type: object}, extract_kubernetes_labels: {type: boolean}, include_thread_label: {type: boolean}, insecure_tls: {type: boolean}, key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, labels: {additionalProperties: {type: string}, type: object}, line_format: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, remove_keys: {items: {type: string}, type: array}, slow_flush_log_threshold: {type: string}, tenant: {type: string}, url: {type: string}, username: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, type: object}, newrelic: {properties: {api_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, base_uri: {type: string}, license_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, type: object}, nullout: {type: object}, opensearch: {properties: {application_name: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, bulk_message_request_threshold: {type: string}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, catch_transport_exception_on_retry: {type: boolean}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key_pass: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, compression_level: {type: string}, custom_headers: {type: string}, customize_template: {type: string}, data_stream_enable: {type: boolean}, data_stream_name: {type: string}, data_stream_template_name: {type: string}, default_opensearch_version: {type: integer}, emit_error_for_missing_id: {type: boolean}, emit_error_label_event: {type: boolean}, exception_backup: {type: boolean}, fail_on_detecting_os_version_retry_exceed: {type: boolean}, fail_on_putting_template_retry_exceed: {type: boolean}, flatten_hashes: {type: boolean}, flatten_hashes_separator: {type: string}, host: {type: string}, hosts: {type: string}, http_backend: {type: string}, http_backend_excon_nonblock: {type: boolean}, id_key: {type: string}, ignore_exceptions: {type: string}, include_index_in_url: {type: boolean}, include_tag_key: {type: boolean}, include_timestamp: {type: boolean}, index_date_pattern: {type: string}, index_name: {type: string}, index_separator: {type: string}, log_os_400_reason: {type: boolean}, logstash_dateformat: {type: string}, logstash_format: {type: boolean}, logstash_prefix: {type: string}, logstash_prefix_separator: {type: string}, max_retry_get_os_version: {type: integer}, max_retry_putting_template: {type: string}, parent_key: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, path: {type: string}, pipeline: {type: string}, port: {type: integer}, prefer_oj_serializer: {type: boolean}, reconnect_on_error: {type: boolean}, reload_after: {type: string}, reload_connections: {type: boolean}, reload_on_failure: {type: boolean}, remove_keys_on_update: {type: string}, remove_keys_on_update_key: {type: string}, request_timeout: {type: string}, resurrect_after: {type: string}, retry_tag: {type: string}, routing_key: {type: string}, scheme: {type: string}, selector_class_name: {type: string}, slow_flush_log_threshold: {type: string}, sniffer_class_name: {type: string}, ssl_verify: {type: boolean}, suppress_doc_wrap: {type: boolean}, suppress_type_name: {type: boolean}, tag_key: {type: string}, target_index_affinity: {type: boolean}, target_index_key: {type: string}, template_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, template_name: {type: string}, template_overwrite: {type: boolean}, templates: {type: string}, time_key: {type: string}, time_key_exclude_timestamp: {type: boolean}, time_key_format: {type: string}, time_parse_error_tag: {type: string}, time_precision: {type: string}, truncate_caches_interval: {type: string}, unrecoverable_error_types: {type: string}, unrecoverable_record_types: {type: string}, use_legacy_template: {type: boolean}, user: {type: string}, utc_index: {type: boolean}, validate_client_version: {type: boolean}, verify_os_version_at_startup: {type: boolean}, with_transporter_log: {type: boolean}, write_operation: {type: string}}, type: object}, oss: {properties: {aaccess_key_secret: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, access_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, auto_create_bucket: {type: boolean}, bucket: {type: string}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, check_bucket: {type: boolean}, check_object: {type: boolean}, download_crc_enable: {type: boolean}, endpoint: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, hex_random_length: {type: integer}, index_format: {type: string}, key_format: {type: string}, open_timeout: {type: integer}, oss_sdk_log_dir: {type: string}, overwrite: {type: boolean}, path: {type: string}, read_timeout: {type: integer}, slow_flush_log_threshold: {type: string}, store_as: {type: string}, upload_crc_enable: {type: boolean}, warn_for_delay: {type: string}}, required: [aaccess_key_secret, access_key_id, bucket, endpoint], type: object}, redis: {properties: {allow_duplicate_key: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, db_number: {type: integer}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, host: {type: string}, insert_key_prefix: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, port: {type: integer}, slow_flush_log_threshold: {type: string}, strftime_format: {type: string}, ttl: {type: integer}}, type: object}, s3: {properties: {acl: {type: string}, assume_role_credentials: {properties: {duration_seconds: {type: string}, external_id: {type: string}, policy: {type: string}, role_arn: {type: string}, role_session_name: {type: string}}, required: [role_arn, role_session_name], type: object}, auto_create_bucket: {type: string}, aws_iam_retries: {type: string}, aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, check_apikey_on_start: {type: string}, check_bucket: {type: string}, check_object: {type: string}, clustername: {type: string}, compress: {properties: {parquet_compression_codec: {type: string}, parquet_page_size: {type: string}, parquet_row_group_size: {type: string}, record_type: {type: string}, schema_file: {type: string}, schema_type: {type: string}}, type: object}, compute_checksums: {type: string}, enable_transfer_acceleration: {type: string}, force_path_style: {type: string}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, grant_full_control: {type: string}, grant_read: {type: string}, grant_read_acp: {type: string}, grant_write_acp: {type: string}, hex_random_length: {type: string}, index_format: {type: string}, instance_profile_credentials: {properties: {http_open_timeout: {type: string}, http_read_timeout: {type: string}, ip_address: {type: string}, port: {type: string}, retries: {type: string}}, type: object}, oneeye_format: {type: boolean}, overwrite: {type: string}, path: {type: string}, proxy_uri: {type: string}, s3_bucket: {type: string}, s3_endpoint: {type: string}, s3_metadata: {type: string}, s3_object_key_format: {type: string}, s3_region: {type: string}, shared_credentials: {properties: {path: {type: string}, profile_name: {type: string}}, type: object}, signature_version: {type: string}, slow_flush_log_threshold: {type: string}, sse_customer_algorithm: {type: string}, sse_customer_key: {type: string}, sse_customer_key_md5: {type: string}, ssekms_key_id: {type: string}, ssl_verify_peer: {type: string}, storage_class: {type: string}, store_as: {type: string}, use_bundled_cert: {type: string}, use_server_side_encryption: {type: string}, warn_for_delay: {type: string}}, required: [s3_bucket], type: object}, splunkHec: {properties: {buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ca_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_cert: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, client_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, coerce_to_utf8: {type: boolean}, data_type: {type: string}, fields: {additionalProperties: {type: string}, type: object}, format: {properties: {add_newline: {type: boolean}, message_key: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, hec_host: {type: string}, hec_port: {type: integer}, hec_token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, host: {type: string}, host_key: {type: string}, idle_timeout: {type: integer}, index: {type: string}, index_key: {type: string}, insecure_ssl: {type: boolean}, keep_keys: {type: boolean}, metric_name_key: {type: string}, metric_value_key: {type: string}, metrics_from_event: {type: boolean}, non_utf8_replacement_string: {type: string}, open_timeout: {type: integer}, protocol: {type: string}, read_timeout: {type: integer}, slow_flush_log_threshold: {type: string}, source: {type: string}, source_key: {type: string}, sourcetype: {type: string}, sourcetype_key: {type: string}, ssl_ciphers: {type: string}}, required: [hec_host, hec_token], type: object}, sqs: {properties: {aws_key_id: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, aws_sec_key: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, create_queue: {type: boolean}, delay_seconds: {type: integer}, include_tag: {type: boolean}, message_group_id: {type: string}, queue_name: {type: string}, region: {type: string}, slow_flush_log_threshold: {type: string}, sqs_url: {type: string}, tag_property_name: {type: string}}, type: object}, sumologic: {properties: {add_timestamp: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, compress: {type: boolean}, compress_encoding: {type: string}, custom_dimensions: {type: string}, custom_fields: {items: {type: string}, type: array}, data_type: {type: string}, delimiter: {type: string}, disable_cookies: {type: boolean}, endpoint: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, log_format: {type: string}, log_key: {type: string}, metric_data_format: {type: string}, open_timeout: {type: integer}, proxy_uri: {type: string}, slow_flush_log_threshold: {type: string}, source_category: {type: string}, source_host: {type: string}, source_name: {type: string}, source_name_key: {type: string}, sumo_client: {type: string}, timestamp_key: {type: string}, verify_ssl: {type: boolean}}, required: [endpoint, source_name], type: object}, syslog: {properties: {allow_self_signed_cert: {type: boolean}, buffer: {properties: {chunk_full_threshold: {type: string}, chunk_limit_records: {type: integer}, chunk_limit_size: {type: string}, compress: {type: string}, delayed_commit_timeout: {type: string}, disable_chunk_backup: {type: boolean}, disabled: {type: boolean}, flush_at_shutdown: {type: boolean}, flush_interval: {type: string}, flush_mode: {type: string}, flush_thread_burst_interval: {type: string}, flush_thread_count: {type: integer}, flush_thread_interval: {type: string}, overflow_action: {type: string}, path: {type: string}, queue_limit_length: {type: integer}, queued_chunks_limit_size: {type: integer}, retry_exponential_backoff_base: {type: string}, retry_forever: {type: boolean}, retry_max_interval: {type: string}, retry_max_times: {type: integer}, retry_randomize: {type: boolean}, retry_secondary_threshold: {type: string}, retry_timeout: {type: string}, retry_type: {type: string}, retry_wait: {type: string}, tags: {type: string}, timekey: {type: string}, timekey_use_utc: {type: boolean}, timekey_wait: {type: string}, timekey_zone: {type: string}, total_limit_size: {type: string}, type: {type: string}}, type: object}, client_cert_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, enable_system_cert_store: {type: boolean}, format: {properties: {app_name_field: {type: string}, hostname_field: {type: string}, log_field: {type: string}, message_id_field: {type: string}, proc_id_field: {type: string}, rfc6587_message_size: {type: boolean}, structured_data_field: {type: string}, type: {enum: [out_file, json, ltsv, csv, msgpack, hash, single_value], type: string}}, type: object}, fqdn: {type: string}, host: {type: string}, insecure: {type: boolean}, port: {type: integer}, private_key_passphrase: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, private_key_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, slow_flush_log_threshold: {type: string}, transport: {type: string}, trusted_ca_path: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, verify_fqdn: {type: boolean}, version: {type: string}}, required: [host], type: object}}, type: object}, status: {properties: {active: {type: boolean}, problems: {items: {type: string}, type: array}, problemsCount: {type: integer}}, type: object}}, type: object}}, served: true, storage: true, subresources: {status: {}}}]}, status: {acceptedNames: {kind: "", plural: ""}, conditions: [], storedVersions: []}}
---
{apiVersion: apiextensions.k8s.io/v1, kind: CustomResourceDefinition, metadata: {annotations: {controller-gen.kubebuilder.io/version: v0.6.0}, creationTimestamp: null, name: syslogngclusterflows.logging.opni.io}, spec: {group: logging.opni.io, names: {categories: [logging-all], kind: SyslogNGClusterFlow, listKind: SyslogNGClusterFlowList, plural: syslogngclusterflows, singular: syslogngclusterflow}, scope: Namespaced, versions: [{additionalPrinterColumns: [{jsonPath: .status.active, name: Active, type: boolean}, {jsonPath: .status.problemsCount, name: Problems, type: integer}], name: v1beta1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {filters: {items: {properties: {id: {type: string}, match: {properties: {and: {x-kubernetes-preserve-unknown-fields: true}, not: {x-kubernetes-preserve-unknown-fields: true}, or: {x-kubernetes-preserve-unknown-fields: true}, regexp: {properties: {flags: {items: {type: string}, type: array}, pattern: {type: string}, template: {type: string}, type: {type: string}, value: {type: string}}, required: [pattern], type: object}}, type: object}, parser: {properties: {regexp: {properties: {flags: {items: {type: string}, type: array}, patterns: {items: {type: string}, type: array}, prefix: {type: string}, template: {type: string}}, required: [patterns], type: object}, syslog-parser: {properties: {flags: {items: {type: string}, type: array}}, type: object}}, type: object}, rewrite: {items: {properties: {group_unset: {properties: {condition: {properties: {and: {x-kubernetes-preserve-unknown-fields: true}, not: {x-kubernetes-preserve-unknown-fields: true}, or: {x-kubernetes-preserve-unknown-fields: true}, regexp: {properties: {flags: {items: {type: string}, type: array}, pattern: {type: string}, template: {type: string}, type: {type: string}, value: {type: string}}, required: [pattern], type: object}}, type: object}, pattern: {type: string}}, required: [pattern], type: object}, rename: {properties: {condition: {properties: {and: {x-kubernetes-preserve-unknown-fields: true}, not: {x-kubernetes-preserve-unknown-fields: true}, or: {x-kubernetes-preserve-unknown-fields: true}, regexp: {properties: {flags: {items: {type: string}, type: array}, pattern: {type: string}, template: {type: string}, type: {type: string}, value: {type: string}}, required: [pattern], type: object}}, type: object}, newName: {type: string}, oldName: {type: string}}, required: [newName, oldName], type: object}, set: {properties: {condition: {properties: {and: {x-kubernetes-preserve-unknown-fields: true}, not: {x-kubernetes-preserve-unknown-fields: true}, or: {x-kubernetes-preserve-unknown-fields: true}, regexp: {properties: {flags: {items: {type: string}, type: array}, pattern: {type: string}, template: {type: string}, type: {type: string}, value: {type: string}}, required: [pattern], type: object}}, type: object}, field: {type: string}, value: {type: string}}, required: [field, value], type: object}, subst: {properties: {condition: {properties: {and: {x-kubernetes-preserve-unknown-fields: true}, not: {x-kubernetes-preserve-unknown-fields: true}, or: {x-kubernetes-preserve-unknown-fields: true}, regexp: {properties: {flags: {items: {type: string}, type: array}, pattern: {type: string}, template: {type: string}, type: {type: string}, value: {type: string}}, required: [pattern], type: object}}, type: object}, field: {type: string}, flags: {items: {type: string}, type: array}, pattern: {type: string}, replace: {type: string}, type: {type: string}}, required: [field, pattern, replace], type: object}, unset: {properties: {condition: {properties: {and: {x-kubernetes-preserve-unknown-fields: true}, not: {x-kubernetes-preserve-unknown-fields: true}, or: {x-kubernetes-preserve-unknown-fields: true}, regexp: {properties: {flags: {items: {type: string}, type: array}, pattern: {type: string}, template: {type: string}, type: {type: string}, value: {type: string}}, required: [pattern], type: object}}, type: object}, field: {type: string}}, required: [field], type: object}}, type: object}, type: array}}, type: object}, type: array}, globalOutputRefs: {items: {type: string}, type: array}, loggingRef: {type: string}, match: {properties: {and: {x-kubernetes-preserve-unknown-fields: true}, not: {x-kubernetes-preserve-unknown-fields: true}, or: {x-kubernetes-preserve-unknown-fields: true}, regexp: {properties: {flags: {items: {type: string}, type: array}, pattern: {type: string}, template: {type: string}, type: {type: string}, value: {type: string}}, required: [pattern], type: object}}, type: object}}, type: object}, status: {properties: {active: {type: boolean}, problems: {items: {type: string}, type: array}, problemsCount: {type: integer}}, type: object}}, type: object}}, served: true, storage: true, subresources: {status: {}}}]}, status: {acceptedNames: {kind: "", plural: ""}, conditions: [], storedVersions: []}}
---
{apiVersion: apiextensions.k8s.io/v1, kind: CustomResourceDefinition, metadata: {annotations: {controller-gen.kubebuilder.io/version: v0.6.0}, creationTimestamp: null, name: syslogngclusteroutputs.logging.opni.io}, spec: {group: logging.opni.io, names: {categories: [logging-all], kind: SyslogNGClusterOutput, listKind: SyslogNGClusterOutputList, plural: syslogngclusteroutputs, singular: syslogngclusteroutput}, scope: Namespaced, versions: [{additionalPrinterColumns: [{jsonPath: .status.active, name: Active, type: boolean}, {jsonPath: .status.problemsCount, name: Problems, type: integer}], name: v1beta1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {enabledNamespaces: {items: {type: string}, type: array}, file: {properties: {create_dirs: {type: boolean}, dir_group: {type: string}, dir_owner: {type: string}, dir_perm: {type: integer}, disk_buffer: {properties: {compaction: {type: boolean}, dir: {type: string}, disk_buf_size: {format: int64, type: integer}, mem_buf_length: {format: int64, type: integer}, mem_buf_size: {format: int64, type: integer}, q_out_size: {format: int64, type: integer}, reliable: {type: boolean}}, required: [disk_buf_size, reliable], type: object}, path: {type: string}, persist_name: {type: string}, template: {type: string}}, required: [path], type: object}, http: {properties: {batch-bytes: {type: integer}, batch-lines: {type: integer}, batch-timeout: {type: integer}, body: {type: string}, body-prefix: {type: string}, body-suffix: {type: string}, delimiter: {type: string}, disk_buffer: {properties: {compaction: {type: boolean}, dir: {type: string}, disk_buf_size: {format: int64, type: integer}, mem_buf_length: {format: int64, type: integer}, mem_buf_size: {format: int64, type: integer}, q_out_size: {format: int64, type: integer}, reliable: {type: boolean}}, required: [disk_buf_size, reliable], type: object}, headers: {items: {type: string}, type: array}, method: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, persist_name: {type: string}, retries: {type: integer}, time_reopen: {type: integer}, tls: {properties: {ca_dir: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cert_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cipher-suite: {type: string}, key_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, peer_verify: {type: string}, use-system-cert-store: {type: boolean}}, type: object}, url: {type: string}, user: {type: string}, user-agent: {type: string}, workers: {type: integer}}, type: object}, loggingRef: {type: string}, loggly: {properties: {close_on_input: {type: boolean}, disk_buffer: {properties: {compaction: {type: boolean}, dir: {type: string}, disk_buf_size: {format: int64, type: integer}, mem_buf_length: {format: int64, type: integer}, mem_buf_size: {format: int64, type: integer}, q_out_size: {format: int64, type: integer}, reliable: {type: boolean}}, required: [disk_buf_size, reliable], type: object}, flags: {items: {type: string}, type: array}, flush_lines: {type: integer}, host: {type: string}, persist_name: {type: string}, port: {type: integer}, so_keepalive: {type: boolean}, suppress: {type: integer}, tag: {type: string}, template: {type: string}, template_escape: {type: boolean}, tls: {properties: {ca_dir: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cert_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cipher-suite: {type: string}, key_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, peer_verify: {type: string}, use-system-cert-store: {type: boolean}}, type: object}, token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, transport: {type: string}, ts_format: {type: string}}, required: [token], type: object}, sumologic-http: {properties: {batch-bytes: {type: integer}, batch-lines: {type: integer}, batch-timeout: {type: integer}, body: {type: string}, collector: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, deployment: {type: string}, disk_buffer: {properties: {compaction: {type: boolean}, dir: {type: string}, disk_buf_size: {format: int64, type: integer}, mem_buf_length: {format: int64, type: integer}, mem_buf_size: {format: int64, type: integer}, q_out_size: {format: int64, type: integer}, reliable: {type: boolean}}, required: [disk_buf_size, reliable], type: object}, headers: {items: {type: string}, type: array}, persist_name: {type: string}, time_reopen: {type: integer}, tls: {properties: {ca_dir: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cert_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cipher-suite: {type: string}, key_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, peer_verify: {type: string}, use-system-cert-store: {type: boolean}}, type: object}, url: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, type: object}, sumologic-syslog: {properties: {deployment: {type: string}, disk_buffer: {properties: {compaction: {type: boolean}, dir: {type: string}, disk_buf_size: {format: int64, type: integer}, mem_buf_length: {format: int64, type: integer}, mem_buf_size: {format: int64, type: integer}, q_out_size: {format: int64, type: integer}, reliable: {type: boolean}}, required: [disk_buf_size, reliable], type: object}, persist_name: {type: string}, port: {type: integer}, tag: {type: string}, tls: {properties: {ca_dir: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cert_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cipher-suite: {type: string}, key_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, peer_verify: {type: string}, use-system-cert-store: {type: boolean}}, type: object}, token: {type: integer}}, type: object}, syslog: {properties: {close_on_input: {type: boolean}, disk_buffer: {properties: {compaction: {type: boolean}, dir: {type: string}, disk_buf_size: {format: int64, type: integer}, mem_buf_length: {format: int64, type: integer}, mem_buf_size: {format: int64, type: integer}, q_out_size: {format: int64, type: integer}, reliable: {type: boolean}}, required: [disk_buf_size, reliable], type: object}, flags: {items: {type: string}, type: array}, flush_lines: {type: integer}, host: {type: string}, persist_name: {type: string}, port: {type: integer}, so_keepalive: {type: boolean}, suppress: {type: integer}, template: {type: string}, template_escape: {type: boolean}, tls: {properties: {ca_dir: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cert_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cipher-suite: {type: string}, key_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, peer_verify: {type: string}, use-system-cert-store: {type: boolean}}, type: object}, transport: {type: string}, ts_format: {type: string}}, type: object}}, type: object}, status: {properties: {active: {type: boolean}, problems: {items: {type: string}, type: array}, problemsCount: {type: integer}}, type: object}}, required: [spec], type: object}}, served: true, storage: true, subresources: {status: {}}}]}, status: {acceptedNames: {kind: "", plural: ""}, conditions: [], storedVersions: []}}
---
{apiVersion: apiextensions.k8s.io/v1, kind: CustomResourceDefinition, metadata: {annotations: {controller-gen.kubebuilder.io/version: v0.6.0}, creationTimestamp: null, name: syslogngflows.logging.opni.io}, spec: {group: logging.opni.io, names: {categories: [logging-all], kind: SyslogNGFlow, listKind: SyslogNGFlowList, plural: syslogngflows, singular: syslogngflow}, scope: Namespaced, versions: [{additionalPrinterColumns: [{jsonPath: .status.active, name: Active, type: boolean}, {jsonPath: .status.problemsCount, name: Problems, type: integer}], name: v1beta1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {filters: {items: {properties: {id: {type: string}, match: {properties: {and: {x-kubernetes-preserve-unknown-fields: true}, not: {x-kubernetes-preserve-unknown-fields: true}, or: {x-kubernetes-preserve-unknown-fields: true}, regexp: {properties: {flags: {items: {type: string}, type: array}, pattern: {type: string}, template: {type: string}, type: {type: string}, value: {type: string}}, required: [pattern], type: object}}, type: object}, parser: {properties: {regexp: {properties: {flags: {items: {type: string}, type: array}, patterns: {items: {type: string}, type: array}, prefix: {type: string}, template: {type: string}}, required: [patterns], type: object}, syslog-parser: {properties: {flags: {items: {type: string}, type: array}}, type: object}}, type: object}, rewrite: {items: {properties: {group_unset: {properties: {condition: {properties: {and: {x-kubernetes-preserve-unknown-fields: true}, not: {x-kubernetes-preserve-unknown-fields: true}, or: {x-kubernetes-preserve-unknown-fields: true}, regexp: {properties: {flags: {items: {type: string}, type: array}, pattern: {type: string}, template: {type: string}, type: {type: string}, value: {type: string}}, required: [pattern], type: object}}, type: object}, pattern: {type: string}}, required: [pattern], type: object}, rename: {properties: {condition: {properties: {and: {x-kubernetes-preserve-unknown-fields: true}, not: {x-kubernetes-preserve-unknown-fields: true}, or: {x-kubernetes-preserve-unknown-fields: true}, regexp: {properties: {flags: {items: {type: string}, type: array}, pattern: {type: string}, template: {type: string}, type: {type: string}, value: {type: string}}, required: [pattern], type: object}}, type: object}, newName: {type: string}, oldName: {type: string}}, required: [newName, oldName], type: object}, set: {properties: {condition: {properties: {and: {x-kubernetes-preserve-unknown-fields: true}, not: {x-kubernetes-preserve-unknown-fields: true}, or: {x-kubernetes-preserve-unknown-fields: true}, regexp: {properties: {flags: {items: {type: string}, type: array}, pattern: {type: string}, template: {type: string}, type: {type: string}, value: {type: string}}, required: [pattern], type: object}}, type: object}, field: {type: string}, value: {type: string}}, required: [field, value], type: object}, subst: {properties: {condition: {properties: {and: {x-kubernetes-preserve-unknown-fields: true}, not: {x-kubernetes-preserve-unknown-fields: true}, or: {x-kubernetes-preserve-unknown-fields: true}, regexp: {properties: {flags: {items: {type: string}, type: array}, pattern: {type: string}, template: {type: string}, type: {type: string}, value: {type: string}}, required: [pattern], type: object}}, type: object}, field: {type: string}, flags: {items: {type: string}, type: array}, pattern: {type: string}, replace: {type: string}, type: {type: string}}, required: [field, pattern, replace], type: object}, unset: {properties: {condition: {properties: {and: {x-kubernetes-preserve-unknown-fields: true}, not: {x-kubernetes-preserve-unknown-fields: true}, or: {x-kubernetes-preserve-unknown-fields: true}, regexp: {properties: {flags: {items: {type: string}, type: array}, pattern: {type: string}, template: {type: string}, type: {type: string}, value: {type: string}}, required: [pattern], type: object}}, type: object}, field: {type: string}}, required: [field], type: object}}, type: object}, type: array}}, type: object}, type: array}, globalOutputRefs: {items: {type: string}, type: array}, localOutputRefs: {items: {type: string}, type: array}, loggingRef: {type: string}, match: {properties: {and: {x-kubernetes-preserve-unknown-fields: true}, not: {x-kubernetes-preserve-unknown-fields: true}, or: {x-kubernetes-preserve-unknown-fields: true}, regexp: {properties: {flags: {items: {type: string}, type: array}, pattern: {type: string}, template: {type: string}, type: {type: string}, value: {type: string}}, required: [pattern], type: object}}, type: object}}, type: object}, status: {properties: {active: {type: boolean}, problems: {items: {type: string}, type: array}, problemsCount: {type: integer}}, type: object}}, type: object}}, served: true, storage: true, subresources: {status: {}}}]}, status: {acceptedNames: {kind: "", plural: ""}, conditions: [], storedVersions: []}}
---
{apiVersion: apiextensions.k8s.io/v1, kind: CustomResourceDefinition, metadata: {annotations: {controller-gen.kubebuilder.io/version: v0.6.0}, creationTimestamp: null, name: syslogngoutputs.logging.opni.io}, spec: {group: logging.opni.io, names: {categories: [logging-all], kind: SyslogNGOutput, listKind: SyslogNGOutputList, plural: syslogngoutputs, singular: syslogngoutput}, scope: Namespaced, versions: [{additionalPrinterColumns: [{jsonPath: .status.active, name: Active, type: boolean}, {jsonPath: .status.problemsCount, name: Problems, type: integer}], name: v1beta1, schema: {openAPIV3Schema: {properties: {apiVersion: {type: string}, kind: {type: string}, metadata: {type: object}, spec: {properties: {file: {properties: {create_dirs: {type: boolean}, dir_group: {type: string}, dir_owner: {type: string}, dir_perm: {type: integer}, disk_buffer: {properties: {compaction: {type: boolean}, dir: {type: string}, disk_buf_size: {format: int64, type: integer}, mem_buf_length: {format: int64, type: integer}, mem_buf_size: {format: int64, type: integer}, q_out_size: {format: int64, type: integer}, reliable: {type: boolean}}, required: [disk_buf_size, reliable], type: object}, path: {type: string}, persist_name: {type: string}, template: {type: string}}, required: [path], type: object}, http: {properties: {batch-bytes: {type: integer}, batch-lines: {type: integer}, batch-timeout: {type: integer}, body: {type: string}, body-prefix: {type: string}, body-suffix: {type: string}, delimiter: {type: string}, disk_buffer: {properties: {compaction: {type: boolean}, dir: {type: string}, disk_buf_size: {format: int64, type: integer}, mem_buf_length: {format: int64, type: integer}, mem_buf_size: {format: int64, type: integer}, q_out_size: {format: int64, type: integer}, reliable: {type: boolean}}, required: [disk_buf_size, reliable], type: object}, headers: {items: {type: string}, type: array}, method: {type: string}, password: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, persist_name: {type: string}, retries: {type: integer}, time_reopen: {type: integer}, tls: {properties: {ca_dir: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cert_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cipher-suite: {type: string}, key_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, peer_verify: {type: string}, use-system-cert-store: {type: boolean}}, type: object}, url: {type: string}, user: {type: string}, user-agent: {type: string}, workers: {type: integer}}, type: object}, loggingRef: {type: string}, loggly: {properties: {close_on_input: {type: boolean}, disk_buffer: {properties: {compaction: {type: boolean}, dir: {type: string}, disk_buf_size: {format: int64, type: integer}, mem_buf_length: {format: int64, type: integer}, mem_buf_size: {format: int64, type: integer}, q_out_size: {format: int64, type: integer}, reliable: {type: boolean}}, required: [disk_buf_size, reliable], type: object}, flags: {items: {type: string}, type: array}, flush_lines: {type: integer}, host: {type: string}, persist_name: {type: string}, port: {type: integer}, so_keepalive: {type: boolean}, suppress: {type: integer}, tag: {type: string}, template: {type: string}, template_escape: {type: boolean}, tls: {properties: {ca_dir: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cert_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cipher-suite: {type: string}, key_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, peer_verify: {type: string}, use-system-cert-store: {type: boolean}}, type: object}, token: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, transport: {type: string}, ts_format: {type: string}}, required: [token], type: object}, sumologic-http: {properties: {batch-bytes: {type: integer}, batch-lines: {type: integer}, batch-timeout: {type: integer}, body: {type: string}, collector: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, deployment: {type: string}, disk_buffer: {properties: {compaction: {type: boolean}, dir: {type: string}, disk_buf_size: {format: int64, type: integer}, mem_buf_length: {format: int64, type: integer}, mem_buf_size: {format: int64, type: integer}, q_out_size: {format: int64, type: integer}, reliable: {type: boolean}}, required: [disk_buf_size, reliable], type: object}, headers: {items: {type: string}, type: array}, persist_name: {type: string}, time_reopen: {type: integer}, tls: {properties: {ca_dir: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cert_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cipher-suite: {type: string}, key_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, peer_verify: {type: string}, use-system-cert-store: {type: boolean}}, type: object}, url: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}}, type: object}, sumologic-syslog: {properties: {deployment: {type: string}, disk_buffer: {properties: {compaction: {type: boolean}, dir: {type: string}, disk_buf_size: {format: int64, type: integer}, mem_buf_length: {format: int64, type: integer}, mem_buf_size: {format: int64, type: integer}, q_out_size: {format: int64, type: integer}, reliable: {type: boolean}}, required: [disk_buf_size, reliable], type: object}, persist_name: {type: string}, port: {type: integer}, tag: {type: string}, tls: {properties: {ca_dir: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cert_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cipher-suite: {type: string}, key_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, peer_verify: {type: string}, use-system-cert-store: {type: boolean}}, type: object}, token: {type: integer}}, type: object}, syslog: {properties: {close_on_input: {type: boolean}, disk_buffer: {properties: {compaction: {type: boolean}, dir: {type: string}, disk_buf_size: {format: int64, type: integer}, mem_buf_length: {format: int64, type: integer}, mem_buf_size: {format: int64, type: integer}, q_out_size: {format: int64, type: integer}, reliable: {type: boolean}}, required: [disk_buf_size, reliable], type: object}, flags: {items: {type: string}, type: array}, flush_lines: {type: integer}, host: {type: string}, persist_name: {type: string}, port: {type: integer}, so_keepalive: {type: boolean}, suppress: {type: integer}, template: {type: string}, template_escape: {type: boolean}, tls: {properties: {ca_dir: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, ca_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cert_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, cipher-suite: {type: string}, key_file: {properties: {mountFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}, value: {type: string}, valueFrom: {properties: {secretKeyRef: {properties: {key: {type: string}, name: {type: string}, optional: {type: boolean}}, required: [key], type: object}}, type: object}}, type: object}, peer_verify: {type: string}, use-system-cert-store: {type: boolean}}, type: object}, transport: {type: string}, ts_format: {type: string}}, type: object}}, type: object}, status: {properties: {active: {type: boolean}, problems: {items: {type: string}, type: array}, problemsCount: {type: integer}}, type: object}}, type: object}}, served: true, storage: true, subresources: {status: {}}}]}, status: {acceptedNames: {kind: "", plural: ""}, conditions: [], storedVersions: []}}
