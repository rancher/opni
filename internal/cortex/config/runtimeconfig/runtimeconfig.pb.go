// Code generated by internal/codegen. You may edit parts of this file.
// Field numbers and custom options will be preserved for matching field names.
// All other modifications will be lost.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v1.0.0
// source: github.com/rancher/opni/internal/cortex/config/runtimeconfig/runtimeconfig.proto

package runtimeconfig

import (
	_ "github.com/rancher/opni/internal/codegen/cli"
	validation "github.com/rancher/opni/internal/cortex/config/validation"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RuntimeConfigValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Overrides                           map[string]*validation.Limits `protobuf:"bytes,1,rep,name=overrides,proto3" json:"overrides,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MultiKvConfig                       *KvMultiRuntimeConfig         `protobuf:"bytes,2,opt,name=multi_kv_config,json=multiKvConfig,proto3" json:"multi_kv_config,omitempty"`
	IngesterStreamChunksWhenUsingBlocks *bool                         `protobuf:"varint,3,opt,name=ingester_stream_chunks_when_using_blocks,json=ingesterStreamChunksWhenUsingBlocks,proto3,oneof" json:"ingester_stream_chunks_when_using_blocks,omitempty"`
	IngesterLimits                      *IngesterInstanceLimits       `protobuf:"bytes,4,opt,name=ingester_limits,json=ingesterLimits,proto3" json:"ingester_limits,omitempty"`
}

func (x *RuntimeConfigValues) Reset() {
	*x = RuntimeConfigValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeConfigValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeConfigValues) ProtoMessage() {}

func (x *RuntimeConfigValues) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeConfigValues.ProtoReflect.Descriptor instead.
func (*RuntimeConfigValues) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_rawDescGZIP(), []int{0}
}

func (x *RuntimeConfigValues) GetOverrides() map[string]*validation.Limits {
	if x != nil {
		return x.Overrides
	}
	return nil
}

func (x *RuntimeConfigValues) GetMultiKvConfig() *KvMultiRuntimeConfig {
	if x != nil {
		return x.MultiKvConfig
	}
	return nil
}

func (x *RuntimeConfigValues) GetIngesterStreamChunksWhenUsingBlocks() bool {
	if x != nil && x.IngesterStreamChunksWhenUsingBlocks != nil {
		return *x.IngesterStreamChunksWhenUsingBlocks
	}
	return false
}

func (x *RuntimeConfigValues) GetIngesterLimits() *IngesterInstanceLimits {
	if x != nil {
		return x.IngesterLimits
	}
	return nil
}

type IngesterInstanceLimits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxIngestionRate        *float64 `protobuf:"fixed64,1,opt,name=max_ingestion_rate,json=maxIngestionRate,proto3,oneof" json:"max_ingestion_rate,omitempty"`
	MaxTenants              *int64   `protobuf:"varint,2,opt,name=max_tenants,json=maxTenants,proto3,oneof" json:"max_tenants,omitempty"`
	MaxSeries               *int64   `protobuf:"varint,3,opt,name=max_series,json=maxSeries,proto3,oneof" json:"max_series,omitempty"`
	MaxInflightPushRequests *int64   `protobuf:"varint,4,opt,name=max_inflight_push_requests,json=maxInflightPushRequests,proto3,oneof" json:"max_inflight_push_requests,omitempty"`
}

func (x *IngesterInstanceLimits) Reset() {
	*x = IngesterInstanceLimits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngesterInstanceLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngesterInstanceLimits) ProtoMessage() {}

func (x *IngesterInstanceLimits) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngesterInstanceLimits.ProtoReflect.Descriptor instead.
func (*IngesterInstanceLimits) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_rawDescGZIP(), []int{1}
}

func (x *IngesterInstanceLimits) GetMaxIngestionRate() float64 {
	if x != nil && x.MaxIngestionRate != nil {
		return *x.MaxIngestionRate
	}
	return 0
}

func (x *IngesterInstanceLimits) GetMaxTenants() int64 {
	if x != nil && x.MaxTenants != nil {
		return *x.MaxTenants
	}
	return 0
}

func (x *IngesterInstanceLimits) GetMaxSeries() int64 {
	if x != nil && x.MaxSeries != nil {
		return *x.MaxSeries
	}
	return 0
}

func (x *IngesterInstanceLimits) GetMaxInflightPushRequests() int64 {
	if x != nil && x.MaxInflightPushRequests != nil {
		return *x.MaxInflightPushRequests
	}
	return 0
}

type KvMultiRuntimeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Primary       *string `protobuf:"bytes,1,opt,name=primary,proto3,oneof" json:"primary,omitempty"`
	MirrorEnabled *bool   `protobuf:"varint,2,opt,name=mirror_enabled,json=mirrorEnabled,proto3,oneof" json:"mirror_enabled,omitempty"`
}

func (x *KvMultiRuntimeConfig) Reset() {
	*x = KvMultiRuntimeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvMultiRuntimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvMultiRuntimeConfig) ProtoMessage() {}

func (x *KvMultiRuntimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvMultiRuntimeConfig.ProtoReflect.Descriptor instead.
func (*KvMultiRuntimeConfig) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_rawDescGZIP(), []int{2}
}

func (x *KvMultiRuntimeConfig) GetPrimary() string {
	if x != nil && x.Primary != nil {
		return *x.Primary
	}
	return ""
}

func (x *KvMultiRuntimeConfig) GetMirrorEnabled() bool {
	if x != nil && x.MirrorEnabled != nil {
		return *x.MirrorEnabled
	}
	return false
}

var File_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto protoreflect.FileDescriptor

var file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_rawDesc = []byte{
	0x0a, 0x50, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x6e, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0d, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x6e, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x6c, 0x69, 0x2f,
	0x63, 0x6c, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70,
	0x6e, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x74,
	0x65, 0x78, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe6, 0x03, 0x0a, 0x13, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x09, 0x6f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x2e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x06, 0x8a, 0xc0, 0x0c, 0x02, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x6b, 0x76, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4b, 0x76, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x4b, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x5a, 0x0a, 0x28, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x75,
	0x73, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x23, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x57, 0x68, 0x65, 0x6e, 0x55, 0x73, 0x69,
	0x6e, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x88, 0x01, 0x01, 0x12, 0x4e, 0x0a, 0x0f, 0x69,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x0e, 0x69, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x1a, 0x50, 0x0a, 0x0e, 0x4f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x2b, 0x0a,
	0x29, 0x5f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x75, 0x73,
	0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0xac, 0x02, 0x0a, 0x16, 0x49,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52,
	0x0a, 0x6d, 0x61, 0x78, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x02, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x40, 0x0a, 0x1a, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x66, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x17, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x66,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x6d, 0x61, 0x78, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x6d,
	0x61, 0x78, 0x5f, 0x69, 0x6e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x14, 0x4b, 0x76,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0d, 0x6d, 0x69, 0x72,
	0x72, 0x6f, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x69,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x42, 0x46, 0x82, 0xc0,
	0x0c, 0x04, 0x08, 0x01, 0x10, 0x01, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x6e, 0x69, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_rawDescOnce sync.Once
	file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_rawDescData = file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_rawDesc
)

func file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_rawDescGZIP() []byte {
	file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_rawDescOnce.Do(func() {
		file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_rawDescData)
	})
	return file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_rawDescData
}

var file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_goTypes = []interface{}{
	(*RuntimeConfigValues)(nil),    // 0: runtimeconfig.RuntimeConfigValues
	(*IngesterInstanceLimits)(nil), // 1: runtimeconfig.IngesterInstanceLimits
	(*KvMultiRuntimeConfig)(nil),   // 2: runtimeconfig.KvMultiRuntimeConfig
	nil,                            // 3: runtimeconfig.RuntimeConfigValues.OverridesEntry
	(*validation.Limits)(nil),      // 4: validation.Limits
}
var file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_depIdxs = []int32{
	3, // 0: runtimeconfig.RuntimeConfigValues.overrides:type_name -> runtimeconfig.RuntimeConfigValues.OverridesEntry
	2, // 1: runtimeconfig.RuntimeConfigValues.multi_kv_config:type_name -> runtimeconfig.KvMultiRuntimeConfig
	1, // 2: runtimeconfig.RuntimeConfigValues.ingester_limits:type_name -> runtimeconfig.IngesterInstanceLimits
	4, // 3: runtimeconfig.RuntimeConfigValues.OverridesEntry.value:type_name -> validation.Limits
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() {
	file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_init()
}
func file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_init() {
	if File_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeConfigValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngesterInstanceLimits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvMultiRuntimeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_goTypes,
		DependencyIndexes: file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_depIdxs,
		MessageInfos:      file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_msgTypes,
	}.Build()
	File_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto = out.File
	file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_rawDesc = nil
	file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_goTypes = nil
	file_github_com_rancher_opni_internal_cortex_config_runtimeconfig_runtimeconfig_proto_depIdxs = nil
}
