// @generated by service-generator v0.0.1 with parameter "target=ts,import_extension=none,ts_nocheck=false"
// @generated from file github.com/rancher/opni/plugins/metrics/apis/node/sync.proto (package node.metrics, syntax proto3)
/* eslint-disable */

import { SyncRequest, SyncResponse } from "./sync_pb";
import { axios } from "@pkg/opni/utils/axios";


export async function Sync(input: SyncRequest): Promise<SyncResponse> {
  try {
    
    if (input) {
      console.info('Here is the input for a request to NodeMetricsCapability-Sync:', input);
    }
  
    const rawResponse = (await axios.request({
      method: 'get',
      responseType: 'arraybuffer',
      headers: {
        'Content-Type': 'application/octet-stream',
        'Accept': 'application/octet-stream',
      },
      url: `/opni-api/NodeMetricsCapability`,
    data: input?.toBinary() as ArrayBuffer
    })).data;

    const response = SyncResponse.fromBinary(new Uint8Array(rawResponse));
    console.info('Here is the response for a request to NodeMetricsCapability-Sync:', response);
    return response;
  } catch (ex: any) {
    if (ex?.response?.data) {
      const s = String.fromCharCode.apply(null, Array.from(new Uint8Array(ex?.response?.data)));
      console.error(s);
    }
    throw ex;
  }
}

