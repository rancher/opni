syntax = "proto3";
option go_package = "github.com/rancher/opni/plugins/pkg/apis/server/condition";

import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "google/api/http.proto";
import "google/api/annotations.proto";
import "google/rpc/status.proto";


import "github.com/rancher/opni/pkg/apis/core/v1/core.proto";
import "github.com/rancher/opni/plugins/alerting/pkg/apis/common/common.proto";

package alerting.condition;

// -------- CRUD for alerting conditions -------
service AlertingConditions {
    rpc CreateAlertCondition(common.AlertCondition) returns (core.Reference) {
    option (google.api.http) = {
      post : "/alerts/conditions"
      body : "*"
    };
  }

  rpc GetAlertCondition(core.Reference) returns (common.AlertCondition) {
    option (google.api.http) = {
      post : "/alerts/conditions/{id}"
    };
  }

  rpc ListAlertConditions(common.ListAlertConditionRequest)
      returns (common.AlertConditionList) {
    option (google.api.http) = {
      get : "/alerts/conditions"
    };
  }

  rpc UpdateAlertCondition(common.UpdateAlertConditionRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/alerts/conditions"
      body : "*"
    };
  }

  rpc ListAlertConditionChoices(common.AlertDetailChoicesRequest)
      returns (common.ListAlertTypeDetails) {
      option (google.api.http) = {
        post : "/alerts/conditions/choices"
    };
  }

  rpc DeleteAlertCondition(core.Reference) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/alerts/conditions"
    };
  }

  rpc ListAvailableTemplatesForType(common.AlertDetailChoicesRequest)
      returns (common.TemplatesResponse) {
    option (google.api.http) = {
      post : "/alerts/conditions/templatevars"
    };
  }

  rpc AlertConditionStatus(core.Reference) returns (common.AlertStatusResponse) {
    option (google.api.http) = {
      post : "/alerts/conditions/status/{id}"
    };
  }

  // unimplemented
  rpc PreviewAlertCondition(common.PreviewAlertConditionRequest)
      returns (common.PreviewAlertConditionResponse) {
    option (google.api.http) = {
      post : "/alerts/conditions/preview"
      body : "*"
    };
  }

  rpc ActivateSilence(common.SilenceRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/alerts/silences"
      body : "*"
    };
  }
  // id corresponds to conditionId
  rpc DeactivateSilence(core.Reference) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/alerts/silences/{id}"
    };
  }
}