// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - ragu               v1.0.0
// source: github.com/rancher/opni/pkg/plugins/topology/pkg/apis/orchestrator/orchestrator.proto

package orchestrator

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// TopologyOrchestratorClient is the client API for TopologyOrchestrator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TopologyOrchestratorClient interface {
}

type topologyOrchestratorClient struct {
	cc grpc.ClientConnInterface
}

func NewTopologyOrchestratorClient(cc grpc.ClientConnInterface) TopologyOrchestratorClient {
	return &topologyOrchestratorClient{cc}
}

// TopologyOrchestratorServer is the server API for TopologyOrchestrator service.
// All implementations must embed UnimplementedTopologyOrchestratorServer
// for forward compatibility
type TopologyOrchestratorServer interface {
	mustEmbedUnimplementedTopologyOrchestratorServer()
}

// UnimplementedTopologyOrchestratorServer must be embedded to have forward compatible implementations.
type UnimplementedTopologyOrchestratorServer struct {
}

func (UnimplementedTopologyOrchestratorServer) mustEmbedUnimplementedTopologyOrchestratorServer() {}

// UnsafeTopologyOrchestratorServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TopologyOrchestratorServer will
// result in compilation errors.
type UnsafeTopologyOrchestratorServer interface {
	mustEmbedUnimplementedTopologyOrchestratorServer()
}

func RegisterTopologyOrchestratorServer(s grpc.ServiceRegistrar, srv TopologyOrchestratorServer) {
	s.RegisterService(&TopologyOrchestrator_ServiceDesc, srv)
}

// TopologyOrchestrator_ServiceDesc is the grpc.ServiceDesc for TopologyOrchestrator service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TopologyOrchestrator_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "orchestrator.TopologyOrchestrator",
	HandlerType: (*TopologyOrchestratorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "github.com/rancher/opni/pkg/plugins/topology/pkg/apis/orchestrator/orchestrator.proto",
}
