syntax = "proto3";
option go_package = "github.com/rancher/opni/plugins/model_training/pkg/model_training";
import "github.com/rancher/opni/pkg/apis/core/v1/core.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

package model_training;

service ModelTraining {
  rpc TrainModel(WorkloadsList) returns (core.Reference) {
    option (google.api.http) = {
      post: "/trainModel"
      body: "*"
    };
  }
  rpc WorkloadLogCount(core.Reference) returns (WorkloadsList) {
    option (google.api.http) = {
      post: "/workloadLogCount/{id}"
    };
  }
  rpc ModelStatus(google.protobuf.Empty) returns (core.Reference) {
    option (google.api.http) = {
      get: "/modelStatus"
    };
  }
  rpc ModelTrainingParameters(google.protobuf.Empty) returns (WorkloadsList) {
    option (google.api.http) = {
      get: "/modelTrainingParameters"
    };
  }
}

message WorkloadResponse {
  string clusterId = 1;
  string namespace = 2;
  string deployment = 3;
  int64 count = 4;
}

message WorkloadsList {
  repeated WorkloadResponse list = 1;
}
