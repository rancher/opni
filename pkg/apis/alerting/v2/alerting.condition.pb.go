// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        v1.0.0
// source: github.com/rancher/opni/pkg/apis/alerting/v2/alerting.condition.proto

package v2

import (
	v1 "github.com/rancher/opni/pkg/apis/core/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Severity int32

const (
	Severity_Info     Severity = 0
	Severity_Warning  Severity = 1
	Severity_Error    Severity = 2
	Severity_Critical Severity = 3
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "Info",
		1: "Warning",
		2: "Error",
		3: "Critical",
	}
	Severity_value = map[string]int32{
		"Info":     0,
		"Warning":  1,
		"Error":    2,
		"Critical": 3,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_enumTypes[0].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_enumTypes[0]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescGZIP(), []int{0}
}

type ConditionState int32

const (
	ConditionState_Unknown ConditionState = 0
	// the condition has not been met
	ConditionState_Ok ConditionState = 1
	// the condition has been met
	ConditionState_Firing ConditionState = 2
	// the condition has been met, but silenced
	ConditionState_Silenced ConditionState = 3
	// the condition has known means to evaluate as OK or FIRING
	ConditionState_Invalidated ConditionState = 4
	// someone has acknowledged the condition is firing
	ConditionState_Acknowledged ConditionState = 5
	// the condition was met, but is no longer met
	ConditionState_Resolved ConditionState = 6
	// the condition is being updated
	ConditionState_Updating ConditionState = 7
)

// Enum value maps for ConditionState.
var (
	ConditionState_name = map[int32]string{
		0: "Unknown",
		1: "Ok",
		2: "Firing",
		3: "Silenced",
		4: "Invalidated",
		5: "Acknowledged",
		6: "Resolved",
		7: "Updating",
	}
	ConditionState_value = map[string]int32{
		"Unknown":      0,
		"Ok":           1,
		"Firing":       2,
		"Silenced":     3,
		"Invalidated":  4,
		"Acknowledged": 5,
		"Resolved":     6,
		"Updating":     7,
	}
)

func (x ConditionState) Enum() *ConditionState {
	p := new(ConditionState)
	*p = x
	return p
}

func (x ConditionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConditionState) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_enumTypes[1].Descriptor()
}

func (ConditionState) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_enumTypes[1]
}

func (x ConditionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConditionState.Descriptor instead.
func (ConditionState) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescGZIP(), []int{1}
}

type AlertConditionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State  ConditionState `protobuf:"varint,1,opt,name=state,proto3,enum=alertingv2.ConditionState" json:"state,omitempty"`
	Reason string         `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *AlertConditionStatus) Reset() {
	*x = AlertConditionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionStatus) ProtoMessage() {}

func (x *AlertConditionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionStatus.ProtoReflect.Descriptor instead.
func (*AlertConditionStatus) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescGZIP(), []int{0}
}

func (x *AlertConditionStatus) GetState() ConditionState {
	if x != nil {
		return x.State
	}
	return ConditionState_Unknown
}

func (x *AlertConditionStatus) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type AlertCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// readonly fields
	Id                  *v1.Reference          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Name                string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description         string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Severity            Severity               `protobuf:"varint,5,opt,name=severity,proto3,enum=alertingv2.Severity" json:"severity,omitempty"`
	SilenceInfo         *SilenceInfo           `protobuf:"bytes,6,opt,name=silenceInfo,proto3" json:"silenceInfo,omitempty"`
	AttachedEndpointIds []string               `protobuf:"bytes,7,rep,name=attachedEndpointIds,proto3" json:"attachedEndpointIds,omitempty"`
}

func (x *AlertCondition) Reset() {
	*x = AlertCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertCondition) ProtoMessage() {}

func (x *AlertCondition) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertCondition.ProtoReflect.Descriptor instead.
func (*AlertCondition) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescGZIP(), []int{1}
}

func (x *AlertCondition) GetId() *v1.Reference {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AlertCondition) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AlertCondition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertCondition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AlertCondition) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_Info
}

func (x *AlertCondition) GetSilenceInfo() *SilenceInfo {
	if x != nil {
		return x.SilenceInfo
	}
	return nil
}

func (x *AlertCondition) GetAttachedEndpointIds() []string {
	if x != nil {
		return x.AttachedEndpointIds
	}
	return nil
}

// metadata to be listed in the UI
type AlertConditionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *v1.Reference `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Severity    Severity      `protobuf:"varint,4,opt,name=severity,proto3,enum=alertingv2.Severity" json:"severity,omitempty"`
	// one of errors, saturation, traffic, latency
	GoldenSignal string `protobuf:"bytes,5,opt,name=goldenSignal,proto3" json:"goldenSignal,omitempty"`
}

func (x *AlertConditionInfo) Reset() {
	*x = AlertConditionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionInfo) ProtoMessage() {}

func (x *AlertConditionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionInfo.ProtoReflect.Descriptor instead.
func (*AlertConditionInfo) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescGZIP(), []int{2}
}

func (x *AlertConditionInfo) GetId() *v1.Reference {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AlertConditionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertConditionInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AlertConditionInfo) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_Info
}

func (x *AlertConditionInfo) GetGoldenSignal() string {
	if x != nil {
		return x.GoldenSignal
	}
	return ""
}

type AlertConditionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AlertConditionInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AlertConditionList) Reset() {
	*x = AlertConditionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionList) ProtoMessage() {}

func (x *AlertConditionList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionList.ProtoReflect.Descriptor instead.
func (*AlertConditionList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescGZIP(), []int{3}
}

func (x *AlertConditionList) GetItems() []*AlertConditionInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

type SilenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionId *v1.Reference        `protobuf:"bytes,1,opt,name=conditionId,proto3" json:"conditionId,omitempty"`
	Duration    *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *SilenceRequest) Reset() {
	*x = SilenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SilenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SilenceRequest) ProtoMessage() {}

func (x *SilenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SilenceRequest.ProtoReflect.Descriptor instead.
func (*SilenceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescGZIP(), []int{4}
}

func (x *SilenceRequest) GetConditionId() *v1.Reference {
	if x != nil {
		return x.ConditionId
	}
	return nil
}

func (x *SilenceRequest) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type SilenceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SilenceId string                 `protobuf:"bytes,1,opt,name=silenceId,proto3" json:"silenceId,omitempty"`
	StartsAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=startsAt,proto3" json:"startsAt,omitempty"`
	EndsAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=endsAt,proto3" json:"endsAt,omitempty"`
}

func (x *SilenceInfo) Reset() {
	*x = SilenceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SilenceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SilenceInfo) ProtoMessage() {}

func (x *SilenceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SilenceInfo.ProtoReflect.Descriptor instead.
func (*SilenceInfo) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescGZIP(), []int{5}
}

func (x *SilenceInfo) GetSilenceId() string {
	if x != nil {
		return x.SilenceId
	}
	return ""
}

func (x *SilenceInfo) GetStartsAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartsAt
	}
	return nil
}

func (x *SilenceInfo) GetEndsAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndsAt
	}
	return nil
}

type CloneToRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertCondition *AlertCondition `protobuf:"bytes,1,opt,name=alertCondition,proto3" json:"alertCondition,omitempty"`
	ToClusters     []string        `protobuf:"bytes,2,rep,name=toClusters,proto3" json:"toClusters,omitempty"`
}

func (x *CloneToRequest) Reset() {
	*x = CloneToRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneToRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneToRequest) ProtoMessage() {}

func (x *CloneToRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneToRequest.ProtoReflect.Descriptor instead.
func (*CloneToRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescGZIP(), []int{6}
}

func (x *CloneToRequest) GetAlertCondition() *AlertCondition {
	if x != nil {
		return x.AlertCondition
	}
	return nil
}

func (x *CloneToRequest) GetToClusters() []string {
	if x != nil {
		return x.ToClusters
	}
	return nil
}

var File_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto protoreflect.FileDescriptor

var file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDesc = []byte{
	0x0a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x6e, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x32, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x76, 0x32, 0x1a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x6e, 0x69, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x14, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x76, 0x32, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xc0, 0x02,
	0x0a, 0x0e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x30, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x76, 0x32,
	0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x76, 0x32, 0x2e, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30,
	0x0a, 0x13, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x73,
	0x22, 0xc1, 0x01, 0x0a, 0x12, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30,
	0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x76, 0x32, 0x2e, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x67, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x22, 0x4a, 0x0a, 0x12, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x76, 0x32, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x7a, 0x0a, 0x0e, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x97, 0x01, 0x0a,
	0x0b, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x73, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73,
	0x41, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x73, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06,
	0x65, 0x6e, 0x64, 0x73, 0x41, 0x74, 0x22, 0x74, 0x0a, 0x0e, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x54,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x76, 0x32, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x6f, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2a, 0x3a, 0x0a, 0x08,
	0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x10, 0x03, 0x2a, 0x7e, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x6b, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x46, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x53,
	0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x07, 0x32, 0x83, 0x07, 0x0a, 0x11, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32, 0x12, 0x5a,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x76, 0x32, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x1a, 0x1a, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x76, 0x32, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x12, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x5b, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x76, 0x32, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x0d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x07, 0x12, 0x05, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x5a, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x76, 0x32, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x1a, 0x0a, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x2a, 0x0f, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x56, 0x0a, 0x0b,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x20, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x76, 0x32, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x14,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x50, 0x0a, 0x07, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x54, 0x6f, 0x12,
	0x1a, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x76, 0x32, 0x2e, 0x43, 0x6c, 0x6f,
	0x6e, 0x65, 0x54, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x3a, 0x01, 0x2a, 0x22, 0x06,
	0x2f, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x76, 0x32, 0x2e, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x13, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x3a, 0x01, 0x2a, 0x22, 0x08, 0x2f, 0x73, 0x69, 0x6c, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x53, 0x0a, 0x11, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x2a, 0x0d, 0x2f, 0x73, 0x69, 0x6c, 0x65, 0x6e,
	0x63, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x55, 0x0a, 0x0f, 0x41, 0x63, 0x6b, 0x6e, 0x6f,
	0x77, 0x65, 0x64, 0x67, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x11, 0x2f, 0x61, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x32, 0xa6,
	0x01, 0x0a, 0x15, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x56, 0x32, 0x12, 0x43, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a,
	0x16, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70,
	0x6e, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescOnce sync.Once
	file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescData = file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDesc
)

func file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescGZIP() []byte {
	file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescOnce.Do(func() {
		file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescData)
	})
	return file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDescData
}

var file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_goTypes = []interface{}{
	(Severity)(0),                 // 0: alertingv2.Severity
	(ConditionState)(0),           // 1: alertingv2.ConditionState
	(*AlertConditionStatus)(nil),  // 2: alertingv2.AlertConditionStatus
	(*AlertCondition)(nil),        // 3: alertingv2.AlertCondition
	(*AlertConditionInfo)(nil),    // 4: alertingv2.AlertConditionInfo
	(*AlertConditionList)(nil),    // 5: alertingv2.AlertConditionList
	(*SilenceRequest)(nil),        // 6: alertingv2.SilenceRequest
	(*SilenceInfo)(nil),           // 7: alertingv2.SilenceInfo
	(*CloneToRequest)(nil),        // 8: alertingv2.CloneToRequest
	(*v1.Reference)(nil),          // 9: core.Reference
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 11: google.protobuf.Duration
	(*emptypb.Empty)(nil),         // 12: google.protobuf.Empty
}
var file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_depIdxs = []int32{
	1,  // 0: alertingv2.AlertConditionStatus.state:type_name -> alertingv2.ConditionState
	9,  // 1: alertingv2.AlertCondition.id:type_name -> core.Reference
	10, // 2: alertingv2.AlertCondition.createdAt:type_name -> google.protobuf.Timestamp
	0,  // 3: alertingv2.AlertCondition.severity:type_name -> alertingv2.Severity
	7,  // 4: alertingv2.AlertCondition.silenceInfo:type_name -> alertingv2.SilenceInfo
	9,  // 5: alertingv2.AlertConditionInfo.id:type_name -> core.Reference
	0,  // 6: alertingv2.AlertConditionInfo.severity:type_name -> alertingv2.Severity
	4,  // 7: alertingv2.AlertConditionList.items:type_name -> alertingv2.AlertConditionInfo
	9,  // 8: alertingv2.SilenceRequest.conditionId:type_name -> core.Reference
	11, // 9: alertingv2.SilenceRequest.duration:type_name -> google.protobuf.Duration
	10, // 10: alertingv2.SilenceInfo.startsAt:type_name -> google.protobuf.Timestamp
	10, // 11: alertingv2.SilenceInfo.endsAt:type_name -> google.protobuf.Timestamp
	3,  // 12: alertingv2.CloneToRequest.alertCondition:type_name -> alertingv2.AlertCondition
	3,  // 13: alertingv2.AlertConditionsV2.CreateAlertCondition:input_type -> alertingv2.AlertCondition
	9,  // 14: alertingv2.AlertConditionsV2.GetAlertCondition:input_type -> core.Reference
	12, // 15: alertingv2.AlertConditionsV2.ListAlertCondition:input_type -> google.protobuf.Empty
	3,  // 16: alertingv2.AlertConditionsV2.UpdateAlertCondition:input_type -> alertingv2.AlertCondition
	9,  // 17: alertingv2.AlertConditionsV2.DeleteAlertCondition:input_type -> core.Reference
	9,  // 18: alertingv2.AlertConditionsV2.AlertStatus:input_type -> core.Reference
	8,  // 19: alertingv2.AlertConditionsV2.CloneTo:input_type -> alertingv2.CloneToRequest
	6,  // 20: alertingv2.AlertConditionsV2.ActivateSilence:input_type -> alertingv2.SilenceRequest
	9,  // 21: alertingv2.AlertConditionsV2.DeactivateSilence:input_type -> core.Reference
	9,  // 22: alertingv2.AlertConditionsV2.AcknowedgeAlert:input_type -> core.Reference
	12, // 23: alertingv2.AlertConditionsSyncV2.SyncAlertingRules:input_type -> google.protobuf.Empty
	12, // 24: alertingv2.AlertConditionsSyncV2.SyncOpenSearchMonitors:input_type -> google.protobuf.Empty
	9,  // 25: alertingv2.AlertConditionsV2.CreateAlertCondition:output_type -> core.Reference
	3,  // 26: alertingv2.AlertConditionsV2.GetAlertCondition:output_type -> alertingv2.AlertCondition
	5,  // 27: alertingv2.AlertConditionsV2.ListAlertCondition:output_type -> alertingv2.AlertConditionList
	9,  // 28: alertingv2.AlertConditionsV2.UpdateAlertCondition:output_type -> core.Reference
	9,  // 29: alertingv2.AlertConditionsV2.DeleteAlertCondition:output_type -> core.Reference
	2,  // 30: alertingv2.AlertConditionsV2.AlertStatus:output_type -> alertingv2.AlertConditionStatus
	12, // 31: alertingv2.AlertConditionsV2.CloneTo:output_type -> google.protobuf.Empty
	12, // 32: alertingv2.AlertConditionsV2.ActivateSilence:output_type -> google.protobuf.Empty
	12, // 33: alertingv2.AlertConditionsV2.DeactivateSilence:output_type -> google.protobuf.Empty
	12, // 34: alertingv2.AlertConditionsV2.AcknowedgeAlert:output_type -> google.protobuf.Empty
	12, // 35: alertingv2.AlertConditionsSyncV2.SyncAlertingRules:output_type -> google.protobuf.Empty
	12, // 36: alertingv2.AlertConditionsSyncV2.SyncOpenSearchMonitors:output_type -> google.protobuf.Empty
	25, // [25:37] is the sub-list for method output_type
	13, // [13:25] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_init() }
func file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_init() {
	if File_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SilenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SilenceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneToRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_goTypes,
		DependencyIndexes: file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_depIdxs,
		EnumInfos:         file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_enumTypes,
		MessageInfos:      file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_msgTypes,
	}.Build()
	File_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto = out.File
	file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_rawDesc = nil
	file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_goTypes = nil
	file_github_com_rancher_opni_pkg_apis_alerting_v2_alerting_condition_proto_depIdxs = nil
}
