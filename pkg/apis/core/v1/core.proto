syntax = "proto3";

package core;

import "github.com/rancher/opni/internal/codegen/cli/cli.proto";
import "github.com/rancher/opni/pkg/validation/validate.proto";
import "google/protobuf/any.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

option go_package      = "github.com/rancher/opni/pkg/apis/core/v1";
option (cli.generator) = {
  generate:          true
  generate_deepcopy: true
};

service Pinger {
  rpc Ping(google.protobuf.Empty) returns (PingResponse);
}

message PingResponse {
  string message = 1;
}

message BootstrapToken {
  string                 tokenID  = 1;
  string                 secret   = 2;
  BootstrapTokenMetadata metadata = 3;
}

message BootstrapTokenMetadata {
  int64                    leaseID         = 1;
  int64                    ttl             = 2;
  int64                    usageCount      = 3;
  map<string, string>      labels          = 4;
  repeated TokenCapability capabilities    = 5;
  string                   resourceVersion = 6;
  int64                    maxUsages       = 7;
}

message TokenCapability {
  string    type      = 1;
  Reference reference = 2;
}

message BootstrapTokenList {
  repeated BootstrapToken items = 1;
}

message Cluster {
  string          id       = 1;
  ClusterMetadata metadata = 2;
}

message ClusterMetadata {
  map<string, string>        labels       = 1;
  repeated ClusterCapability capabilities = 2;

  // read-only
  string resourceVersion = 3;

  LastKnownConnectionDetails lastKnownConnectionDetails = 4;

  // read-only
  google.protobuf.Timestamp creationTimestamp = 5;
}

message LastKnownConnectionDetails {
  google.protobuf.Timestamp time           = 1;
  string                    address        = 2;
  BuildInfo                 agentBuildInfo = 3;
  // plugin package id -> hash
  map<string, string> pluginVersions = 4;
  // which gateway instance the agent was connected to
  InstanceInfo instanceInfo = 5;
}

// Go build info types

message BuildInfo {
  string                goVersion = 1;
  string                path      = 2;
  Module                main      = 3;
  repeated Module       deps      = 4;
  repeated BuildSetting settings  = 5;
}

message Module {
  string path    = 1;
  string version = 2;
  string sum     = 3;
  Module replace = 4;
}

message BuildSetting {
  string key   = 1;
  string value = 2;
}

message ClusterCapability {
  string                    name              = 1;
  google.protobuf.Timestamp deletionTimestamp = 2;
}

message ClusterList {
  repeated Cluster items = 1;
}

message LabelSelector {
  map<string, string>               matchLabels      = 1;
  repeated LabelSelectorRequirement matchExpressions = 2;
}

message LabelSelectorRequirement {
  string          key      = 1;
  string          operator = 2;
  repeated string values   = 3;
}

enum MatchOptions {
  option allow_alias = true;
  Default                  = 0;
  EmptySelectorMatchesAll  = 0;
  EmptySelectorMatchesNone = 1;
}

message ClusterSelector {
  repeated string clusterIDs    = 1;
  LabelSelector   labelSelector = 2;
  MatchOptions    matchOptions  = 3;
}

message RoleMetadata {
  // read-only
  string resourceVersion = 1;
}

message RoleBinding {
  string              id       = 1;
  string              roleId   = 2;
  repeated string     subjects = 3;
  repeated string     taints   = 4;
  RoleBindingMetadata metadata = 5;
}

message RoleBindingMetadata {
  // read-only
  string resourceVersion = 1;
  // immutable after creation
  optional string capability = 2;
}

message RoleBindingList {
  repeated RoleBinding items = 1;
}

message CapabilityType {
  string name = 2;
}

message CapabilityTypeList {
  repeated string names = 2;
}

message PermissionVerb {
  string verb = 1;
}

message PermissionDescription {
  string                  type  = 1;
  repeated PermissionVerb verbs = 2;
}

message AvailablePermissions {
  repeated PermissionDescription items = 1;
}

message PermissionItem {
  string                  type        = 1;
  repeated PermissionVerb verbs       = 2;
  repeated string         ids         = 3;
  LabelSelector           matchLabels = 4;
}

message Role {
  string                  id          = 1;
  repeated PermissionItem permissions = 2;
  RoleMetadata            metadata    = 3;
}

message BackendRole {
  CapabilityType capability = 1;
  Role           role       = 2;
}

message BackendRoleRequest {
  CapabilityType capability = 1;
  Reference      roleRef    = 2;
}

message RoleList {
  repeated Reference items = 1;
}

message CertInfo {
  string issuer      = 1;
  string subject     = 2;
  bool   isCA        = 3;
  string notBefore   = 4;
  string notAfter    = 5;
  string fingerprint = 6;
  bytes  raw         = 7;
}

message Reference {
  string id = 1 [(buf.validate.field) = {
    ignore_empty: true
    string: {
      max_bytes: 128
      pattern:   "^[a-zA-Z0-9-_.\\(\\)]+$"
    }
  }];
}

message ReferenceList {
  repeated Reference items = 1;
}

message SubjectAccessRequest {
  string subject = 1;
}

message Status {
  google.protobuf.Timestamp timestamp         = 1;
  bool                      connected         = 2;
  repeated string           sessionAttributes = 3;
}

message Health {
  google.protobuf.Timestamp timestamp   = 1;
  bool                      ready       = 2;
  repeated string           conditions  = 3;
  map<string, string>       annotations = 4;
}

message HealthStatus {
  Health health = 1;
  Status status = 2;
}

message ClusterHealth {
  Reference cluster = 1;
  Health    health  = 2;
}

message ClusterStatus {
  Reference cluster = 1;
  Status    status  = 2;
}

message ClusterHealthStatus {
  Reference    cluster      = 1;
  HealthStatus healthStatus = 2;
}

message AlertLog {
  core.Reference            conditionId = 1;
  google.protobuf.Timestamp timestamp   = 2; // unix epoch timestamp
  google.protobuf.Struct    metadata    = 4;
}

message AlertLogList {
  repeated AlertLog Items = 1;
}

message TimeRange {
  uint64 start = 1;
  uint64 end   = 2;
}

enum TaskState {
  Unknown   = 0;
  Pending   = 1;
  Running   = 2;
  Completed = 3;
  Failed    = 4;
  Canceled  = 6;
}

// Represents a transition to a task state at a point in time.
message StateTransition {
  TaskState                 state     = 1;
  google.protobuf.Timestamp timestamp = 3;
}

enum TaskTrigger {
  Start  = 0;
  End    = 1;
  Error  = 2;
  Cancel = 3;
}

message Progress {
  uint64 current = 1;
  uint64 total   = 2;
}

message TaskStatus {
  TaskState                state       = 1;
  Progress                 progress    = 2;
  string                   metadata    = 3;
  repeated LogEntry        logs        = 4;
  repeated StateTransition transitions = 5;
}

message LogEntry {
  string                    msg       = 1;
  int32                     level     = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message ChallengeRequestList {
  repeated ChallengeRequest items = 2040;
  reserved 2041;
}

message ChallengeRequest {
  bytes challenge = 2042;
  reserved 2043, 2044;
}

message ChallengeResponseList {
  repeated ChallengeResponse items = 2045;
  reserved 2046;
}

message ChallengeResponse {
  bytes response = 2047;
  reserved 2048, 2049;
}

message SessionInfo {
  repeated string attributes = 2051;
  reserved 2052 to 2055;
  bytes mac = 2056;
}

message AuthInfo {
  string authorizedId = 2057;
  reserved 2058 to 2060;
  bytes mac = 2061;
}

enum ConfigStatus {
  Unkown      = 0;
  UpToDate    = 1;
  NeedsUpdate = 2;
}

message Revision {
  // A numerical revision uniquely identifying a specific version of the resource.
  // Larger values are newer, but this should otherwise be treated as opaque.
  optional int64 revision = 1;
  // An optional timestamp corresponding to the time the revision was created.
  // Do not depend on this field being set; if it is, it is for informational
  // purposes only.
  google.protobuf.Timestamp timestamp = 2 [(cli.flag).skip = true];
}

message InstanceInfo {
  string              relayAddress      = 1;
  string              managementAddress = 2;
  string              gatewayAddress    = 3;
  string              webAddress        = 4;
  bool                acquired          = 5;
  Health              health            = 6;
  Status              status            = 7;
  map<string, string> annotations       = 8;
}

// Value represents a protoreflect.Value
message Value {
  oneof data {
    bool                bool_value    = 1;
    int32               int32_value   = 2;
    int64               int64_value   = 3;
    uint32              uint32_value  = 4;
    uint64              uint64_value  = 5;
    float               float32_value = 6;
    double              float64_value = 7;
    string              string_value  = 8;
    bytes               bytes_value   = 9;
    int32               enum          = 10;
    google.protobuf.Any message       = 11;
    ListValue           list          = 12;
    MapValue            map           = 13;
  }

  message ListValue {
    repeated Value values = 2;
  }

  message MapKey {
    oneof data {
      bool   bool_value   = 1;
      int32  int32_value  = 2;
      int64  int64_value  = 3;
      uint32 uint32_value = 4;
      uint64 uint64_value = 5;
      string string_value = 6;
    }
  }

  message MapEntry {
    MapKey key   = 1;
    Value  value = 2;
  }

  message MapValue {
    repeated MapEntry entries = 2;
  }
}
