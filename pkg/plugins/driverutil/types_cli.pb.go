// Code generated by internal/codegen/cli/generator.go. DO NOT EDIT.
// source: github.com/rancher/opni/pkg/plugins/driverutil/types.proto

package driverutil

import (
	v1 "github.com/rancher/opni/pkg/apis/core/v1"
	flagutil "github.com/rancher/opni/pkg/util/flagutil"
	pflag "github.com/spf13/pflag"
	strings "strings"
)

func (in *GetRequest) FlagSet(prefix ...string) *pflag.FlagSet {
	fs := pflag.NewFlagSet("GetRequest", pflag.ExitOnError)
	fs.SortFlags = true
	if in.Revision == nil {
		in.Revision = &v1.Revision{}
	}
	fs.AddFlagSet(in.Revision.FlagSet(prefix...))
	return fs
}

func (in *ConfigurationHistoryRequest) FlagSet(prefix ...string) *pflag.FlagSet {
	fs := pflag.NewFlagSet("ConfigurationHistoryRequest", pflag.ExitOnError)
	fs.SortFlags = true
	fs.Var(flagutil.EnumValue(Target_ActiveConfiguration, &in.Target), strings.Join(append(prefix, "target"), "."), "The configuration type to return history for.")
	if in.Revision == nil {
		in.Revision = &v1.Revision{}
	}
	fs.AddFlagSet(in.Revision.FlagSet(prefix...))
	fs.BoolVar(&in.IncludeValues, strings.Join(append(prefix, "include-values"), "."), true, "If set, will include the values of the configuration in the response.")
	return fs
}
