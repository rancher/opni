syntax = "proto3";
option go_package = "github.com/rancher/opni/plugins/metrics/pkg/apis/cortexops";

import "google/protobuf/empty.proto";
import "github.com/rancher/opni/pkg/apis/storage/v1/storage.proto";

package cortexops;

service CortexOps {
  rpc ConfigureCluster(ClusterConfiguration) returns (google.protobuf.Empty);
  rpc GetClusterStatus(google.protobuf.Empty) returns (InstallStatus);
  rpc UninstallCluster(google.protobuf.Empty) returns (google.protobuf.Empty);
}

service AgentOps {
  rpc ConfigureAgent(AgentConfiguration) returns (google.protobuf.Empty);
  rpc GetAgentStatus(google.protobuf.Empty) returns (InstallStatus);
  rpc UninstallAgent(google.protobuf.Empty) returns (google.protobuf.Empty);
}

enum InstallState {
  Unknown = 0;
  NotInstalled = 1;
  Updating = 2;
  Installed = 3;
  Uninstalling = 4;
}

message InstallStatus {
  InstallState state = 1;
  string version = 2;
  map<string, string> metadata = 3;
}

enum DeploymentMode {
  AllInOne = 0;
  HighlyAvailable = 1;
}

message ClusterConfiguration {
  DeploymentMode mode = 1;
  storage.StorageSpec storage = 2;
}

message AgentConfiguration {
  string prometheusImage = 1;
}
