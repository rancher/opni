// @generated by protoc-gen-es v1.3.0 with parameter "target=ts,import_extension=none,ts_nocheck=false"
// @generated from file google/api/http.proto (package google.api, syntax proto3)
/* eslint-disable */

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message google.api.Http
 */
export class Http extends Message<Http> {
  /**
   * @generated from field: repeated google.api.HttpRule rules = 1;
   */
  rules: HttpRule[] = [];

  /**
   * @generated from field: bool fully_decode_reserved_expansion = 2;
   */
  fullyDecodeReservedExpansion = false;

  constructor(data?: PartialMessage<Http>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.Http";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "rules", kind: "message", T: HttpRule, repeated: true },
    { no: 2, name: "fully_decode_reserved_expansion", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Http {
    return new Http().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Http {
    return new Http().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Http {
    return new Http().fromJsonString(jsonString, options);
  }

  static equals(a: Http | PlainMessage<Http> | undefined, b: Http | PlainMessage<Http> | undefined): boolean {
    return proto3.util.equals(Http, a, b);
  }
}

/**
 * @generated from message google.api.HttpRule
 */
export class HttpRule extends Message<HttpRule> {
  /**
   * @generated from field: string selector = 1;
   */
  selector = "";

  /**
   * @generated from oneof google.api.HttpRule.pattern
   */
  pattern: {
    /**
     * @generated from field: string get = 2;
     */
    value: string;
    case: "get";
  } | {
    /**
     * @generated from field: string put = 3;
     */
    value: string;
    case: "put";
  } | {
    /**
     * @generated from field: string post = 4;
     */
    value: string;
    case: "post";
  } | {
    /**
     * @generated from field: string delete = 5;
     */
    value: string;
    case: "delete";
  } | {
    /**
     * @generated from field: string patch = 6;
     */
    value: string;
    case: "patch";
  } | {
    /**
     * @generated from field: google.api.CustomHttpPattern custom = 8;
     */
    value: CustomHttpPattern;
    case: "custom";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: string body = 7;
   */
  body = "";

  /**
   * @generated from field: repeated google.api.HttpRule additional_bindings = 11;
   */
  additionalBindings: HttpRule[] = [];

  /**
   * @generated from field: string response_body = 12;
   */
  responseBody = "";

  constructor(data?: PartialMessage<HttpRule>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.HttpRule";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "selector", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "get", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "pattern" },
    { no: 3, name: "put", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "pattern" },
    { no: 4, name: "post", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "pattern" },
    { no: 5, name: "delete", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "pattern" },
    { no: 6, name: "patch", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "pattern" },
    { no: 8, name: "custom", kind: "message", T: CustomHttpPattern, oneof: "pattern" },
    { no: 7, name: "body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "additional_bindings", kind: "message", T: HttpRule, repeated: true },
    { no: 12, name: "response_body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HttpRule {
    return new HttpRule().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HttpRule {
    return new HttpRule().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HttpRule {
    return new HttpRule().fromJsonString(jsonString, options);
  }

  static equals(a: HttpRule | PlainMessage<HttpRule> | undefined, b: HttpRule | PlainMessage<HttpRule> | undefined): boolean {
    return proto3.util.equals(HttpRule, a, b);
  }
}

/**
 * @generated from message google.api.CustomHttpPattern
 */
export class CustomHttpPattern extends Message<CustomHttpPattern> {
  /**
   * @generated from field: string kind = 1;
   */
  kind = "";

  /**
   * @generated from field: string path = 2;
   */
  path = "";

  constructor(data?: PartialMessage<CustomHttpPattern>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.CustomHttpPattern";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "kind", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CustomHttpPattern {
    return new CustomHttpPattern().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CustomHttpPattern {
    return new CustomHttpPattern().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CustomHttpPattern {
    return new CustomHttpPattern().fromJsonString(jsonString, options);
  }

  static equals(a: CustomHttpPattern | PlainMessage<CustomHttpPattern> | undefined, b: CustomHttpPattern | PlainMessage<CustomHttpPattern> | undefined): boolean {
    return proto3.util.equals(CustomHttpPattern, a, b);
  }
}

