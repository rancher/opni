// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        v1.0.0
// source: github.com/rancher/opni/pkg/apis/alerting/v1/alerting.proto

package v1

import (
	v1 "github.com/rancher/opni/pkg/apis/core/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Severity int32

const (
	Severity_INFO     Severity = 0
	Severity_WARNING  Severity = 1
	Severity_ERROR    Severity = 2
	Severity_CRITICAL Severity = 3
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "INFO",
		1: "WARNING",
		2: "ERROR",
		3: "CRITICAL",
	}
	Severity_value = map[string]int32{
		"INFO":     0,
		"WARNING":  1,
		"ERROR":    2,
		"CRITICAL": 3,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes[0].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes[0]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{0}
}

type GoldenSignal int32

const (
	GoldenSignal_CUSTOM     GoldenSignal = 0
	GoldenSignal_ERRORS     GoldenSignal = 1
	GoldenSignal_SATURATION GoldenSignal = 2
	GoldenSignal_TRAFFIC    GoldenSignal = 3
	GoldenSignal_LATENCY    GoldenSignal = 4
)

// Enum value maps for GoldenSignal.
var (
	GoldenSignal_name = map[int32]string{
		0: "CUSTOM",
		1: "ERRORS",
		2: "SATURATION",
		3: "TRAFFIC",
		4: "LATENCY",
	}
	GoldenSignal_value = map[string]int32{
		"CUSTOM":     0,
		"ERRORS":     1,
		"SATURATION": 2,
		"TRAFFIC":    3,
		"LATENCY":    4,
	}
)

func (x GoldenSignal) Enum() *GoldenSignal {
	p := new(GoldenSignal)
	*p = x
	return p
}

func (x GoldenSignal) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GoldenSignal) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes[1].Descriptor()
}

func (GoldenSignal) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes[1]
}

func (x GoldenSignal) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GoldenSignal.Descriptor instead.
func (GoldenSignal) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{1}
}

type AlertType int32

const (
	AlertType_System               AlertType = 0
	AlertType_KubeState            AlertType = 1
	AlertType_CpuSaturation        AlertType = 2
	AlertType_MemorySaturation     AlertType = 3
	AlertType_FsSaturation         AlertType = 4
	AlertType_DownstreamCapability AlertType = 5
	// Unimplemented
	AlertType_Composition AlertType = 6
	// Unimplemented
	AlertType_ControlFlow       AlertType = 7
	AlertType_PrometheusQuery   AlertType = 9
	AlertType_MonitoringBackend AlertType = 10
)

// Enum value maps for AlertType.
var (
	AlertType_name = map[int32]string{
		0:  "System",
		1:  "KubeState",
		2:  "CpuSaturation",
		3:  "MemorySaturation",
		4:  "FsSaturation",
		5:  "DownstreamCapability",
		6:  "Composition",
		7:  "ControlFlow",
		9:  "PrometheusQuery",
		10: "MonitoringBackend",
	}
	AlertType_value = map[string]int32{
		"System":               0,
		"KubeState":            1,
		"CpuSaturation":        2,
		"MemorySaturation":     3,
		"FsSaturation":         4,
		"DownstreamCapability": 5,
		"Composition":          6,
		"ControlFlow":          7,
		"PrometheusQuery":      9,
		"MonitoringBackend":    10,
	}
)

func (x AlertType) Enum() *AlertType {
	p := new(AlertType)
	*p = x
	return p
}

func (x AlertType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes[2].Descriptor()
}

func (AlertType) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes[2]
}

func (x AlertType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertType.Descriptor instead.
func (AlertType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{2}
}

type CompositionAction int32

const (
	CompositionAction_AND CompositionAction = 0
	CompositionAction_OR  CompositionAction = 1
)

// Enum value maps for CompositionAction.
var (
	CompositionAction_name = map[int32]string{
		0: "AND",
		1: "OR",
	}
	CompositionAction_value = map[string]int32{
		"AND": 0,
		"OR":  1,
	}
)

func (x CompositionAction) Enum() *CompositionAction {
	p := new(CompositionAction)
	*p = x
	return p
}

func (x CompositionAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompositionAction) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes[3].Descriptor()
}

func (CompositionAction) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes[3]
}

func (x CompositionAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompositionAction.Descriptor instead.
func (CompositionAction) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{3}
}

type ControlFlowAction int32

const (
	ControlFlowAction_IF_THEN     ControlFlowAction = 0
	ControlFlowAction_IF_NOT_THEN ControlFlowAction = 1
)

// Enum value maps for ControlFlowAction.
var (
	ControlFlowAction_name = map[int32]string{
		0: "IF_THEN",
		1: "IF_NOT_THEN",
	}
	ControlFlowAction_value = map[string]int32{
		"IF_THEN":     0,
		"IF_NOT_THEN": 1,
	}
)

func (x ControlFlowAction) Enum() *ControlFlowAction {
	p := new(ControlFlowAction)
	*p = x
	return p
}

func (x ControlFlowAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlFlowAction) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes[4].Descriptor()
}

func (ControlFlowAction) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes[4]
}

func (x ControlFlowAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlFlowAction.Descriptor instead.
func (ControlFlowAction) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{4}
}

type AlertConditionState int32

const (
	AlertConditionState_UNKOWN      AlertConditionState = 0
	AlertConditionState_OK          AlertConditionState = 1
	AlertConditionState_FIRING      AlertConditionState = 2
	AlertConditionState_SILENCED    AlertConditionState = 3
	AlertConditionState_INVALIDATED AlertConditionState = 4
)

// Enum value maps for AlertConditionState.
var (
	AlertConditionState_name = map[int32]string{
		0: "UNKOWN",
		1: "OK",
		2: "FIRING",
		3: "SILENCED",
		4: "INVALIDATED",
	}
	AlertConditionState_value = map[string]int32{
		"UNKOWN":      0,
		"OK":          1,
		"FIRING":      2,
		"SILENCED":    3,
		"INVALIDATED": 4,
	}
)

func (x AlertConditionState) Enum() *AlertConditionState {
	p := new(AlertConditionState)
	*p = x
	return p
}

func (x AlertConditionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertConditionState) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes[5].Descriptor()
}

func (AlertConditionState) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes[5]
}

func (x AlertConditionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertConditionState.Descriptor instead.
func (AlertConditionState) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{5}
}

type TimelineType int32

const (
	// do not show, backend error
	TimelineType_Timeline_Unknown TimelineType = 0
	// red
	TimelineType_Timeline_Alerting TimelineType = 1
	// blue?
	TimelineType_Timeline_Silenced TimelineType = 2
)

// Enum value maps for TimelineType.
var (
	TimelineType_name = map[int32]string{
		0: "Timeline_Unknown",
		1: "Timeline_Alerting",
		2: "Timeline_Silenced",
	}
	TimelineType_value = map[string]int32{
		"Timeline_Unknown":  0,
		"Timeline_Alerting": 1,
		"Timeline_Silenced": 2,
	}
)

func (x TimelineType) Enum() *TimelineType {
	p := new(TimelineType)
	*p = x
	return p
}

func (x TimelineType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimelineType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes[6].Descriptor()
}

func (TimelineType) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes[6]
}

func (x TimelineType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimelineType.Descriptor instead.
func (TimelineType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{6}
}

type AlertCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description       string             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Labels            []string           `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
	Severity          Severity           `protobuf:"varint,4,opt,name=severity,proto3,enum=alerting.Severity" json:"severity,omitempty"`
	AlertType         *AlertTypeDetails  `protobuf:"bytes,5,opt,name=alertType,proto3" json:"alertType,omitempty"`
	AttachedEndpoints *AttachedEndpoints `protobuf:"bytes,6,opt,name=attachedEndpoints,proto3" json:"attachedEndpoints,omitempty"`
	Silence           *SilenceInfo       `protobuf:"bytes,7,opt,name=silence,proto3" json:"silence,omitempty"` // Set & Unset via the silence API
	// the object id
	Id string `protobuf:"bytes,8,opt,name=id,proto3" json:"id,omitempty"`
	// Explicit field where the golden signal is set
	GoldenSignal GoldenSignal `protobuf:"varint,9,opt,name=goldenSignal,proto3,enum=alerting.GoldenSignal" json:"goldenSignal,omitempty"`
	// overrides the String type of AlertType Details for use in the UI
	OverrideType string `protobuf:"bytes,10,opt,name=overrideType,proto3" json:"overrideType,omitempty"`
}

func (x *AlertCondition) Reset() {
	*x = AlertCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertCondition) ProtoMessage() {}

func (x *AlertCondition) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertCondition.ProtoReflect.Descriptor instead.
func (*AlertCondition) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{0}
}

func (x *AlertCondition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertCondition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AlertCondition) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *AlertCondition) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_INFO
}

func (x *AlertCondition) GetAlertType() *AlertTypeDetails {
	if x != nil {
		return x.AlertType
	}
	return nil
}

func (x *AlertCondition) GetAttachedEndpoints() *AttachedEndpoints {
	if x != nil {
		return x.AttachedEndpoints
	}
	return nil
}

func (x *AlertCondition) GetSilence() *SilenceInfo {
	if x != nil {
		return x.Silence
	}
	return nil
}

func (x *AlertCondition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AlertCondition) GetGoldenSignal() GoldenSignal {
	if x != nil {
		return x.GoldenSignal
	}
	return GoldenSignal_CUSTOM
}

func (x *AlertCondition) GetOverrideType() string {
	if x != nil {
		return x.OverrideType
	}
	return ""
}

type FullAttachedEndpoints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*FullAttachedEndpoint `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// initial delay before firing the alert (optional) (default=10s)
	InitialDelay *durationpb.Duration `protobuf:"bytes,2,opt,name=initialDelay,proto3,oneof" json:"initialDelay,omitempty"`
	// how often to resend alert messages on active alerts (default =10m)
	RepeatInterval *durationpb.Duration `protobuf:"bytes,3,opt,name=repeatInterval,proto3,oneof" json:"repeatInterval,omitempty"`
	// How long to wait before sending notifications on new condition that has
	// already fired recently (default= 10m)
	ThrottlingDuration *durationpb.Duration    `protobuf:"bytes,4,opt,name=throttlingDuration,proto3,oneof" json:"throttlingDuration,omitempty"`
	Details            *EndpointImplementation `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *FullAttachedEndpoints) Reset() {
	*x = FullAttachedEndpoints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullAttachedEndpoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullAttachedEndpoints) ProtoMessage() {}

func (x *FullAttachedEndpoints) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullAttachedEndpoints.ProtoReflect.Descriptor instead.
func (*FullAttachedEndpoints) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{1}
}

func (x *FullAttachedEndpoints) GetItems() []*FullAttachedEndpoint {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *FullAttachedEndpoints) GetInitialDelay() *durationpb.Duration {
	if x != nil {
		return x.InitialDelay
	}
	return nil
}

func (x *FullAttachedEndpoints) GetRepeatInterval() *durationpb.Duration {
	if x != nil {
		return x.RepeatInterval
	}
	return nil
}

func (x *FullAttachedEndpoints) GetThrottlingDuration() *durationpb.Duration {
	if x != nil {
		return x.ThrottlingDuration
	}
	return nil
}

func (x *FullAttachedEndpoints) GetDetails() *EndpointImplementation {
	if x != nil {
		return x.Details
	}
	return nil
}

type FullAttachedEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndpointId    string                  `protobuf:"bytes,1,opt,name=endpointId,proto3" json:"endpointId,omitempty"`
	AlertEndpoint *AlertEndpoint          `protobuf:"bytes,2,opt,name=alertEndpoint,proto3" json:"alertEndpoint,omitempty"`
	Details       *EndpointImplementation `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *FullAttachedEndpoint) Reset() {
	*x = FullAttachedEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullAttachedEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullAttachedEndpoint) ProtoMessage() {}

func (x *FullAttachedEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullAttachedEndpoint.ProtoReflect.Descriptor instead.
func (*FullAttachedEndpoint) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{2}
}

func (x *FullAttachedEndpoint) GetEndpointId() string {
	if x != nil {
		return x.EndpointId
	}
	return ""
}

func (x *FullAttachedEndpoint) GetAlertEndpoint() *AlertEndpoint {
	if x != nil {
		return x.AlertEndpoint
	}
	return nil
}

func (x *FullAttachedEndpoint) GetDetails() *EndpointImplementation {
	if x != nil {
		return x.Details
	}
	return nil
}

// Empty means no attached endpoints
type AttachedEndpoints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AttachedEndpoint `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// initial delay before firing the alert (optional) (default=10s)
	InitialDelay *durationpb.Duration `protobuf:"bytes,2,opt,name=initialDelay,proto3,oneof" json:"initialDelay,omitempty"`
	// how often to resend alert messages on active alerts (default =10m)
	RepeatInterval *durationpb.Duration `protobuf:"bytes,3,opt,name=repeatInterval,proto3,oneof" json:"repeatInterval,omitempty"`
	// How long to wait before sending notifications on new condition that has
	// already fired recently (default= 10m)
	ThrottlingDuration *durationpb.Duration    `protobuf:"bytes,4,opt,name=throttlingDuration,proto3,oneof" json:"throttlingDuration,omitempty"`
	Details            *EndpointImplementation `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *AttachedEndpoints) Reset() {
	*x = AttachedEndpoints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachedEndpoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachedEndpoints) ProtoMessage() {}

func (x *AttachedEndpoints) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachedEndpoints.ProtoReflect.Descriptor instead.
func (*AttachedEndpoints) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{3}
}

func (x *AttachedEndpoints) GetItems() []*AttachedEndpoint {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AttachedEndpoints) GetInitialDelay() *durationpb.Duration {
	if x != nil {
		return x.InitialDelay
	}
	return nil
}

func (x *AttachedEndpoints) GetRepeatInterval() *durationpb.Duration {
	if x != nil {
		return x.RepeatInterval
	}
	return nil
}

func (x *AttachedEndpoints) GetThrottlingDuration() *durationpb.Duration {
	if x != nil {
		return x.ThrottlingDuration
	}
	return nil
}

func (x *AttachedEndpoints) GetDetails() *EndpointImplementation {
	if x != nil {
		return x.Details
	}
	return nil
}

type AttachedEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndpointId string `protobuf:"bytes,1,opt,name=endpointId,proto3" json:"endpointId,omitempty"`
}

func (x *AttachedEndpoint) Reset() {
	*x = AttachedEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachedEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachedEndpoint) ProtoMessage() {}

func (x *AttachedEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachedEndpoint.ProtoReflect.Descriptor instead.
func (*AttachedEndpoint) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{4}
}

func (x *AttachedEndpoint) GetEndpointId() string {
	if x != nil {
		return x.EndpointId
	}
	return ""
}

// enum will map to an object of available choices
type AlertDetailChoicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertType AlertType `protobuf:"varint,1,opt,name=alertType,proto3,enum=alerting.AlertType" json:"alertType,omitempty"`
}

func (x *AlertDetailChoicesRequest) Reset() {
	*x = AlertDetailChoicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertDetailChoicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertDetailChoicesRequest) ProtoMessage() {}

func (x *AlertDetailChoicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertDetailChoicesRequest.ProtoReflect.Descriptor instead.
func (*AlertDetailChoicesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{5}
}

func (x *AlertDetailChoicesRequest) GetAlertType() AlertType {
	if x != nil {
		return x.AlertType
	}
	return AlertType_System
}

type AlertDetailChoicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choices []*AlertTypeDetails `protobuf:"bytes,1,rep,name=choices,proto3" json:"choices,omitempty"`
}

func (x *AlertDetailChoicesResponse) Reset() {
	*x = AlertDetailChoicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertDetailChoicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertDetailChoicesResponse) ProtoMessage() {}

func (x *AlertDetailChoicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertDetailChoicesResponse.ProtoReflect.Descriptor instead.
func (*AlertDetailChoicesResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{6}
}

func (x *AlertDetailChoicesResponse) GetChoices() []*AlertTypeDetails {
	if x != nil {
		return x.Choices
	}
	return nil
}

type AlertTypeDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*AlertTypeDetails_System
	//	*AlertTypeDetails_KubeState
	//	*AlertTypeDetails_Composition
	//	*AlertTypeDetails_ControlFlow
	//	*AlertTypeDetails_Cpu
	//	*AlertTypeDetails_Memory
	//	*AlertTypeDetails_Fs
	//	*AlertTypeDetails_PrometheusQuery
	//	*AlertTypeDetails_DownstreamCapability
	//	*AlertTypeDetails_MonitoringBackend
	Type isAlertTypeDetails_Type `protobuf_oneof:"type"`
}

func (x *AlertTypeDetails) Reset() {
	*x = AlertTypeDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertTypeDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertTypeDetails) ProtoMessage() {}

func (x *AlertTypeDetails) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertTypeDetails.ProtoReflect.Descriptor instead.
func (*AlertTypeDetails) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{7}
}

func (m *AlertTypeDetails) GetType() isAlertTypeDetails_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *AlertTypeDetails) GetSystem() *AlertConditionSystem {
	if x, ok := x.GetType().(*AlertTypeDetails_System); ok {
		return x.System
	}
	return nil
}

func (x *AlertTypeDetails) GetKubeState() *AlertConditionKubeState {
	if x, ok := x.GetType().(*AlertTypeDetails_KubeState); ok {
		return x.KubeState
	}
	return nil
}

func (x *AlertTypeDetails) GetComposition() *AlertConditionComposition {
	if x, ok := x.GetType().(*AlertTypeDetails_Composition); ok {
		return x.Composition
	}
	return nil
}

func (x *AlertTypeDetails) GetControlFlow() *AlertConditionControlFlow {
	if x, ok := x.GetType().(*AlertTypeDetails_ControlFlow); ok {
		return x.ControlFlow
	}
	return nil
}

func (x *AlertTypeDetails) GetCpu() *AlertConditionCPUSaturation {
	if x, ok := x.GetType().(*AlertTypeDetails_Cpu); ok {
		return x.Cpu
	}
	return nil
}

func (x *AlertTypeDetails) GetMemory() *AlertConditionMemorySaturation {
	if x, ok := x.GetType().(*AlertTypeDetails_Memory); ok {
		return x.Memory
	}
	return nil
}

func (x *AlertTypeDetails) GetFs() *AlertConditionFilesystemSaturation {
	if x, ok := x.GetType().(*AlertTypeDetails_Fs); ok {
		return x.Fs
	}
	return nil
}

func (x *AlertTypeDetails) GetPrometheusQuery() *AlertConditionPrometheusQuery {
	if x, ok := x.GetType().(*AlertTypeDetails_PrometheusQuery); ok {
		return x.PrometheusQuery
	}
	return nil
}

func (x *AlertTypeDetails) GetDownstreamCapability() *AlertConditionDownstreamCapability {
	if x, ok := x.GetType().(*AlertTypeDetails_DownstreamCapability); ok {
		return x.DownstreamCapability
	}
	return nil
}

func (x *AlertTypeDetails) GetMonitoringBackend() *AlertConditionMonitoringBackend {
	if x, ok := x.GetType().(*AlertTypeDetails_MonitoringBackend); ok {
		return x.MonitoringBackend
	}
	return nil
}

type isAlertTypeDetails_Type interface {
	isAlertTypeDetails_Type()
}

type AlertTypeDetails_System struct {
	// agent disconnect : golden signal -> errors
	System *AlertConditionSystem `protobuf:"bytes,1,opt,name=system,proto3,oneof"`
}

type AlertTypeDetails_KubeState struct {
	// kube state : golden signal -> errors
	KubeState *AlertConditionKubeState `protobuf:"bytes,2,opt,name=kubeState,proto3,oneof"`
}

type AlertTypeDetails_Composition struct {
	// not implemented
	Composition *AlertConditionComposition `protobuf:"bytes,3,opt,name=composition,proto3,oneof"`
}

type AlertTypeDetails_ControlFlow struct {
	// not implemented
	ControlFlow *AlertConditionControlFlow `protobuf:"bytes,4,opt,name=controlFlow,proto3,oneof"`
}

type AlertTypeDetails_Cpu struct {
	// cpu saturation : golden signal -> saturation
	Cpu *AlertConditionCPUSaturation `protobuf:"bytes,5,opt,name=cpu,proto3,oneof"`
}

type AlertTypeDetails_Memory struct {
	// memory saturation : golden signal -> saturation
	Memory *AlertConditionMemorySaturation `protobuf:"bytes,6,opt,name=memory,proto3,oneof"`
}

type AlertTypeDetails_Fs struct {
	// fs saturation : golden signal -> saturation
	Fs *AlertConditionFilesystemSaturation `protobuf:"bytes,8,opt,name=fs,proto3,oneof"`
}

type AlertTypeDetails_PrometheusQuery struct {
	// no golden signal; custom
	PrometheusQuery *AlertConditionPrometheusQuery `protobuf:"bytes,9,opt,name=prometheusQuery,proto3,oneof"`
}

type AlertTypeDetails_DownstreamCapability struct {
	// agent downstream capability alerts
	DownstreamCapability *AlertConditionDownstreamCapability `protobuf:"bytes,10,opt,name=downstreamCapability,proto3,oneof"`
}

type AlertTypeDetails_MonitoringBackend struct {
	// monitoring backend alerts
	MonitoringBackend *AlertConditionMonitoringBackend `protobuf:"bytes,11,opt,name=monitoringBackend,proto3,oneof"`
}

func (*AlertTypeDetails_System) isAlertTypeDetails_Type() {}

func (*AlertTypeDetails_KubeState) isAlertTypeDetails_Type() {}

func (*AlertTypeDetails_Composition) isAlertTypeDetails_Type() {}

func (*AlertTypeDetails_ControlFlow) isAlertTypeDetails_Type() {}

func (*AlertTypeDetails_Cpu) isAlertTypeDetails_Type() {}

func (*AlertTypeDetails_Memory) isAlertTypeDetails_Type() {}

func (*AlertTypeDetails_Fs) isAlertTypeDetails_Type() {}

func (*AlertTypeDetails_PrometheusQuery) isAlertTypeDetails_Type() {}

func (*AlertTypeDetails_DownstreamCapability) isAlertTypeDetails_Type() {}

func (*AlertTypeDetails_MonitoringBackend) isAlertTypeDetails_Type() {}

type ListAlertTypeDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*ListAlertTypeDetails_System
	//	*ListAlertTypeDetails_KubeState
	//	*ListAlertTypeDetails_Composition
	//	*ListAlertTypeDetails_ControlFlow
	//	*ListAlertTypeDetails_Cpu
	//	*ListAlertTypeDetails_Memory
	//	*ListAlertTypeDetails_Fs
	//	*ListAlertTypeDetails_DownstreamCapability
	//	*ListAlertTypeDetails_PrometheusQuery
	//	*ListAlertTypeDetails_MonitoringBackend
	Type isListAlertTypeDetails_Type `protobuf_oneof:"type"`
}

func (x *ListAlertTypeDetails) Reset() {
	*x = ListAlertTypeDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertTypeDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertTypeDetails) ProtoMessage() {}

func (x *ListAlertTypeDetails) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertTypeDetails.ProtoReflect.Descriptor instead.
func (*ListAlertTypeDetails) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{8}
}

func (m *ListAlertTypeDetails) GetType() isListAlertTypeDetails_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *ListAlertTypeDetails) GetSystem() *ListAlertConditionSystem {
	if x, ok := x.GetType().(*ListAlertTypeDetails_System); ok {
		return x.System
	}
	return nil
}

func (x *ListAlertTypeDetails) GetKubeState() *ListAlertConditionKubeState {
	if x, ok := x.GetType().(*ListAlertTypeDetails_KubeState); ok {
		return x.KubeState
	}
	return nil
}

func (x *ListAlertTypeDetails) GetComposition() *ListAlertConditionComposition {
	if x, ok := x.GetType().(*ListAlertTypeDetails_Composition); ok {
		return x.Composition
	}
	return nil
}

func (x *ListAlertTypeDetails) GetControlFlow() *ListAlertConditionControlFlow {
	if x, ok := x.GetType().(*ListAlertTypeDetails_ControlFlow); ok {
		return x.ControlFlow
	}
	return nil
}

func (x *ListAlertTypeDetails) GetCpu() *ListAlertConditionCPUSaturation {
	if x, ok := x.GetType().(*ListAlertTypeDetails_Cpu); ok {
		return x.Cpu
	}
	return nil
}

func (x *ListAlertTypeDetails) GetMemory() *ListAlertConditionMemorySaturation {
	if x, ok := x.GetType().(*ListAlertTypeDetails_Memory); ok {
		return x.Memory
	}
	return nil
}

func (x *ListAlertTypeDetails) GetFs() *ListAlertConditionFilesystemSaturation {
	if x, ok := x.GetType().(*ListAlertTypeDetails_Fs); ok {
		return x.Fs
	}
	return nil
}

func (x *ListAlertTypeDetails) GetDownstreamCapability() *ListAlertConditionDownstreamCapability {
	if x, ok := x.GetType().(*ListAlertTypeDetails_DownstreamCapability); ok {
		return x.DownstreamCapability
	}
	return nil
}

func (x *ListAlertTypeDetails) GetPrometheusQuery() *ListAlertConditionPrometheusQuery {
	if x, ok := x.GetType().(*ListAlertTypeDetails_PrometheusQuery); ok {
		return x.PrometheusQuery
	}
	return nil
}

func (x *ListAlertTypeDetails) GetMonitoringBackend() *ListAlertConditionMonitoringBackend {
	if x, ok := x.GetType().(*ListAlertTypeDetails_MonitoringBackend); ok {
		return x.MonitoringBackend
	}
	return nil
}

type isListAlertTypeDetails_Type interface {
	isListAlertTypeDetails_Type()
}

type ListAlertTypeDetails_System struct {
	System *ListAlertConditionSystem `protobuf:"bytes,1,opt,name=system,proto3,oneof"`
}

type ListAlertTypeDetails_KubeState struct {
	KubeState *ListAlertConditionKubeState `protobuf:"bytes,2,opt,name=kubeState,proto3,oneof"`
}

type ListAlertTypeDetails_Composition struct {
	Composition *ListAlertConditionComposition `protobuf:"bytes,3,opt,name=composition,proto3,oneof"`
}

type ListAlertTypeDetails_ControlFlow struct {
	ControlFlow *ListAlertConditionControlFlow `protobuf:"bytes,4,opt,name=controlFlow,proto3,oneof"`
}

type ListAlertTypeDetails_Cpu struct {
	Cpu *ListAlertConditionCPUSaturation `protobuf:"bytes,5,opt,name=cpu,proto3,oneof"`
}

type ListAlertTypeDetails_Memory struct {
	Memory *ListAlertConditionMemorySaturation `protobuf:"bytes,6,opt,name=memory,proto3,oneof"`
}

type ListAlertTypeDetails_Fs struct {
	Fs *ListAlertConditionFilesystemSaturation `protobuf:"bytes,7,opt,name=fs,proto3,oneof"`
}

type ListAlertTypeDetails_DownstreamCapability struct {
	DownstreamCapability *ListAlertConditionDownstreamCapability `protobuf:"bytes,8,opt,name=downstreamCapability,proto3,oneof"`
}

type ListAlertTypeDetails_PrometheusQuery struct {
	PrometheusQuery *ListAlertConditionPrometheusQuery `protobuf:"bytes,9,opt,name=prometheusQuery,proto3,oneof"`
}

type ListAlertTypeDetails_MonitoringBackend struct {
	MonitoringBackend *ListAlertConditionMonitoringBackend `protobuf:"bytes,10,opt,name=monitoringBackend,proto3,oneof"`
}

func (*ListAlertTypeDetails_System) isListAlertTypeDetails_Type() {}

func (*ListAlertTypeDetails_KubeState) isListAlertTypeDetails_Type() {}

func (*ListAlertTypeDetails_Composition) isListAlertTypeDetails_Type() {}

func (*ListAlertTypeDetails_ControlFlow) isListAlertTypeDetails_Type() {}

func (*ListAlertTypeDetails_Cpu) isListAlertTypeDetails_Type() {}

func (*ListAlertTypeDetails_Memory) isListAlertTypeDetails_Type() {}

func (*ListAlertTypeDetails_Fs) isListAlertTypeDetails_Type() {}

func (*ListAlertTypeDetails_DownstreamCapability) isListAlertTypeDetails_Type() {}

func (*ListAlertTypeDetails_PrometheusQuery) isListAlertTypeDetails_Type() {}

func (*ListAlertTypeDetails_MonitoringBackend) isListAlertTypeDetails_Type() {}

type ListAlertConditionPrometheusQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clusters []string `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
}

func (x *ListAlertConditionPrometheusQuery) Reset() {
	*x = ListAlertConditionPrometheusQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionPrometheusQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionPrometheusQuery) ProtoMessage() {}

func (x *ListAlertConditionPrometheusQuery) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionPrometheusQuery.ProtoReflect.Descriptor instead.
func (*ListAlertConditionPrometheusQuery) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{9}
}

func (x *ListAlertConditionPrometheusQuery) GetClusters() []string {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type InvolvedConditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*v1.Reference `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *InvolvedConditions) Reset() {
	*x = InvolvedConditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvolvedConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvolvedConditions) ProtoMessage() {}

func (x *InvolvedConditions) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvolvedConditions.ProtoReflect.Descriptor instead.
func (*InvolvedConditions) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{10}
}

func (x *InvolvedConditions) GetItems() []*v1.Reference {
	if x != nil {
		return x.Items
	}
	return nil
}

type AlertConditionSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// same as clusterId
	ClusterId *v1.Reference `protobuf:"bytes,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	// after how long should we alert on disconnect?
	Timeout *durationpb.Duration `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *AlertConditionSystem) Reset() {
	*x = AlertConditionSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionSystem) ProtoMessage() {}

func (x *AlertConditionSystem) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionSystem.ProtoReflect.Descriptor instead.
func (*AlertConditionSystem) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{11}
}

func (x *AlertConditionSystem) GetClusterId() *v1.Reference {
	if x != nil {
		return x.ClusterId
	}
	return nil
}

func (x *AlertConditionSystem) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type ListAlertConditionSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// clusters we can apply this to
	AgentIds []string `protobuf:"bytes,1,rep,name=agentIds,proto3" json:"agentIds,omitempty"`
}

func (x *ListAlertConditionSystem) Reset() {
	*x = ListAlertConditionSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionSystem) ProtoMessage() {}

func (x *ListAlertConditionSystem) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionSystem.ProtoReflect.Descriptor instead.
func (*ListAlertConditionSystem) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{12}
}

func (x *ListAlertConditionSystem) GetAgentIds() []string {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

// Requires kube state metrics, otherwise the list of choices will be empty
type AlertConditionKubeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId string `protobuf:"bytes,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	// must be one of the listed kube objects
	ObjectType string `protobuf:"bytes,2,opt,name=objectType,proto3" json:"objectType,omitempty"`
	// kubernetes object name
	ObjectName string `protobuf:"bytes,3,opt,name=objectName,proto3" json:"objectName,omitempty"`
	// kubernetes namespace
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// must be one of the listed kube states
	State string               `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	For   *durationpb.Duration `protobuf:"bytes,6,opt,name=for,proto3" json:"for,omitempty"`
}

func (x *AlertConditionKubeState) Reset() {
	*x = AlertConditionKubeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionKubeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionKubeState) ProtoMessage() {}

func (x *AlertConditionKubeState) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionKubeState.ProtoReflect.Descriptor instead.
func (*AlertConditionKubeState) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{13}
}

func (x *AlertConditionKubeState) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *AlertConditionKubeState) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

func (x *AlertConditionKubeState) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *AlertConditionKubeState) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AlertConditionKubeState) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AlertConditionKubeState) GetFor() *durationpb.Duration {
	if x != nil {
		return x.For
	}
	return nil
}

// clusters --> resourceType --> namespace --> resourceName
type ListAlertConditionKubeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clusters map[string]*KubeObjectGroups `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	States   []string                     `protobuf:"bytes,2,rep,name=states,proto3" json:"states,omitempty"`
	Fors     []*durationpb.Duration       `protobuf:"bytes,3,rep,name=fors,proto3" json:"fors,omitempty"`
}

func (x *ListAlertConditionKubeState) Reset() {
	*x = ListAlertConditionKubeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionKubeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionKubeState) ProtoMessage() {}

func (x *ListAlertConditionKubeState) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionKubeState.ProtoReflect.Descriptor instead.
func (*ListAlertConditionKubeState) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{14}
}

func (x *ListAlertConditionKubeState) GetClusters() map[string]*KubeObjectGroups {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *ListAlertConditionKubeState) GetStates() []string {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *ListAlertConditionKubeState) GetFors() []*durationpb.Duration {
	if x != nil {
		return x.Fors
	}
	return nil
}

// Defaults :
// - cpuState : "user", "system", "guest" selected
type AlertConditionCPUSaturation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId *v1.Reference `protobuf:"bytes,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	// optional filters for nodes and cores, restrict observation to said nodes or cores,
	// if empty, all nodes and cores are selected
	NodeCoreFilters map[string]*Cores `protobuf:"bytes,2,rep,name=nodeCoreFilters,proto3" json:"nodeCoreFilters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// at least one cpu state should be specified
	CpuStates     []string             `protobuf:"bytes,3,rep,name=cpuStates,proto3" json:"cpuStates,omitempty"`
	Operation     string               `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation,omitempty"`           // one of "<", ">", "<=", ">=", "=". "!="
	ExpectedRatio float32              `protobuf:"fixed32,5,opt,name=expectedRatio,proto3" json:"expectedRatio,omitempty"` // 0-1
	For           *durationpb.Duration `protobuf:"bytes,6,opt,name=for,proto3" json:"for,omitempty"`
}

func (x *AlertConditionCPUSaturation) Reset() {
	*x = AlertConditionCPUSaturation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionCPUSaturation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionCPUSaturation) ProtoMessage() {}

func (x *AlertConditionCPUSaturation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionCPUSaturation.ProtoReflect.Descriptor instead.
func (*AlertConditionCPUSaturation) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{15}
}

func (x *AlertConditionCPUSaturation) GetClusterId() *v1.Reference {
	if x != nil {
		return x.ClusterId
	}
	return nil
}

func (x *AlertConditionCPUSaturation) GetNodeCoreFilters() map[string]*Cores {
	if x != nil {
		return x.NodeCoreFilters
	}
	return nil
}

func (x *AlertConditionCPUSaturation) GetCpuStates() []string {
	if x != nil {
		return x.CpuStates
	}
	return nil
}

func (x *AlertConditionCPUSaturation) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *AlertConditionCPUSaturation) GetExpectedRatio() float32 {
	if x != nil {
		return x.ExpectedRatio
	}
	return 0
}

func (x *AlertConditionCPUSaturation) GetFor() *durationpb.Duration {
	if x != nil {
		return x.For
	}
	return nil
}

type Cores struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []int64 `protobuf:"varint,1,rep,packed,name=items,proto3" json:"items,omitempty"`
}

func (x *Cores) Reset() {
	*x = Cores{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cores) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cores) ProtoMessage() {}

func (x *Cores) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cores.ProtoReflect.Descriptor instead.
func (*Cores) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{16}
}

func (x *Cores) GetItems() []int64 {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListAlertConditionCPUSaturation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// clusters -> node (empty selection defaults to all) -> (cpus, cpu_state)
	Clusters map[string]*CpuNodeGroup `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// cpu state, one of :
	// "user": The time spent in userland
	// "system": The time spent in the kernel
	// "iowait": Time spent waiting for I/O
	// "idle": Time the CPU had nothing to do
	// "irq" : Time servicing interrupts
	// "softirq": Time servicing interrupts
	// "guest" : If you are running VMs, the CPU they use
	// "steal" : If you are a VM, time other VMs "stole" from your CPUs
	CpuStates []string `protobuf:"bytes,2,rep,name=cpuStates,proto3" json:"cpuStates,omitempty"`
}

func (x *ListAlertConditionCPUSaturation) Reset() {
	*x = ListAlertConditionCPUSaturation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionCPUSaturation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionCPUSaturation) ProtoMessage() {}

func (x *ListAlertConditionCPUSaturation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionCPUSaturation.ProtoReflect.Descriptor instead.
func (*ListAlertConditionCPUSaturation) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{17}
}

func (x *ListAlertConditionCPUSaturation) GetClusters() map[string]*CpuNodeGroup {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *ListAlertConditionCPUSaturation) GetCpuStates() []string {
	if x != nil {
		return x.CpuStates
	}
	return nil
}

type CpuNodeGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes map[string]*CpuInfo `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CpuNodeGroup) Reset() {
	*x = CpuNodeGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CpuNodeGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuNodeGroup) ProtoMessage() {}

func (x *CpuNodeGroup) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuNodeGroup.ProtoReflect.Descriptor instead.
func (*CpuNodeGroup) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{18}
}

func (x *CpuNodeGroup) GetNodes() map[string]*CpuInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type CpuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cores
	CoreIds []int64 `protobuf:"varint,1,rep,packed,name=coreIds,proto3" json:"coreIds,omitempty"`
}

func (x *CpuInfo) Reset() {
	*x = CpuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CpuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuInfo) ProtoMessage() {}

func (x *CpuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuInfo.ProtoReflect.Descriptor instead.
func (*CpuInfo) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{19}
}

func (x *CpuInfo) GetCoreIds() []int64 {
	if x != nil {
		return x.CoreIds
	}
	return nil
}

type AlertConditionMemorySaturation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId         *v1.Reference          `protobuf:"bytes,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	NodeMemoryFilters map[string]*MemoryInfo `protobuf:"bytes,2,rep,name=nodeMemoryFilters,proto3" json:"nodeMemoryFilters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // nodes to devices
	// at least one usageType is required
	UsageTypes    []string             `protobuf:"bytes,3,rep,name=usageTypes,proto3" json:"usageTypes,omitempty"`
	Operation     string               `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation,omitempty"` // one of "<", ">", "<=", ">=", "=". "!="
	ExpectedRatio float64              `protobuf:"fixed64,5,opt,name=expectedRatio,proto3" json:"expectedRatio,omitempty"`
	For           *durationpb.Duration `protobuf:"bytes,6,opt,name=for,proto3" json:"for,omitempty"`
}

func (x *AlertConditionMemorySaturation) Reset() {
	*x = AlertConditionMemorySaturation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionMemorySaturation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionMemorySaturation) ProtoMessage() {}

func (x *AlertConditionMemorySaturation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionMemorySaturation.ProtoReflect.Descriptor instead.
func (*AlertConditionMemorySaturation) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{20}
}

func (x *AlertConditionMemorySaturation) GetClusterId() *v1.Reference {
	if x != nil {
		return x.ClusterId
	}
	return nil
}

func (x *AlertConditionMemorySaturation) GetNodeMemoryFilters() map[string]*MemoryInfo {
	if x != nil {
		return x.NodeMemoryFilters
	}
	return nil
}

func (x *AlertConditionMemorySaturation) GetUsageTypes() []string {
	if x != nil {
		return x.UsageTypes
	}
	return nil
}

func (x *AlertConditionMemorySaturation) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *AlertConditionMemorySaturation) GetExpectedRatio() float64 {
	if x != nil {
		return x.ExpectedRatio
	}
	return 0
}

func (x *AlertConditionMemorySaturation) GetFor() *durationpb.Duration {
	if x != nil {
		return x.For
	}
	return nil
}

type ListAlertConditionMemorySaturation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clusters   map[string]*MemoryNodeGroup `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UsageTypes []string                    `protobuf:"bytes,2,rep,name=usageTypes,proto3" json:"usageTypes,omitempty"`
}

func (x *ListAlertConditionMemorySaturation) Reset() {
	*x = ListAlertConditionMemorySaturation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionMemorySaturation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionMemorySaturation) ProtoMessage() {}

func (x *ListAlertConditionMemorySaturation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionMemorySaturation.ProtoReflect.Descriptor instead.
func (*ListAlertConditionMemorySaturation) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{21}
}

func (x *ListAlertConditionMemorySaturation) GetClusters() map[string]*MemoryNodeGroup {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *ListAlertConditionMemorySaturation) GetUsageTypes() []string {
	if x != nil {
		return x.UsageTypes
	}
	return nil
}

type MemoryNodeGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes map[string]*MemoryInfo `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MemoryNodeGroup) Reset() {
	*x = MemoryNodeGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryNodeGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryNodeGroup) ProtoMessage() {}

func (x *MemoryNodeGroup) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryNodeGroup.ProtoReflect.Descriptor instead.
func (*MemoryNodeGroup) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{22}
}

func (x *MemoryNodeGroup) GetNodes() map[string]*MemoryInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type MemoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []string `protobuf:"bytes,2,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *MemoryInfo) Reset() {
	*x = MemoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryInfo) ProtoMessage() {}

func (x *MemoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryInfo.ProtoReflect.Descriptor instead.
func (*MemoryInfo) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{23}
}

func (x *MemoryInfo) GetDevices() []string {
	if x != nil {
		return x.Devices
	}
	return nil
}

type AlertConditionFilesystemSaturation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId *v1.Reference `protobuf:"bytes,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	// optional filters, if none are set then everything is selected
	NodeFilters   map[string]*FilesystemInfo `protobuf:"bytes,2,rep,name=nodeFilters,proto3" json:"nodeFilters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Operation     string                     `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`           // one of "<", ">", "<=", ">=", "=". "!="
	ExpectedRatio float64                    `protobuf:"fixed64,4,opt,name=expectedRatio,proto3" json:"expectedRatio,omitempty"` // 0-1
	For           *durationpb.Duration       `protobuf:"bytes,5,opt,name=for,proto3" json:"for,omitempty"`
}

func (x *AlertConditionFilesystemSaturation) Reset() {
	*x = AlertConditionFilesystemSaturation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionFilesystemSaturation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionFilesystemSaturation) ProtoMessage() {}

func (x *AlertConditionFilesystemSaturation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionFilesystemSaturation.ProtoReflect.Descriptor instead.
func (*AlertConditionFilesystemSaturation) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{24}
}

func (x *AlertConditionFilesystemSaturation) GetClusterId() *v1.Reference {
	if x != nil {
		return x.ClusterId
	}
	return nil
}

func (x *AlertConditionFilesystemSaturation) GetNodeFilters() map[string]*FilesystemInfo {
	if x != nil {
		return x.NodeFilters
	}
	return nil
}

func (x *AlertConditionFilesystemSaturation) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *AlertConditionFilesystemSaturation) GetExpectedRatio() float64 {
	if x != nil {
		return x.ExpectedRatio
	}
	return 0
}

func (x *AlertConditionFilesystemSaturation) GetFor() *durationpb.Duration {
	if x != nil {
		return x.For
	}
	return nil
}

type ListAlertConditionFilesystemSaturation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clusters map[string]*FilesystemNodeGroup `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListAlertConditionFilesystemSaturation) Reset() {
	*x = ListAlertConditionFilesystemSaturation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionFilesystemSaturation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionFilesystemSaturation) ProtoMessage() {}

func (x *ListAlertConditionFilesystemSaturation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionFilesystemSaturation.ProtoReflect.Descriptor instead.
func (*ListAlertConditionFilesystemSaturation) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{25}
}

func (x *ListAlertConditionFilesystemSaturation) GetClusters() map[string]*FilesystemNodeGroup {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type FilesystemNodeGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes map[string]*FilesystemInfo `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FilesystemNodeGroup) Reset() {
	*x = FilesystemNodeGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesystemNodeGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesystemNodeGroup) ProtoMessage() {}

func (x *FilesystemNodeGroup) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesystemNodeGroup.ProtoReflect.Descriptor instead.
func (*FilesystemNodeGroup) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{26}
}

func (x *FilesystemNodeGroup) GetNodes() map[string]*FilesystemInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type FilesystemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mountpoints []string `protobuf:"bytes,1,rep,name=mountpoints,proto3" json:"mountpoints,omitempty"`
	Devices     []string `protobuf:"bytes,2,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *FilesystemInfo) Reset() {
	*x = FilesystemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesystemInfo) ProtoMessage() {}

func (x *FilesystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesystemInfo.ProtoReflect.Descriptor instead.
func (*FilesystemInfo) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{27}
}

func (x *FilesystemInfo) GetMountpoints() []string {
	if x != nil {
		return x.Mountpoints
	}
	return nil
}

func (x *FilesystemInfo) GetDevices() []string {
	if x != nil {
		return x.Devices
	}
	return nil
}

type AlertConditionPrometheusQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId *v1.Reference        `protobuf:"bytes,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	Query     string               `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	For       *durationpb.Duration `protobuf:"bytes,3,opt,name=for,proto3" json:"for,omitempty"`
}

func (x *AlertConditionPrometheusQuery) Reset() {
	*x = AlertConditionPrometheusQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionPrometheusQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionPrometheusQuery) ProtoMessage() {}

func (x *AlertConditionPrometheusQuery) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionPrometheusQuery.ProtoReflect.Descriptor instead.
func (*AlertConditionPrometheusQuery) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{28}
}

func (x *AlertConditionPrometheusQuery) GetClusterId() *v1.Reference {
	if x != nil {
		return x.ClusterId
	}
	return nil
}

func (x *AlertConditionPrometheusQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *AlertConditionPrometheusQuery) GetFor() *durationpb.Duration {
	if x != nil {
		return x.For
	}
	return nil
}

type AlertConditionDownstreamCapability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId       *v1.Reference        `protobuf:"bytes,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	CapabilityState []string             `protobuf:"bytes,2,rep,name=capabilityState,proto3" json:"capabilityState,omitempty"`
	For             *durationpb.Duration `protobuf:"bytes,3,opt,name=for,proto3" json:"for,omitempty"`
}

func (x *AlertConditionDownstreamCapability) Reset() {
	*x = AlertConditionDownstreamCapability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionDownstreamCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionDownstreamCapability) ProtoMessage() {}

func (x *AlertConditionDownstreamCapability) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionDownstreamCapability.ProtoReflect.Descriptor instead.
func (*AlertConditionDownstreamCapability) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{29}
}

func (x *AlertConditionDownstreamCapability) GetClusterId() *v1.Reference {
	if x != nil {
		return x.ClusterId
	}
	return nil
}

func (x *AlertConditionDownstreamCapability) GetCapabilityState() []string {
	if x != nil {
		return x.CapabilityState
	}
	return nil
}

func (x *AlertConditionDownstreamCapability) GetFor() *durationpb.Duration {
	if x != nil {
		return x.For
	}
	return nil
}

type ListAlertConditionDownstreamCapability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clusters map[string]*CapabilityState `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListAlertConditionDownstreamCapability) Reset() {
	*x = ListAlertConditionDownstreamCapability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionDownstreamCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionDownstreamCapability) ProtoMessage() {}

func (x *ListAlertConditionDownstreamCapability) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionDownstreamCapability.ProtoReflect.Descriptor instead.
func (*ListAlertConditionDownstreamCapability) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{30}
}

func (x *ListAlertConditionDownstreamCapability) GetClusters() map[string]*CapabilityState {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type CapabilityState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	States []string `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *CapabilityState) Reset() {
	*x = CapabilityState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapabilityState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilityState) ProtoMessage() {}

func (x *CapabilityState) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilityState.ProtoReflect.Descriptor instead.
func (*CapabilityState) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{31}
}

func (x *CapabilityState) GetStates() []string {
	if x != nil {
		return x.States
	}
	return nil
}

type AlertConditionMonitoringBackend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// this will alert if these any of these components are unhealthy
	BackendComponents []string             `protobuf:"bytes,1,rep,name=backendComponents,proto3" json:"backendComponents,omitempty"`
	For               *durationpb.Duration `protobuf:"bytes,2,opt,name=for,proto3" json:"for,omitempty"`
	ClusterId         *v1.Reference        `protobuf:"bytes,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
}

func (x *AlertConditionMonitoringBackend) Reset() {
	*x = AlertConditionMonitoringBackend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionMonitoringBackend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionMonitoringBackend) ProtoMessage() {}

func (x *AlertConditionMonitoringBackend) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionMonitoringBackend.ProtoReflect.Descriptor instead.
func (*AlertConditionMonitoringBackend) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{32}
}

func (x *AlertConditionMonitoringBackend) GetBackendComponents() []string {
	if x != nil {
		return x.BackendComponents
	}
	return nil
}

func (x *AlertConditionMonitoringBackend) GetFor() *durationpb.Duration {
	if x != nil {
		return x.For
	}
	return nil
}

func (x *AlertConditionMonitoringBackend) GetClusterId() *v1.Reference {
	if x != nil {
		return x.ClusterId
	}
	return nil
}

type ListAlertConditionMonitoringBackend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackendComponents []string `protobuf:"bytes,1,rep,name=backendComponents,proto3" json:"backendComponents,omitempty"`
}

func (x *ListAlertConditionMonitoringBackend) Reset() {
	*x = ListAlertConditionMonitoringBackend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionMonitoringBackend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionMonitoringBackend) ProtoMessage() {}

func (x *ListAlertConditionMonitoringBackend) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionMonitoringBackend.ProtoReflect.Descriptor instead.
func (*ListAlertConditionMonitoringBackend) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{33}
}

func (x *ListAlertConditionMonitoringBackend) GetBackendComponents() []string {
	if x != nil {
		return x.BackendComponents
	}
	return nil
}

type StringArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []string `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *StringArray) Reset() {
	*x = StringArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringArray) ProtoMessage() {}

func (x *StringArray) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringArray.ProtoReflect.Descriptor instead.
func (*StringArray) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{34}
}

func (x *StringArray) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

type ObjectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects []string `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (x *ObjectList) Reset() {
	*x = ObjectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectList) ProtoMessage() {}

func (x *ObjectList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectList.ProtoReflect.Descriptor instead.
func (*ObjectList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{35}
}

func (x *ObjectList) GetObjects() []string {
	if x != nil {
		return x.Objects
	}
	return nil
}

type NamespaceObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespaces map[string]*ObjectList `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NamespaceObjects) Reset() {
	*x = NamespaceObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceObjects) ProtoMessage() {}

func (x *NamespaceObjects) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceObjects.ProtoReflect.Descriptor instead.
func (*NamespaceObjects) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{36}
}

func (x *NamespaceObjects) GetNamespaces() map[string]*ObjectList {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

type KubeObjectGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceTypes map[string]*NamespaceObjects `protobuf:"bytes,1,rep,name=resourceTypes,proto3" json:"resourceTypes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *KubeObjectGroups) Reset() {
	*x = KubeObjectGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubeObjectGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeObjectGroups) ProtoMessage() {}

func (x *KubeObjectGroups) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeObjectGroups.ProtoReflect.Descriptor instead.
func (*KubeObjectGroups) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{37}
}

func (x *KubeObjectGroups) GetResourceTypes() map[string]*NamespaceObjects {
	if x != nil {
		return x.ResourceTypes
	}
	return nil
}

type ListSelectAlertInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertType AlertType `protobuf:"varint,1,opt,name=alertType,proto3,enum=alerting.AlertType" json:"alertType,omitempty"`
}

func (x *ListSelectAlertInfo) Reset() {
	*x = ListSelectAlertInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSelectAlertInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSelectAlertInfo) ProtoMessage() {}

func (x *ListSelectAlertInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSelectAlertInfo.ProtoReflect.Descriptor instead.
func (*ListSelectAlertInfo) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{38}
}

func (x *ListSelectAlertInfo) GetAlertType() AlertType {
	if x != nil {
		return x.AlertType
	}
	return AlertType_System
}

type AlertConditionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AlertConditionWithId `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AlertConditionList) Reset() {
	*x = AlertConditionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionList) ProtoMessage() {}

func (x *AlertConditionList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionList.ProtoReflect.Descriptor instead.
func (*AlertConditionList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{39}
}

func (x *AlertConditionList) GetItems() []*AlertConditionWithId {
	if x != nil {
		return x.Items
	}
	return nil
}

type AlertConditionComposition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action CompositionAction `protobuf:"varint,1,opt,name=action,proto3,enum=alerting.CompositionAction" json:"action,omitempty"`
	X      *v1.Reference     `protobuf:"bytes,2,opt,name=x,proto3" json:"x,omitempty"`
	Y      *v1.Reference     `protobuf:"bytes,3,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *AlertConditionComposition) Reset() {
	*x = AlertConditionComposition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionComposition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionComposition) ProtoMessage() {}

func (x *AlertConditionComposition) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionComposition.ProtoReflect.Descriptor instead.
func (*AlertConditionComposition) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{40}
}

func (x *AlertConditionComposition) GetAction() CompositionAction {
	if x != nil {
		return x.Action
	}
	return CompositionAction_AND
}

func (x *AlertConditionComposition) GetX() *v1.Reference {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *AlertConditionComposition) GetY() *v1.Reference {
	if x != nil {
		return x.Y
	}
	return nil
}

type ListAlertConditionComposition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X []*v1.Reference `protobuf:"bytes,1,rep,name=x,proto3" json:"x,omitempty"`
	Y []*v1.Reference `protobuf:"bytes,2,rep,name=y,proto3" json:"y,omitempty"`
}

func (x *ListAlertConditionComposition) Reset() {
	*x = ListAlertConditionComposition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionComposition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionComposition) ProtoMessage() {}

func (x *ListAlertConditionComposition) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionComposition.ProtoReflect.Descriptor instead.
func (*ListAlertConditionComposition) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{41}
}

func (x *ListAlertConditionComposition) GetX() []*v1.Reference {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *ListAlertConditionComposition) GetY() []*v1.Reference {
	if x != nil {
		return x.Y
	}
	return nil
}

type AlertConditionControlFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action ControlFlowAction    `protobuf:"varint,1,opt,name=action,proto3,enum=alerting.ControlFlowAction" json:"action,omitempty"`
	X      *v1.Reference        `protobuf:"bytes,2,opt,name=x,proto3" json:"x,omitempty"`
	Y      *v1.Reference        `protobuf:"bytes,3,opt,name=y,proto3" json:"y,omitempty"`
	For    *durationpb.Duration `protobuf:"bytes,4,opt,name=for,proto3" json:"for,omitempty"`
}

func (x *AlertConditionControlFlow) Reset() {
	*x = AlertConditionControlFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionControlFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionControlFlow) ProtoMessage() {}

func (x *AlertConditionControlFlow) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionControlFlow.ProtoReflect.Descriptor instead.
func (*AlertConditionControlFlow) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{42}
}

func (x *AlertConditionControlFlow) GetAction() ControlFlowAction {
	if x != nil {
		return x.Action
	}
	return ControlFlowAction_IF_THEN
}

func (x *AlertConditionControlFlow) GetX() *v1.Reference {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *AlertConditionControlFlow) GetY() *v1.Reference {
	if x != nil {
		return x.Y
	}
	return nil
}

func (x *AlertConditionControlFlow) GetFor() *durationpb.Duration {
	if x != nil {
		return x.For
	}
	return nil
}

type ListAlertConditionControlFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X    []*v1.Reference        `protobuf:"bytes,1,rep,name=x,proto3" json:"x,omitempty"`
	Y    []*v1.Reference        `protobuf:"bytes,2,rep,name=y,proto3" json:"y,omitempty"`
	Fors []*durationpb.Duration `protobuf:"bytes,3,rep,name=fors,proto3" json:"fors,omitempty"`
}

func (x *ListAlertConditionControlFlow) Reset() {
	*x = ListAlertConditionControlFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionControlFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionControlFlow) ProtoMessage() {}

func (x *ListAlertConditionControlFlow) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionControlFlow.ProtoReflect.Descriptor instead.
func (*ListAlertConditionControlFlow) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{43}
}

func (x *ListAlertConditionControlFlow) GetX() []*v1.Reference {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *ListAlertConditionControlFlow) GetY() []*v1.Reference {
	if x != nil {
		return x.Y
	}
	return nil
}

func (x *ListAlertConditionControlFlow) GetFors() []*durationpb.Duration {
	if x != nil {
		return x.Fors
	}
	return nil
}

type AlertConditionWithId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *v1.Reference   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AlertCondition *AlertCondition `protobuf:"bytes,2,opt,name=alertCondition,proto3" json:"alertCondition,omitempty"`
}

func (x *AlertConditionWithId) Reset() {
	*x = AlertConditionWithId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConditionWithId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConditionWithId) ProtoMessage() {}

func (x *AlertConditionWithId) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConditionWithId.ProtoReflect.Descriptor instead.
func (*AlertConditionWithId) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{44}
}

func (x *AlertConditionWithId) GetId() *v1.Reference {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AlertConditionWithId) GetAlertCondition() *AlertCondition {
	if x != nil {
		return x.AlertCondition
	}
	return nil
}

type ListAlertConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAlertConditionRequest) Reset() {
	*x = ListAlertConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertConditionRequest) ProtoMessage() {}

func (x *ListAlertConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertConditionRequest.ProtoReflect.Descriptor instead.
func (*ListAlertConditionRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{45}
}

type UpdateAlertConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *v1.Reference   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdateAlert *AlertCondition `protobuf:"bytes,2,opt,name=updateAlert,proto3" json:"updateAlert,omitempty"`
}

func (x *UpdateAlertConditionRequest) Reset() {
	*x = UpdateAlertConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertConditionRequest) ProtoMessage() {}

func (x *UpdateAlertConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertConditionRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlertConditionRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{46}
}

func (x *UpdateAlertConditionRequest) GetId() *v1.Reference {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateAlertConditionRequest) GetUpdateAlert() *AlertCondition {
	if x != nil {
		return x.UpdateAlert
	}
	return nil
}

type SilenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionId *v1.Reference        `protobuf:"bytes,1,opt,name=conditionId,proto3" json:"conditionId,omitempty"`
	Duration    *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *SilenceRequest) Reset() {
	*x = SilenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SilenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SilenceRequest) ProtoMessage() {}

func (x *SilenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SilenceRequest.ProtoReflect.Descriptor instead.
func (*SilenceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{47}
}

func (x *SilenceRequest) GetConditionId() *v1.Reference {
	if x != nil {
		return x.ConditionId
	}
	return nil
}

func (x *SilenceRequest) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type SilenceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SilenceId string                 `protobuf:"bytes,1,opt,name=silenceId,proto3" json:"silenceId,omitempty"`
	StartsAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=startsAt,proto3" json:"startsAt,omitempty"`
	EndsAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=endsAt,proto3" json:"endsAt,omitempty"`
}

func (x *SilenceInfo) Reset() {
	*x = SilenceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SilenceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SilenceInfo) ProtoMessage() {}

func (x *SilenceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SilenceInfo.ProtoReflect.Descriptor instead.
func (*SilenceInfo) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{48}
}

func (x *SilenceInfo) GetSilenceId() string {
	if x != nil {
		return x.SilenceId
	}
	return ""
}

func (x *SilenceInfo) GetStartsAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartsAt
	}
	return nil
}

func (x *SilenceInfo) GetEndsAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndsAt
	}
	return nil
}

type AlertStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State AlertConditionState `protobuf:"varint,1,opt,name=state,proto3,enum=alerting.AlertConditionState" json:"state,omitempty"`
}

func (x *AlertStatusResponse) Reset() {
	*x = AlertStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertStatusResponse) ProtoMessage() {}

func (x *AlertStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertStatusResponse.ProtoReflect.Descriptor instead.
func (*AlertStatusResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{49}
}

func (x *AlertStatusResponse) GetState() AlertConditionState {
	if x != nil {
		return x.State
	}
	return AlertConditionState_UNKOWN
}

type EndpointImplementation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// title of the alert (required)
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// body message of the alert (required)
	Body string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	// send a notification when the alert is no longer firing? yes/no (default =
	// no)
	SendResolved *bool `protobuf:"varint,3,opt,name=sendResolved,proto3,oneof" json:"sendResolved,omitempty"`
}

func (x *EndpointImplementation) Reset() {
	*x = EndpointImplementation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointImplementation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointImplementation) ProtoMessage() {}

func (x *EndpointImplementation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointImplementation.ProtoReflect.Descriptor instead.
func (*EndpointImplementation) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{50}
}

func (x *EndpointImplementation) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EndpointImplementation) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *EndpointImplementation) GetSendResolved() bool {
	if x != nil && x.SendResolved != nil {
		return *x.SendResolved
	}
	return false
}

// opni-alerting internal use
type RoutingNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionId           *v1.Reference          `protobuf:"bytes,1,opt,name=conditionId,proto3" json:"conditionId,omitempty"`
	FullAttachedEndpoints *FullAttachedEndpoints `protobuf:"bytes,2,opt,name=fullAttachedEndpoints,proto3" json:"fullAttachedEndpoints,omitempty"`
}

func (x *RoutingNode) Reset() {
	*x = RoutingNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingNode) ProtoMessage() {}

func (x *RoutingNode) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingNode.ProtoReflect.Descriptor instead.
func (*RoutingNode) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{51}
}

func (x *RoutingNode) GetConditionId() *v1.Reference {
	if x != nil {
		return x.ConditionId
	}
	return nil
}

func (x *RoutingNode) GetFullAttachedEndpoints() *FullAttachedEndpoints {
	if x != nil {
		return x.FullAttachedEndpoints
	}
	return nil
}

// opni-alerting internal use
type EndpointMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position     int32  `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	EndpointType string `protobuf:"bytes,2,opt,name=endpointType,proto3" json:"endpointType,omitempty"`
}

func (x *EndpointMetadata) Reset() {
	*x = EndpointMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointMetadata) ProtoMessage() {}

func (x *EndpointMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointMetadata.ProtoReflect.Descriptor instead.
func (*EndpointMetadata) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{52}
}

func (x *EndpointMetadata) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *EndpointMetadata) GetEndpointType() string {
	if x != nil {
		return x.EndpointType
	}
	return ""
}

// opni-alerting internal use
type EndpointRoutingMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoints map[string]*EndpointMetadata `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EndpointRoutingMap) Reset() {
	*x = EndpointRoutingMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointRoutingMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointRoutingMap) ProtoMessage() {}

func (x *EndpointRoutingMap) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointRoutingMap.ProtoReflect.Descriptor instead.
func (*EndpointRoutingMap) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{53}
}

func (x *EndpointRoutingMap) GetEndpoints() map[string]*EndpointMetadata {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

// opni-alerting internal use
type RoutingRelationships struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conditions map[string]*EndpointRoutingMap `protobuf:"bytes,1,rep,name=conditions,proto3" json:"conditions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RoutingRelationships) Reset() {
	*x = RoutingRelationships{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingRelationships) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingRelationships) ProtoMessage() {}

func (x *RoutingRelationships) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingRelationships.ProtoReflect.Descriptor instead.
func (*RoutingRelationships) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{54}
}

func (x *RoutingRelationships) GetConditions() map[string]*EndpointRoutingMap {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type AlertEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are assignable to Endpoint:
	//
	//	*AlertEndpoint_Slack
	//	*AlertEndpoint_Email
	//	*AlertEndpoint_PagerDuty
	Endpoint isAlertEndpoint_Endpoint `protobuf_oneof:"endpoint"`
	// the following are read only for consumers of the API
	Id string `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AlertEndpoint) Reset() {
	*x = AlertEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertEndpoint) ProtoMessage() {}

func (x *AlertEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertEndpoint.ProtoReflect.Descriptor instead.
func (*AlertEndpoint) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{55}
}

func (x *AlertEndpoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertEndpoint) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (m *AlertEndpoint) GetEndpoint() isAlertEndpoint_Endpoint {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (x *AlertEndpoint) GetSlack() *SlackEndpoint {
	if x, ok := x.GetEndpoint().(*AlertEndpoint_Slack); ok {
		return x.Slack
	}
	return nil
}

func (x *AlertEndpoint) GetEmail() *EmailEndpoint {
	if x, ok := x.GetEndpoint().(*AlertEndpoint_Email); ok {
		return x.Email
	}
	return nil
}

func (x *AlertEndpoint) GetPagerDuty() *PagerDutyEndpoint {
	if x, ok := x.GetEndpoint().(*AlertEndpoint_PagerDuty); ok {
		return x.PagerDuty
	}
	return nil
}

func (x *AlertEndpoint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type isAlertEndpoint_Endpoint interface {
	isAlertEndpoint_Endpoint()
}

type AlertEndpoint_Slack struct {
	Slack *SlackEndpoint `protobuf:"bytes,4,opt,name=slack,proto3,oneof"`
}

type AlertEndpoint_Email struct {
	Email *EmailEndpoint `protobuf:"bytes,5,opt,name=email,proto3,oneof"`
}

type AlertEndpoint_PagerDuty struct {
	PagerDuty *PagerDutyEndpoint `protobuf:"bytes,6,opt,name=pagerDuty,proto3,oneof"`
}

func (*AlertEndpoint_Slack) isAlertEndpoint_Endpoint() {}

func (*AlertEndpoint_Email) isAlertEndpoint_Endpoint() {}

func (*AlertEndpoint_PagerDuty) isAlertEndpoint_Endpoint() {}

type SlackEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookUrl string `protobuf:"bytes,1,opt,name=webhookUrl,proto3" json:"webhookUrl,omitempty"`
	Channel    string `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *SlackEndpoint) Reset() {
	*x = SlackEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlackEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlackEndpoint) ProtoMessage() {}

func (x *SlackEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlackEndpoint.ProtoReflect.Descriptor instead.
func (*SlackEndpoint) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{56}
}

func (x *SlackEndpoint) GetWebhookUrl() string {
	if x != nil {
		return x.WebhookUrl
	}
	return ""
}

func (x *SlackEndpoint) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

type EmailEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// email recipient
	To string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	// smtp server sender email
	SmtpFrom *string `protobuf:"bytes,2,opt,name=smtpFrom,proto3,oneof" json:"smtpFrom,omitempty"`
	// smtp server host & port
	SmtpSmartHost *string `protobuf:"bytes,3,opt,name=smtpSmartHost,proto3,oneof" json:"smtpSmartHost,omitempty"`
	// smtp server username
	SmtpAuthUsername *string `protobuf:"bytes,4,opt,name=smtpAuthUsername,proto3,oneof" json:"smtpAuthUsername,omitempty"`
	// smtp server identity
	SmtpAuthIdentity *string `protobuf:"bytes,5,opt,name=smtpAuthIdentity,proto3,oneof" json:"smtpAuthIdentity,omitempty"`
	// smtp server password
	SmtpAuthPassword *string `protobuf:"bytes,6,opt,name=smtpAuthPassword,proto3,oneof" json:"smtpAuthPassword,omitempty"`
	// does SMTP require TSL : yes or no
	SmtpRequireTLS *bool `protobuf:"varint,7,opt,name=smtpRequireTLS,proto3,oneof" json:"smtpRequireTLS,omitempty"`
}

func (x *EmailEndpoint) Reset() {
	*x = EmailEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailEndpoint) ProtoMessage() {}

func (x *EmailEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailEndpoint.ProtoReflect.Descriptor instead.
func (*EmailEndpoint) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{57}
}

func (x *EmailEndpoint) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *EmailEndpoint) GetSmtpFrom() string {
	if x != nil && x.SmtpFrom != nil {
		return *x.SmtpFrom
	}
	return ""
}

func (x *EmailEndpoint) GetSmtpSmartHost() string {
	if x != nil && x.SmtpSmartHost != nil {
		return *x.SmtpSmartHost
	}
	return ""
}

func (x *EmailEndpoint) GetSmtpAuthUsername() string {
	if x != nil && x.SmtpAuthUsername != nil {
		return *x.SmtpAuthUsername
	}
	return ""
}

func (x *EmailEndpoint) GetSmtpAuthIdentity() string {
	if x != nil && x.SmtpAuthIdentity != nil {
		return *x.SmtpAuthIdentity
	}
	return ""
}

func (x *EmailEndpoint) GetSmtpAuthPassword() string {
	if x != nil && x.SmtpAuthPassword != nil {
		return *x.SmtpAuthPassword
	}
	return ""
}

func (x *EmailEndpoint) GetSmtpRequireTLS() bool {
	if x != nil && x.SmtpRequireTLS != nil {
		return *x.SmtpRequireTLS
	}
	return false
}

type PagerDutyEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// default global ruleset -> event rules screen
	IntegrationKey string `protobuf:"bytes,1,opt,name=integrationKey,proto3" json:"integrationKey,omitempty"`
}

func (x *PagerDutyEndpoint) Reset() {
	*x = PagerDutyEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagerDutyEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagerDutyEndpoint) ProtoMessage() {}

func (x *PagerDutyEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagerDutyEndpoint.ProtoReflect.Descriptor instead.
func (*PagerDutyEndpoint) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{58}
}

func (x *PagerDutyEndpoint) GetIntegrationKey() string {
	if x != nil {
		return x.IntegrationKey
	}
	return ""
}

type AlertEndpointList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AlertEndpointWithId `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AlertEndpointList) Reset() {
	*x = AlertEndpointList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertEndpointList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertEndpointList) ProtoMessage() {}

func (x *AlertEndpointList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertEndpointList.ProtoReflect.Descriptor instead.
func (*AlertEndpointList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{59}
}

func (x *AlertEndpointList) GetItems() []*AlertEndpointWithId {
	if x != nil {
		return x.Items
	}
	return nil
}

type AlertEndpointWithId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint *AlertEndpoint `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Id       *v1.Reference  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AlertEndpointWithId) Reset() {
	*x = AlertEndpointWithId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertEndpointWithId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertEndpointWithId) ProtoMessage() {}

func (x *AlertEndpointWithId) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertEndpointWithId.ProtoReflect.Descriptor instead.
func (*AlertEndpointWithId) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{60}
}

func (x *AlertEndpointWithId) GetEndpoint() *AlertEndpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *AlertEndpointWithId) GetId() *v1.Reference {
	if x != nil {
		return x.Id
	}
	return nil
}

type ListAlertEndpointsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAlertEndpointsRequest) Reset() {
	*x = ListAlertEndpointsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertEndpointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertEndpointsRequest) ProtoMessage() {}

func (x *ListAlertEndpointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertEndpointsRequest.ProtoReflect.Descriptor instead.
func (*ListAlertEndpointsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{61}
}

type UpdateAlertEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForceUpdate bool           `protobuf:"varint,1,opt,name=forceUpdate,proto3" json:"forceUpdate,omitempty"`
	Id          *v1.Reference  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	UpdateAlert *AlertEndpoint `protobuf:"bytes,3,opt,name=updateAlert,proto3" json:"updateAlert,omitempty"`
}

func (x *UpdateAlertEndpointRequest) Reset() {
	*x = UpdateAlertEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertEndpointRequest) ProtoMessage() {}

func (x *UpdateAlertEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertEndpointRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlertEndpointRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{62}
}

func (x *UpdateAlertEndpointRequest) GetForceUpdate() bool {
	if x != nil {
		return x.ForceUpdate
	}
	return false
}

func (x *UpdateAlertEndpointRequest) GetId() *v1.Reference {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateAlertEndpointRequest) GetUpdateAlert() *AlertEndpoint {
	if x != nil {
		return x.UpdateAlert
	}
	return nil
}

type DeleteAlertEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForceDelete bool          `protobuf:"varint,1,opt,name=forceDelete,proto3" json:"forceDelete,omitempty"`
	Id          *v1.Reference `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAlertEndpointRequest) Reset() {
	*x = DeleteAlertEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertEndpointRequest) ProtoMessage() {}

func (x *DeleteAlertEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertEndpointRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlertEndpointRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{63}
}

func (x *DeleteAlertEndpointRequest) GetForceDelete() bool {
	if x != nil {
		return x.ForceDelete
	}
	return false
}

func (x *DeleteAlertEndpointRequest) GetId() *v1.Reference {
	if x != nil {
		return x.Id
	}
	return nil
}

type TestAlertEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint *AlertEndpoint `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *TestAlertEndpointRequest) Reset() {
	*x = TestAlertEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestAlertEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestAlertEndpointRequest) ProtoMessage() {}

func (x *TestAlertEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestAlertEndpointRequest.ProtoReflect.Descriptor instead.
func (*TestAlertEndpointRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{64}
}

func (x *TestAlertEndpointRequest) GetEndpoint() *AlertEndpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

// will contain details in a future iteration
type TestAlertEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestAlertEndpointResponse) Reset() {
	*x = TestAlertEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestAlertEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestAlertEndpointResponse) ProtoMessage() {}

func (x *TestAlertEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestAlertEndpointResponse.ProtoReflect.Descriptor instead.
func (*TestAlertEndpointResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{65}
}

type ListAlertLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels         []string               `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	Limit          uint64                 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	StartTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=startTimestamp,proto3" json:"startTimestamp,omitempty"`
	EndTimestamp   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=endTimestamp,proto3" json:"endTimestamp,omitempty"`
}

func (x *ListAlertLogRequest) Reset() {
	*x = ListAlertLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertLogRequest) ProtoMessage() {}

func (x *ListAlertLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertLogRequest.ProtoReflect.Descriptor instead.
func (*ListAlertLogRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{66}
}

func (x *ListAlertLogRequest) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListAlertLogRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAlertLogRequest) GetStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTimestamp
	}
	return nil
}

func (x *ListAlertLogRequest) GetEndTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTimestamp
	}
	return nil
}

type UpdateAlertLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdateAlert *v1.AlertLog `protobuf:"bytes,2,opt,name=UpdateAlert,proto3" json:"UpdateAlert,omitempty"`
}

func (x *UpdateAlertLogRequest) Reset() {
	*x = UpdateAlertLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertLogRequest) ProtoMessage() {}

func (x *UpdateAlertLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertLogRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlertLogRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{67}
}

func (x *UpdateAlertLogRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAlertLogRequest) GetUpdateAlert() *v1.AlertLog {
	if x != nil {
		return x.UpdateAlert
	}
	return nil
}

type InformativeAlertLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionId *v1.Reference   `protobuf:"bytes,1,opt,name=conditionId,proto3" json:"conditionId,omitempty"`
	Condition   *AlertCondition `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
	Log         *v1.AlertLog    `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *InformativeAlertLog) Reset() {
	*x = InformativeAlertLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InformativeAlertLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InformativeAlertLog) ProtoMessage() {}

func (x *InformativeAlertLog) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InformativeAlertLog.ProtoReflect.Descriptor instead.
func (*InformativeAlertLog) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{68}
}

func (x *InformativeAlertLog) GetConditionId() *v1.Reference {
	if x != nil {
		return x.ConditionId
	}
	return nil
}

func (x *InformativeAlertLog) GetCondition() *AlertCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *InformativeAlertLog) GetLog() *v1.AlertLog {
	if x != nil {
		return x.Log
	}
	return nil
}

type InformativeAlertLogList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*InformativeAlertLog `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *InformativeAlertLogList) Reset() {
	*x = InformativeAlertLogList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InformativeAlertLogList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InformativeAlertLogList) ProtoMessage() {}

func (x *InformativeAlertLogList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InformativeAlertLogList.ProtoReflect.Descriptor instead.
func (*InformativeAlertLogList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{69}
}

func (x *InformativeAlertLogList) GetItems() []*InformativeAlertLog {
	if x != nil {
		return x.Items
	}
	return nil
}

// opni-alerting internal use
type TriggerAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionId *v1.Reference     `protobuf:"bytes,1,opt,name=conditionId,proto3" json:"conditionId,omitempty"`
	Annotations map[string]string `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TriggerAlertsRequest) Reset() {
	*x = TriggerAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAlertsRequest) ProtoMessage() {}

func (x *TriggerAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAlertsRequest.ProtoReflect.Descriptor instead.
func (*TriggerAlertsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{70}
}

func (x *TriggerAlertsRequest) GetConditionId() *v1.Reference {
	if x != nil {
		return x.ConditionId
	}
	return nil
}

func (x *TriggerAlertsRequest) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

// opni-alerting internal use
type TriggerAlertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TriggerAlertsResponse) Reset() {
	*x = TriggerAlertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAlertsResponse) ProtoMessage() {}

func (x *TriggerAlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAlertsResponse.ProtoReflect.Descriptor instead.
func (*TriggerAlertsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{71}
}

type ResolveAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionId *v1.Reference     `protobuf:"bytes,1,opt,name=conditionId,proto3" json:"conditionId,omitempty"`
	Annotations map[string]string `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ResolveAlertsRequest) Reset() {
	*x = ResolveAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveAlertsRequest) ProtoMessage() {}

func (x *ResolveAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveAlertsRequest.ProtoReflect.Descriptor instead.
func (*ResolveAlertsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{72}
}

func (x *ResolveAlertsRequest) GetConditionId() *v1.Reference {
	if x != nil {
		return x.ConditionId
	}
	return nil
}

func (x *ResolveAlertsRequest) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type ResolveAlertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResolveAlertsResponse) Reset() {
	*x = ResolveAlertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveAlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveAlertsResponse) ProtoMessage() {}

func (x *ResolveAlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveAlertsResponse.ProtoReflect.Descriptor instead.
func (*ResolveAlertsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{73}
}

// query for status timeline page
type TimelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LookbackWindow *durationpb.Duration `protobuf:"bytes,1,opt,name=lookbackWindow,proto3" json:"lookbackWindow,omitempty"`
}

func (x *TimelineRequest) Reset() {
	*x = TimelineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineRequest) ProtoMessage() {}

func (x *TimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineRequest.ProtoReflect.Descriptor instead.
func (*TimelineRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{74}
}

func (x *TimelineRequest) GetLookbackWindow() *durationpb.Duration {
	if x != nil {
		return x.LookbackWindow
	}
	return nil
}

// maps conditionId => list of active windows
type TimelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items map[string]*ActiveWindows `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TimelineResponse) Reset() {
	*x = TimelineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineResponse) ProtoMessage() {}

func (x *TimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineResponse.ProtoReflect.Descriptor instead.
func (*TimelineResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{75}
}

func (x *TimelineResponse) GetItems() map[string]*ActiveWindows {
	if x != nil {
		return x.Items
	}
	return nil
}

type ActiveWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Type  TimelineType           `protobuf:"varint,3,opt,name=type,proto3,enum=alerting.TimelineType" json:"type,omitempty"`
}

func (x *ActiveWindow) Reset() {
	*x = ActiveWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveWindow) ProtoMessage() {}

func (x *ActiveWindow) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveWindow.ProtoReflect.Descriptor instead.
func (*ActiveWindow) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{76}
}

func (x *ActiveWindow) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ActiveWindow) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *ActiveWindow) GetType() TimelineType {
	if x != nil {
		return x.Type
	}
	return TimelineType_Timeline_Unknown
}

type ActiveWindows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Windows []*ActiveWindow `protobuf:"bytes,1,rep,name=windows,proto3" json:"windows,omitempty"`
}

func (x *ActiveWindows) Reset() {
	*x = ActiveWindows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveWindows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveWindows) ProtoMessage() {}

func (x *ActiveWindows) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveWindows.ProtoReflect.Descriptor instead.
func (*ActiveWindows) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{77}
}

func (x *ActiveWindows) GetWindows() []*ActiveWindow {
	if x != nil {
		return x.Windows
	}
	return nil
}

type CloneToRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertCondition *AlertCondition `protobuf:"bytes,1,opt,name=alertCondition,proto3" json:"alertCondition,omitempty"`
	ToClusters     []string        `protobuf:"bytes,2,rep,name=toClusters,proto3" json:"toClusters,omitempty"`
}

func (x *CloneToRequest) Reset() {
	*x = CloneToRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneToRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneToRequest) ProtoMessage() {}

func (x *CloneToRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneToRequest.ProtoReflect.Descriptor instead.
func (*CloneToRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{78}
}

func (x *CloneToRequest) GetAlertCondition() *AlertCondition {
	if x != nil {
		return x.AlertCondition
	}
	return nil
}

func (x *CloneToRequest) GetToClusters() []string {
	if x != nil {
		return x.ToClusters
	}
	return nil
}

type EphemeralDispatcherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ttl           *durationpb.Duration    `protobuf:"bytes,1,opt,name=ttl,proto3" json:"ttl,omitempty"`
	NumDispatches int64                   `protobuf:"varint,2,opt,name=numDispatches,proto3" json:"numDispatches,omitempty"`
	Prefix        string                  `protobuf:"bytes,3,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Endpoint      *AlertEndpoint          `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Details       *EndpointImplementation `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *EphemeralDispatcherRequest) Reset() {
	*x = EphemeralDispatcherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EphemeralDispatcherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EphemeralDispatcherRequest) ProtoMessage() {}

func (x *EphemeralDispatcherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EphemeralDispatcherRequest.ProtoReflect.Descriptor instead.
func (*EphemeralDispatcherRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{79}
}

func (x *EphemeralDispatcherRequest) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

func (x *EphemeralDispatcherRequest) GetNumDispatches() int64 {
	if x != nil {
		return x.NumDispatches
	}
	return 0
}

func (x *EphemeralDispatcherRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *EphemeralDispatcherRequest) GetEndpoint() *AlertEndpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *EphemeralDispatcherRequest) GetDetails() *EndpointImplementation {
	if x != nil {
		return x.Details
	}
	return nil
}

type EphemeralDispatcherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TriggerAlertsRequest *TriggerAlertsRequest `protobuf:"bytes,1,opt,name=triggerAlertsRequest,proto3" json:"triggerAlertsRequest,omitempty"`
}

func (x *EphemeralDispatcherResponse) Reset() {
	*x = EphemeralDispatcherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EphemeralDispatcherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EphemeralDispatcherResponse) ProtoMessage() {}

func (x *EphemeralDispatcherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EphemeralDispatcherResponse.ProtoReflect.Descriptor instead.
func (*EphemeralDispatcherResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{80}
}

func (x *EphemeralDispatcherResponse) GetTriggerAlertsRequest() *TriggerAlertsRequest {
	if x != nil {
		return x.TriggerAlertsRequest
	}
	return nil
}

type CachedState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Healthy   bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Firing    bool                   `protobuf:"varint,2,opt,name=firing,proto3" json:"firing,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *CachedState) Reset() {
	*x = CachedState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CachedState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CachedState) ProtoMessage() {}

func (x *CachedState) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CachedState.ProtoReflect.Descriptor instead.
func (*CachedState) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{81}
}

func (x *CachedState) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *CachedState) GetFiring() bool {
	if x != nil {
		return x.Firing
	}
	return false
}

func (x *CachedState) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type IncidentIntervals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Interval `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *IncidentIntervals) Reset() {
	*x = IncidentIntervals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncidentIntervals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncidentIntervals) ProtoMessage() {}

func (x *IncidentIntervals) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncidentIntervals.ProtoReflect.Descriptor instead.
func (*IncidentIntervals) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{82}
}

func (x *IncidentIntervals) GetItems() []*Interval {
	if x != nil {
		return x.Items
	}
	return nil
}

type Interval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Interval) Reset() {
	*x = Interval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interval) ProtoMessage() {}

func (x *Interval) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interval.ProtoReflect.Descriptor instead.
func (*Interval) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP(), []int{83}
}

func (x *Interval) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Interval) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

var File_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto protoreflect.FileDescriptor

var file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x6e, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x6e, 0x69, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x03, 0x0a, 0x0e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x11, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x11, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x2f,
	0x0a, 0x07, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x69, 0x6c, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x3a, 0x0a, 0x0c, 0x67, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x0c, 0x67,
	0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x6f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xa0, 0x03, 0x0a, 0x15, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x42, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x4e, 0x0a, 0x12, 0x74,
	0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x02, 0x52, 0x12, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x69, 0x6e, 0x67,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x42, 0x15, 0x0a, 0x13, 0x5f,
	0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xb1, 0x01, 0x0a, 0x14, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0d, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0d, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49,
	0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x98, 0x03, 0x0a, 0x11, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x42,
	0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x46, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x4e, 0x0a, 0x12, 0x74, 0x68,
	0x72, 0x6f, 0x74, 0x74, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x02, 0x52, 0x12, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x69, 0x6e, 0x67, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49,
	0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x74,
	0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x32, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x19, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x52, 0x0a, 0x1a, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x22, 0xfc, 0x05, 0x0a, 0x10, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x38,
	0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x41, 0x0a, 0x09, 0x6b, 0x75, 0x62, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x6b, 0x75, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46,
	0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x00,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x39, 0x0a,
	0x03, 0x63, 0x70, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x50, 0x55, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x42, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x3e, 0x0a, 0x02,
	0x66, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x74, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x02, 0x66, 0x73, 0x12, 0x53, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00,
	0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x62, 0x0a, 0x14, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52,
	0x14, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x59, 0x0a, 0x11, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x11, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xa8, 0x06, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x45, 0x0a, 0x09, 0x6b, 0x75, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x75, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6b, 0x75, 0x62,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6c,
	0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x6f,
	0x77, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x6f, 0x77,
	0x12, 0x3d, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x50, 0x55, 0x53, 0x61,
	0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12,
	0x46, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x42, 0x0a, 0x02, 0x66, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x74, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x02, 0x66, 0x73, 0x12, 0x66, 0x0a, 0x14, 0x64,
	0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x14, 0x64,
	0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x57, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x5d, 0x0a, 0x11,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x42,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x3f, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68,
	0x65, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x22, 0x3b, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x7a, 0x0a, 0x14, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x36, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x17, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x03, 0x66, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x66, 0x6f, 0x72,
	0x22, 0x8e, 0x02, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x4f, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x75, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x66, 0x6f, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x04, 0x66, 0x6f, 0x72, 0x73, 0x1a, 0x57, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x96, 0x03, 0x0a, 0x1b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x50, 0x55, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x64, 0x0a, 0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x50, 0x55, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x70, 0x75, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x2b, 0x0a, 0x03, 0x66, 0x6f, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x03, 0x66, 0x6f, 0x72, 0x1a, 0x53, 0x0a, 0x14, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1d, 0x0a, 0x05, 0x43, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe9, 0x01, 0x0a, 0x1f, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x50, 0x55, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a,
	0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x50, 0x55,
	0x53, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x70, 0x75, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x1a, 0x53, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x70,
	0x75, 0x4e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x94, 0x01, 0x0a, 0x0c, 0x43, 0x70, 0x75, 0x4e, 0x6f, 0x64,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x37, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x70, 0x75, 0x4e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a,
	0x4b, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x70, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x23, 0x0a, 0x07,
	0x43, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x72, 0x65, 0x49,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x64,
	0x73, 0x22, 0xab, 0x03, 0x0a, 0x1e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x6d, 0x0a, 0x11, 0x6e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x61,
	0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x11, 0x6e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x2b, 0x0a, 0x03, 0x66, 0x6f, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03,
	0x66, 0x6f, 0x72, 0x1a, 0x5a, 0x0a, 0x16, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xf4, 0x01, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x61, 0x74, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x61, 0x74, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x56,
	0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9d, 0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x4e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3a, 0x0a, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x4e, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x26, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xff,
	0x02, 0x0a, 0x22, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x74, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x5f, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x74,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x2b, 0x0a, 0x03, 0x66, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x03, 0x66, 0x6f, 0x72, 0x1a, 0x58, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xe0, 0x01, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x08, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x5a, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e,
	0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xa9, 0x01, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3e, 0x0a, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x52, 0x0a, 0x0a, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x4c, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x91, 0x01,
	0x0a, 0x1d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x2d, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x03, 0x66, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x66, 0x6f,
	0x72, 0x22, 0xaa, 0x01, 0x0a, 0x22, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x2b, 0x0a, 0x03, 0x66, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x66, 0x6f, 0x72, 0x22, 0xdc,
	0x01, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x5a, 0x0a, 0x08, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x56, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x29, 0x0a,
	0x0f, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x1f, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x03, 0x66, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x03, 0x66, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x2c, 0x0a,
	0x11, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x23, 0x0a, 0x0b, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x26, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x10, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x4a, 0x0a,
	0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x1a, 0x53, 0x0a, 0x0f, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc5,
	0x01, 0x0a, 0x10, 0x4b, 0x75, 0x62, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x53, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x5c, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x48, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a,
	0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x4a, 0x0a, 0x12, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x8e, 0x01, 0x0a,
	0x19, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x01, 0x78, 0x12, 0x1d,
	0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x01, 0x79, 0x22, 0x5d, 0x0a,
	0x1d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x01, 0x78, 0x12, 0x1d, 0x0a,
	0x01, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x01, 0x79, 0x22, 0xbb, 0x01, 0x0a,
	0x19, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x6f,
	0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x01, 0x78, 0x12, 0x1d,
	0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x01, 0x79, 0x12, 0x2b, 0x0a,
	0x03, 0x66, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x66, 0x6f, 0x72, 0x22, 0x8c, 0x01, 0x0a, 0x1d, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x1d, 0x0a, 0x01,
	0x78, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x01, 0x78, 0x12, 0x1d, 0x0a, 0x01, 0x79,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x01, 0x79, 0x12, 0x2d, 0x0a, 0x04, 0x66, 0x6f,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x04, 0x66, 0x6f, 0x72, 0x73, 0x22, 0x79, 0x0a, 0x14, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x7a, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x7a, 0x0a,
	0x0e, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x31, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x97, 0x01, 0x0a, 0x0b, 0x53, 0x69,
	0x6c, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x6c,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69,
	0x6c, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x73, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x41, 0x74, 0x12,
	0x32, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x73, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x65, 0x6e, 0x64,
	0x73, 0x41, 0x74, 0x22, 0x4a, 0x0a, 0x13, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x7c, 0x0a, 0x16, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6d, 0x70, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x27, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x73, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x22, 0x97, 0x01,
	0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x55, 0x0a, 0x15, 0x66, 0x75, 0x6c, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x52, 0x15, 0x66, 0x75, 0x6c, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x52, 0x0a, 0x10, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x12,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x70, 0x12, 0x49, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x4d, 0x61, 0x70, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0x58, 0x0a,
	0x0e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc3, 0x01, 0x0a, 0x14, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73,
	0x12, 0x4e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x5b, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x80, 0x02,
	0x0a, 0x0d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x53, 0x6c, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x05, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x3b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x72,
	0x44, 0x75, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x72,
	0x44, 0x75, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x22, 0x49, 0x0a, 0x0d, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x72,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x9c, 0x03, 0x0a, 0x0d,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1f, 0x0a,
	0x08, 0x73, 0x6d, 0x74, 0x70, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x73, 0x6d, 0x74, 0x70, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x29,
	0x0a, 0x0d, 0x73, 0x6d, 0x74, 0x70, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x73, 0x6d, 0x74, 0x70, 0x53, 0x6d, 0x61,
	0x72, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x10, 0x73, 0x6d, 0x74,
	0x70, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x10, 0x73, 0x6d, 0x74, 0x70, 0x41, 0x75, 0x74, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x10, 0x73, 0x6d,
	0x74, 0x70, 0x41, 0x75, 0x74, 0x68, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x10, 0x73, 0x6d, 0x74, 0x70, 0x41, 0x75, 0x74, 0x68,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x10, 0x73,
	0x6d, 0x74, 0x70, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x10, 0x73, 0x6d, 0x74, 0x70, 0x41, 0x75, 0x74,
	0x68, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e,
	0x73, 0x6d, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x4c, 0x53, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x0e, 0x73, 0x6d, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x54, 0x4c, 0x53, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x6d,
	0x74, 0x70, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x6d, 0x74, 0x70, 0x53,
	0x6d, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x6d, 0x74,
	0x70, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x73, 0x6d, 0x74, 0x70, 0x41, 0x75, 0x74, 0x68, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x6d, 0x74, 0x70, 0x41, 0x75, 0x74, 0x68, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x6d, 0x74, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x4c, 0x53, 0x22, 0x3b, 0x0a, 0x11, 0x50, 0x61,
	0x67, 0x65, 0x72, 0x44, 0x75, 0x74, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x48, 0x0a, 0x11, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x6b, 0x0a, 0x13, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1b,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x1a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x5f, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x18, 0x54, 0x65, 0x73,
	0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x54, 0x65,
	0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x42, 0x0a,
	0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x3e, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x59, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x52,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x22, 0xa2, 0x01, 0x0a,
	0x13, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x4c, 0x6f, 0x67, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f,
	0x67, 0x22, 0x4e, 0x0a, 0x17, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xdc, 0x01, 0x0a, 0x14, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x51, 0x0a,
	0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x17, 0x0a, 0x15, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x14, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x54, 0x0a, 0x0f, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x6c, 0x6f, 0x6f, 0x6b, 0x62, 0x61, 0x63, 0x6b,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x6c, 0x6f, 0x6f, 0x6b, 0x62, 0x61, 0x63,
	0x6b, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0xa2, 0x01, 0x0a, 0x10, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x51, 0x0a, 0x0a, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9a, 0x01, 0x0a,
	0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x30, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x2a, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x0d, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x22, 0x72, 0x0a, 0x0e,
	0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x54, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40,
	0x0a, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x22, 0xf8, 0x01, 0x0a, 0x1a, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x44, 0x69,
	0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x24, 0x0a, 0x0d,
	0x6e, 0x75, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x3a, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x71, 0x0a, 0x1b, 0x45,
	0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x14, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x14, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x79,
	0x0a, 0x0b, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x3d, 0x0a, 0x11, 0x49, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x28,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x6a, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x03, 0x65, 0x6e, 0x64, 0x2a, 0x3a, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41,
	0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x03,
	0x2a, 0x50, 0x0a, 0x0c, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x12, 0x0a, 0x0a, 0x06, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x53, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x41, 0x54, 0x55,
	0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x52, 0x41, 0x46,
	0x46, 0x49, 0x43, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x41, 0x54, 0x45, 0x4e, 0x43, 0x59,
	0x10, 0x04, 0x2a, 0xc9, 0x01, 0x0a, 0x09, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x4b, 0x75, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43,
	0x70, 0x75, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x73, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x10, 0x05,
	0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x6c, 0x6f, 0x77,
	0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x10, 0x09, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x10, 0x0a, 0x2a, 0x24,
	0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x4f, 0x52, 0x10, 0x01, 0x2a, 0x31, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46,
	0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x46, 0x5f,
	0x54, 0x48, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x46, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x54, 0x48, 0x45, 0x4e, 0x10, 0x01, 0x2a, 0x54, 0x0a, 0x13, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0a,
	0x0a, 0x06, 0x55, 0x4e, 0x4b, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x49, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x53, 0x49, 0x4c, 0x45, 0x4e, 0x43, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x52, 0x0a,
	0x0c, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x10, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x10,
	0x02, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x6e, 0x69, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescOnce sync.Once
	file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescData = file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDesc
)

func file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescGZIP() []byte {
	file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescOnce.Do(func() {
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescData)
	})
	return file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDescData
}

var file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes = make([]protoimpl.MessageInfo, 102)
var file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_goTypes = []interface{}{
	(Severity)(0),                                  // 0: alerting.Severity
	(GoldenSignal)(0),                              // 1: alerting.GoldenSignal
	(AlertType)(0),                                 // 2: alerting.AlertType
	(CompositionAction)(0),                         // 3: alerting.CompositionAction
	(ControlFlowAction)(0),                         // 4: alerting.ControlFlowAction
	(AlertConditionState)(0),                       // 5: alerting.AlertConditionState
	(TimelineType)(0),                              // 6: alerting.TimelineType
	(*AlertCondition)(nil),                         // 7: alerting.AlertCondition
	(*FullAttachedEndpoints)(nil),                  // 8: alerting.FullAttachedEndpoints
	(*FullAttachedEndpoint)(nil),                   // 9: alerting.FullAttachedEndpoint
	(*AttachedEndpoints)(nil),                      // 10: alerting.AttachedEndpoints
	(*AttachedEndpoint)(nil),                       // 11: alerting.AttachedEndpoint
	(*AlertDetailChoicesRequest)(nil),              // 12: alerting.AlertDetailChoicesRequest
	(*AlertDetailChoicesResponse)(nil),             // 13: alerting.AlertDetailChoicesResponse
	(*AlertTypeDetails)(nil),                       // 14: alerting.AlertTypeDetails
	(*ListAlertTypeDetails)(nil),                   // 15: alerting.ListAlertTypeDetails
	(*ListAlertConditionPrometheusQuery)(nil),      // 16: alerting.ListAlertConditionPrometheusQuery
	(*InvolvedConditions)(nil),                     // 17: alerting.InvolvedConditions
	(*AlertConditionSystem)(nil),                   // 18: alerting.AlertConditionSystem
	(*ListAlertConditionSystem)(nil),               // 19: alerting.ListAlertConditionSystem
	(*AlertConditionKubeState)(nil),                // 20: alerting.AlertConditionKubeState
	(*ListAlertConditionKubeState)(nil),            // 21: alerting.ListAlertConditionKubeState
	(*AlertConditionCPUSaturation)(nil),            // 22: alerting.AlertConditionCPUSaturation
	(*Cores)(nil),                                  // 23: alerting.Cores
	(*ListAlertConditionCPUSaturation)(nil),        // 24: alerting.ListAlertConditionCPUSaturation
	(*CpuNodeGroup)(nil),                           // 25: alerting.CpuNodeGroup
	(*CpuInfo)(nil),                                // 26: alerting.CpuInfo
	(*AlertConditionMemorySaturation)(nil),         // 27: alerting.AlertConditionMemorySaturation
	(*ListAlertConditionMemorySaturation)(nil),     // 28: alerting.ListAlertConditionMemorySaturation
	(*MemoryNodeGroup)(nil),                        // 29: alerting.MemoryNodeGroup
	(*MemoryInfo)(nil),                             // 30: alerting.MemoryInfo
	(*AlertConditionFilesystemSaturation)(nil),     // 31: alerting.AlertConditionFilesystemSaturation
	(*ListAlertConditionFilesystemSaturation)(nil), // 32: alerting.ListAlertConditionFilesystemSaturation
	(*FilesystemNodeGroup)(nil),                    // 33: alerting.FilesystemNodeGroup
	(*FilesystemInfo)(nil),                         // 34: alerting.FilesystemInfo
	(*AlertConditionPrometheusQuery)(nil),          // 35: alerting.AlertConditionPrometheusQuery
	(*AlertConditionDownstreamCapability)(nil),     // 36: alerting.AlertConditionDownstreamCapability
	(*ListAlertConditionDownstreamCapability)(nil), // 37: alerting.ListAlertConditionDownstreamCapability
	(*CapabilityState)(nil),                        // 38: alerting.CapabilityState
	(*AlertConditionMonitoringBackend)(nil),        // 39: alerting.AlertConditionMonitoringBackend
	(*ListAlertConditionMonitoringBackend)(nil),    // 40: alerting.ListAlertConditionMonitoringBackend
	(*StringArray)(nil),                            // 41: alerting.StringArray
	(*ObjectList)(nil),                             // 42: alerting.ObjectList
	(*NamespaceObjects)(nil),                       // 43: alerting.NamespaceObjects
	(*KubeObjectGroups)(nil),                       // 44: alerting.KubeObjectGroups
	(*ListSelectAlertInfo)(nil),                    // 45: alerting.ListSelectAlertInfo
	(*AlertConditionList)(nil),                     // 46: alerting.AlertConditionList
	(*AlertConditionComposition)(nil),              // 47: alerting.AlertConditionComposition
	(*ListAlertConditionComposition)(nil),          // 48: alerting.ListAlertConditionComposition
	(*AlertConditionControlFlow)(nil),              // 49: alerting.AlertConditionControlFlow
	(*ListAlertConditionControlFlow)(nil),          // 50: alerting.ListAlertConditionControlFlow
	(*AlertConditionWithId)(nil),                   // 51: alerting.AlertConditionWithId
	(*ListAlertConditionRequest)(nil),              // 52: alerting.ListAlertConditionRequest
	(*UpdateAlertConditionRequest)(nil),            // 53: alerting.UpdateAlertConditionRequest
	(*SilenceRequest)(nil),                         // 54: alerting.SilenceRequest
	(*SilenceInfo)(nil),                            // 55: alerting.SilenceInfo
	(*AlertStatusResponse)(nil),                    // 56: alerting.AlertStatusResponse
	(*EndpointImplementation)(nil),                 // 57: alerting.EndpointImplementation
	(*RoutingNode)(nil),                            // 58: alerting.RoutingNode
	(*EndpointMetadata)(nil),                       // 59: alerting.EndpointMetadata
	(*EndpointRoutingMap)(nil),                     // 60: alerting.EndpointRoutingMap
	(*RoutingRelationships)(nil),                   // 61: alerting.RoutingRelationships
	(*AlertEndpoint)(nil),                          // 62: alerting.AlertEndpoint
	(*SlackEndpoint)(nil),                          // 63: alerting.SlackEndpoint
	(*EmailEndpoint)(nil),                          // 64: alerting.EmailEndpoint
	(*PagerDutyEndpoint)(nil),                      // 65: alerting.PagerDutyEndpoint
	(*AlertEndpointList)(nil),                      // 66: alerting.AlertEndpointList
	(*AlertEndpointWithId)(nil),                    // 67: alerting.AlertEndpointWithId
	(*ListAlertEndpointsRequest)(nil),              // 68: alerting.ListAlertEndpointsRequest
	(*UpdateAlertEndpointRequest)(nil),             // 69: alerting.UpdateAlertEndpointRequest
	(*DeleteAlertEndpointRequest)(nil),             // 70: alerting.DeleteAlertEndpointRequest
	(*TestAlertEndpointRequest)(nil),               // 71: alerting.TestAlertEndpointRequest
	(*TestAlertEndpointResponse)(nil),              // 72: alerting.TestAlertEndpointResponse
	(*ListAlertLogRequest)(nil),                    // 73: alerting.ListAlertLogRequest
	(*UpdateAlertLogRequest)(nil),                  // 74: alerting.UpdateAlertLogRequest
	(*InformativeAlertLog)(nil),                    // 75: alerting.InformativeAlertLog
	(*InformativeAlertLogList)(nil),                // 76: alerting.InformativeAlertLogList
	(*TriggerAlertsRequest)(nil),                   // 77: alerting.TriggerAlertsRequest
	(*TriggerAlertsResponse)(nil),                  // 78: alerting.TriggerAlertsResponse
	(*ResolveAlertsRequest)(nil),                   // 79: alerting.ResolveAlertsRequest
	(*ResolveAlertsResponse)(nil),                  // 80: alerting.ResolveAlertsResponse
	(*TimelineRequest)(nil),                        // 81: alerting.TimelineRequest
	(*TimelineResponse)(nil),                       // 82: alerting.TimelineResponse
	(*ActiveWindow)(nil),                           // 83: alerting.ActiveWindow
	(*ActiveWindows)(nil),                          // 84: alerting.ActiveWindows
	(*CloneToRequest)(nil),                         // 85: alerting.CloneToRequest
	(*EphemeralDispatcherRequest)(nil),             // 86: alerting.EphemeralDispatcherRequest
	(*EphemeralDispatcherResponse)(nil),            // 87: alerting.EphemeralDispatcherResponse
	(*CachedState)(nil),                            // 88: alerting.CachedState
	(*IncidentIntervals)(nil),                      // 89: alerting.IncidentIntervals
	(*Interval)(nil),                               // 90: alerting.Interval
	nil,                                            // 91: alerting.ListAlertConditionKubeState.ClustersEntry
	nil,                                            // 92: alerting.AlertConditionCPUSaturation.NodeCoreFiltersEntry
	nil,                                            // 93: alerting.ListAlertConditionCPUSaturation.ClustersEntry
	nil,                                            // 94: alerting.CpuNodeGroup.NodesEntry
	nil,                                            // 95: alerting.AlertConditionMemorySaturation.NodeMemoryFiltersEntry
	nil,                                            // 96: alerting.ListAlertConditionMemorySaturation.ClustersEntry
	nil,                                            // 97: alerting.MemoryNodeGroup.NodesEntry
	nil,                                            // 98: alerting.AlertConditionFilesystemSaturation.NodeFiltersEntry
	nil,                                            // 99: alerting.ListAlertConditionFilesystemSaturation.ClustersEntry
	nil,                                            // 100: alerting.FilesystemNodeGroup.NodesEntry
	nil,                                            // 101: alerting.ListAlertConditionDownstreamCapability.ClustersEntry
	nil,                                            // 102: alerting.NamespaceObjects.NamespacesEntry
	nil,                                            // 103: alerting.KubeObjectGroups.ResourceTypesEntry
	nil,                                            // 104: alerting.EndpointRoutingMap.EndpointsEntry
	nil,                                            // 105: alerting.RoutingRelationships.ConditionsEntry
	nil,                                            // 106: alerting.TriggerAlertsRequest.AnnotationsEntry
	nil,                                            // 107: alerting.ResolveAlertsRequest.AnnotationsEntry
	nil,                                            // 108: alerting.TimelineResponse.ItemsEntry
	(*durationpb.Duration)(nil),                    // 109: google.protobuf.Duration
	(*v1.Reference)(nil),                           // 110: core.Reference
	(*timestamppb.Timestamp)(nil),                  // 111: google.protobuf.Timestamp
	(*v1.AlertLog)(nil),                            // 112: core.AlertLog
}
var file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_depIdxs = []int32{
	0,   // 0: alerting.AlertCondition.severity:type_name -> alerting.Severity
	14,  // 1: alerting.AlertCondition.alertType:type_name -> alerting.AlertTypeDetails
	10,  // 2: alerting.AlertCondition.attachedEndpoints:type_name -> alerting.AttachedEndpoints
	55,  // 3: alerting.AlertCondition.silence:type_name -> alerting.SilenceInfo
	1,   // 4: alerting.AlertCondition.goldenSignal:type_name -> alerting.GoldenSignal
	9,   // 5: alerting.FullAttachedEndpoints.items:type_name -> alerting.FullAttachedEndpoint
	109, // 6: alerting.FullAttachedEndpoints.initialDelay:type_name -> google.protobuf.Duration
	109, // 7: alerting.FullAttachedEndpoints.repeatInterval:type_name -> google.protobuf.Duration
	109, // 8: alerting.FullAttachedEndpoints.throttlingDuration:type_name -> google.protobuf.Duration
	57,  // 9: alerting.FullAttachedEndpoints.details:type_name -> alerting.EndpointImplementation
	62,  // 10: alerting.FullAttachedEndpoint.alertEndpoint:type_name -> alerting.AlertEndpoint
	57,  // 11: alerting.FullAttachedEndpoint.details:type_name -> alerting.EndpointImplementation
	11,  // 12: alerting.AttachedEndpoints.items:type_name -> alerting.AttachedEndpoint
	109, // 13: alerting.AttachedEndpoints.initialDelay:type_name -> google.protobuf.Duration
	109, // 14: alerting.AttachedEndpoints.repeatInterval:type_name -> google.protobuf.Duration
	109, // 15: alerting.AttachedEndpoints.throttlingDuration:type_name -> google.protobuf.Duration
	57,  // 16: alerting.AttachedEndpoints.details:type_name -> alerting.EndpointImplementation
	2,   // 17: alerting.AlertDetailChoicesRequest.alertType:type_name -> alerting.AlertType
	14,  // 18: alerting.AlertDetailChoicesResponse.choices:type_name -> alerting.AlertTypeDetails
	18,  // 19: alerting.AlertTypeDetails.system:type_name -> alerting.AlertConditionSystem
	20,  // 20: alerting.AlertTypeDetails.kubeState:type_name -> alerting.AlertConditionKubeState
	47,  // 21: alerting.AlertTypeDetails.composition:type_name -> alerting.AlertConditionComposition
	49,  // 22: alerting.AlertTypeDetails.controlFlow:type_name -> alerting.AlertConditionControlFlow
	22,  // 23: alerting.AlertTypeDetails.cpu:type_name -> alerting.AlertConditionCPUSaturation
	27,  // 24: alerting.AlertTypeDetails.memory:type_name -> alerting.AlertConditionMemorySaturation
	31,  // 25: alerting.AlertTypeDetails.fs:type_name -> alerting.AlertConditionFilesystemSaturation
	35,  // 26: alerting.AlertTypeDetails.prometheusQuery:type_name -> alerting.AlertConditionPrometheusQuery
	36,  // 27: alerting.AlertTypeDetails.downstreamCapability:type_name -> alerting.AlertConditionDownstreamCapability
	39,  // 28: alerting.AlertTypeDetails.monitoringBackend:type_name -> alerting.AlertConditionMonitoringBackend
	19,  // 29: alerting.ListAlertTypeDetails.system:type_name -> alerting.ListAlertConditionSystem
	21,  // 30: alerting.ListAlertTypeDetails.kubeState:type_name -> alerting.ListAlertConditionKubeState
	48,  // 31: alerting.ListAlertTypeDetails.composition:type_name -> alerting.ListAlertConditionComposition
	50,  // 32: alerting.ListAlertTypeDetails.controlFlow:type_name -> alerting.ListAlertConditionControlFlow
	24,  // 33: alerting.ListAlertTypeDetails.cpu:type_name -> alerting.ListAlertConditionCPUSaturation
	28,  // 34: alerting.ListAlertTypeDetails.memory:type_name -> alerting.ListAlertConditionMemorySaturation
	32,  // 35: alerting.ListAlertTypeDetails.fs:type_name -> alerting.ListAlertConditionFilesystemSaturation
	37,  // 36: alerting.ListAlertTypeDetails.downstreamCapability:type_name -> alerting.ListAlertConditionDownstreamCapability
	16,  // 37: alerting.ListAlertTypeDetails.prometheusQuery:type_name -> alerting.ListAlertConditionPrometheusQuery
	40,  // 38: alerting.ListAlertTypeDetails.monitoringBackend:type_name -> alerting.ListAlertConditionMonitoringBackend
	110, // 39: alerting.InvolvedConditions.items:type_name -> core.Reference
	110, // 40: alerting.AlertConditionSystem.clusterId:type_name -> core.Reference
	109, // 41: alerting.AlertConditionSystem.timeout:type_name -> google.protobuf.Duration
	109, // 42: alerting.AlertConditionKubeState.for:type_name -> google.protobuf.Duration
	91,  // 43: alerting.ListAlertConditionKubeState.clusters:type_name -> alerting.ListAlertConditionKubeState.ClustersEntry
	109, // 44: alerting.ListAlertConditionKubeState.fors:type_name -> google.protobuf.Duration
	110, // 45: alerting.AlertConditionCPUSaturation.clusterId:type_name -> core.Reference
	92,  // 46: alerting.AlertConditionCPUSaturation.nodeCoreFilters:type_name -> alerting.AlertConditionCPUSaturation.NodeCoreFiltersEntry
	109, // 47: alerting.AlertConditionCPUSaturation.for:type_name -> google.protobuf.Duration
	93,  // 48: alerting.ListAlertConditionCPUSaturation.clusters:type_name -> alerting.ListAlertConditionCPUSaturation.ClustersEntry
	94,  // 49: alerting.CpuNodeGroup.nodes:type_name -> alerting.CpuNodeGroup.NodesEntry
	110, // 50: alerting.AlertConditionMemorySaturation.clusterId:type_name -> core.Reference
	95,  // 51: alerting.AlertConditionMemorySaturation.nodeMemoryFilters:type_name -> alerting.AlertConditionMemorySaturation.NodeMemoryFiltersEntry
	109, // 52: alerting.AlertConditionMemorySaturation.for:type_name -> google.protobuf.Duration
	96,  // 53: alerting.ListAlertConditionMemorySaturation.clusters:type_name -> alerting.ListAlertConditionMemorySaturation.ClustersEntry
	97,  // 54: alerting.MemoryNodeGroup.nodes:type_name -> alerting.MemoryNodeGroup.NodesEntry
	110, // 55: alerting.AlertConditionFilesystemSaturation.clusterId:type_name -> core.Reference
	98,  // 56: alerting.AlertConditionFilesystemSaturation.nodeFilters:type_name -> alerting.AlertConditionFilesystemSaturation.NodeFiltersEntry
	109, // 57: alerting.AlertConditionFilesystemSaturation.for:type_name -> google.protobuf.Duration
	99,  // 58: alerting.ListAlertConditionFilesystemSaturation.clusters:type_name -> alerting.ListAlertConditionFilesystemSaturation.ClustersEntry
	100, // 59: alerting.FilesystemNodeGroup.nodes:type_name -> alerting.FilesystemNodeGroup.NodesEntry
	110, // 60: alerting.AlertConditionPrometheusQuery.clusterId:type_name -> core.Reference
	109, // 61: alerting.AlertConditionPrometheusQuery.for:type_name -> google.protobuf.Duration
	110, // 62: alerting.AlertConditionDownstreamCapability.clusterId:type_name -> core.Reference
	109, // 63: alerting.AlertConditionDownstreamCapability.for:type_name -> google.protobuf.Duration
	101, // 64: alerting.ListAlertConditionDownstreamCapability.clusters:type_name -> alerting.ListAlertConditionDownstreamCapability.ClustersEntry
	109, // 65: alerting.AlertConditionMonitoringBackend.for:type_name -> google.protobuf.Duration
	110, // 66: alerting.AlertConditionMonitoringBackend.clusterId:type_name -> core.Reference
	102, // 67: alerting.NamespaceObjects.namespaces:type_name -> alerting.NamespaceObjects.NamespacesEntry
	103, // 68: alerting.KubeObjectGroups.resourceTypes:type_name -> alerting.KubeObjectGroups.ResourceTypesEntry
	2,   // 69: alerting.ListSelectAlertInfo.alertType:type_name -> alerting.AlertType
	51,  // 70: alerting.AlertConditionList.items:type_name -> alerting.AlertConditionWithId
	3,   // 71: alerting.AlertConditionComposition.action:type_name -> alerting.CompositionAction
	110, // 72: alerting.AlertConditionComposition.x:type_name -> core.Reference
	110, // 73: alerting.AlertConditionComposition.y:type_name -> core.Reference
	110, // 74: alerting.ListAlertConditionComposition.x:type_name -> core.Reference
	110, // 75: alerting.ListAlertConditionComposition.y:type_name -> core.Reference
	4,   // 76: alerting.AlertConditionControlFlow.action:type_name -> alerting.ControlFlowAction
	110, // 77: alerting.AlertConditionControlFlow.x:type_name -> core.Reference
	110, // 78: alerting.AlertConditionControlFlow.y:type_name -> core.Reference
	109, // 79: alerting.AlertConditionControlFlow.for:type_name -> google.protobuf.Duration
	110, // 80: alerting.ListAlertConditionControlFlow.x:type_name -> core.Reference
	110, // 81: alerting.ListAlertConditionControlFlow.y:type_name -> core.Reference
	109, // 82: alerting.ListAlertConditionControlFlow.fors:type_name -> google.protobuf.Duration
	110, // 83: alerting.AlertConditionWithId.id:type_name -> core.Reference
	7,   // 84: alerting.AlertConditionWithId.alertCondition:type_name -> alerting.AlertCondition
	110, // 85: alerting.UpdateAlertConditionRequest.id:type_name -> core.Reference
	7,   // 86: alerting.UpdateAlertConditionRequest.updateAlert:type_name -> alerting.AlertCondition
	110, // 87: alerting.SilenceRequest.conditionId:type_name -> core.Reference
	109, // 88: alerting.SilenceRequest.duration:type_name -> google.protobuf.Duration
	111, // 89: alerting.SilenceInfo.startsAt:type_name -> google.protobuf.Timestamp
	111, // 90: alerting.SilenceInfo.endsAt:type_name -> google.protobuf.Timestamp
	5,   // 91: alerting.AlertStatusResponse.state:type_name -> alerting.AlertConditionState
	110, // 92: alerting.RoutingNode.conditionId:type_name -> core.Reference
	8,   // 93: alerting.RoutingNode.fullAttachedEndpoints:type_name -> alerting.FullAttachedEndpoints
	104, // 94: alerting.EndpointRoutingMap.endpoints:type_name -> alerting.EndpointRoutingMap.EndpointsEntry
	105, // 95: alerting.RoutingRelationships.conditions:type_name -> alerting.RoutingRelationships.ConditionsEntry
	63,  // 96: alerting.AlertEndpoint.slack:type_name -> alerting.SlackEndpoint
	64,  // 97: alerting.AlertEndpoint.email:type_name -> alerting.EmailEndpoint
	65,  // 98: alerting.AlertEndpoint.pagerDuty:type_name -> alerting.PagerDutyEndpoint
	67,  // 99: alerting.AlertEndpointList.items:type_name -> alerting.AlertEndpointWithId
	62,  // 100: alerting.AlertEndpointWithId.endpoint:type_name -> alerting.AlertEndpoint
	110, // 101: alerting.AlertEndpointWithId.id:type_name -> core.Reference
	110, // 102: alerting.UpdateAlertEndpointRequest.id:type_name -> core.Reference
	62,  // 103: alerting.UpdateAlertEndpointRequest.updateAlert:type_name -> alerting.AlertEndpoint
	110, // 104: alerting.DeleteAlertEndpointRequest.id:type_name -> core.Reference
	62,  // 105: alerting.TestAlertEndpointRequest.endpoint:type_name -> alerting.AlertEndpoint
	111, // 106: alerting.ListAlertLogRequest.startTimestamp:type_name -> google.protobuf.Timestamp
	111, // 107: alerting.ListAlertLogRequest.endTimestamp:type_name -> google.protobuf.Timestamp
	112, // 108: alerting.UpdateAlertLogRequest.UpdateAlert:type_name -> core.AlertLog
	110, // 109: alerting.InformativeAlertLog.conditionId:type_name -> core.Reference
	7,   // 110: alerting.InformativeAlertLog.condition:type_name -> alerting.AlertCondition
	112, // 111: alerting.InformativeAlertLog.log:type_name -> core.AlertLog
	75,  // 112: alerting.InformativeAlertLogList.items:type_name -> alerting.InformativeAlertLog
	110, // 113: alerting.TriggerAlertsRequest.conditionId:type_name -> core.Reference
	106, // 114: alerting.TriggerAlertsRequest.annotations:type_name -> alerting.TriggerAlertsRequest.AnnotationsEntry
	110, // 115: alerting.ResolveAlertsRequest.conditionId:type_name -> core.Reference
	107, // 116: alerting.ResolveAlertsRequest.annotations:type_name -> alerting.ResolveAlertsRequest.AnnotationsEntry
	109, // 117: alerting.TimelineRequest.lookbackWindow:type_name -> google.protobuf.Duration
	108, // 118: alerting.TimelineResponse.items:type_name -> alerting.TimelineResponse.ItemsEntry
	111, // 119: alerting.ActiveWindow.start:type_name -> google.protobuf.Timestamp
	111, // 120: alerting.ActiveWindow.end:type_name -> google.protobuf.Timestamp
	6,   // 121: alerting.ActiveWindow.type:type_name -> alerting.TimelineType
	83,  // 122: alerting.ActiveWindows.windows:type_name -> alerting.ActiveWindow
	7,   // 123: alerting.CloneToRequest.alertCondition:type_name -> alerting.AlertCondition
	109, // 124: alerting.EphemeralDispatcherRequest.ttl:type_name -> google.protobuf.Duration
	62,  // 125: alerting.EphemeralDispatcherRequest.endpoint:type_name -> alerting.AlertEndpoint
	57,  // 126: alerting.EphemeralDispatcherRequest.details:type_name -> alerting.EndpointImplementation
	77,  // 127: alerting.EphemeralDispatcherResponse.triggerAlertsRequest:type_name -> alerting.TriggerAlertsRequest
	111, // 128: alerting.CachedState.timestamp:type_name -> google.protobuf.Timestamp
	90,  // 129: alerting.IncidentIntervals.items:type_name -> alerting.Interval
	111, // 130: alerting.Interval.start:type_name -> google.protobuf.Timestamp
	111, // 131: alerting.Interval.end:type_name -> google.protobuf.Timestamp
	44,  // 132: alerting.ListAlertConditionKubeState.ClustersEntry.value:type_name -> alerting.KubeObjectGroups
	23,  // 133: alerting.AlertConditionCPUSaturation.NodeCoreFiltersEntry.value:type_name -> alerting.Cores
	25,  // 134: alerting.ListAlertConditionCPUSaturation.ClustersEntry.value:type_name -> alerting.CpuNodeGroup
	26,  // 135: alerting.CpuNodeGroup.NodesEntry.value:type_name -> alerting.CpuInfo
	30,  // 136: alerting.AlertConditionMemorySaturation.NodeMemoryFiltersEntry.value:type_name -> alerting.MemoryInfo
	29,  // 137: alerting.ListAlertConditionMemorySaturation.ClustersEntry.value:type_name -> alerting.MemoryNodeGroup
	30,  // 138: alerting.MemoryNodeGroup.NodesEntry.value:type_name -> alerting.MemoryInfo
	34,  // 139: alerting.AlertConditionFilesystemSaturation.NodeFiltersEntry.value:type_name -> alerting.FilesystemInfo
	33,  // 140: alerting.ListAlertConditionFilesystemSaturation.ClustersEntry.value:type_name -> alerting.FilesystemNodeGroup
	34,  // 141: alerting.FilesystemNodeGroup.NodesEntry.value:type_name -> alerting.FilesystemInfo
	38,  // 142: alerting.ListAlertConditionDownstreamCapability.ClustersEntry.value:type_name -> alerting.CapabilityState
	42,  // 143: alerting.NamespaceObjects.NamespacesEntry.value:type_name -> alerting.ObjectList
	43,  // 144: alerting.KubeObjectGroups.ResourceTypesEntry.value:type_name -> alerting.NamespaceObjects
	59,  // 145: alerting.EndpointRoutingMap.EndpointsEntry.value:type_name -> alerting.EndpointMetadata
	60,  // 146: alerting.RoutingRelationships.ConditionsEntry.value:type_name -> alerting.EndpointRoutingMap
	84,  // 147: alerting.TimelineResponse.ItemsEntry.value:type_name -> alerting.ActiveWindows
	148, // [148:148] is the sub-list for method output_type
	148, // [148:148] is the sub-list for method input_type
	148, // [148:148] is the sub-list for extension type_name
	148, // [148:148] is the sub-list for extension extendee
	0,   // [0:148] is the sub-list for field type_name
}

func init() { file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_init() }
func file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_init() {
	if File_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullAttachedEndpoints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullAttachedEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachedEndpoints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachedEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertDetailChoicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertDetailChoicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertTypeDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertTypeDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionPrometheusQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvolvedConditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionKubeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionKubeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionCPUSaturation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cores); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionCPUSaturation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CpuNodeGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CpuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionMemorySaturation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionMemorySaturation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryNodeGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionFilesystemSaturation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionFilesystemSaturation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesystemNodeGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesystemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionPrometheusQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionDownstreamCapability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionDownstreamCapability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapabilityState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionMonitoringBackend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionMonitoringBackend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubeObjectGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSelectAlertInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionComposition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionComposition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionControlFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionControlFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConditionWithId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SilenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SilenceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointImplementation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutingNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointRoutingMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutingRelationships); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlackEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagerDutyEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertEndpointList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertEndpointWithId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertEndpointsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestAlertEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestAlertEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InformativeAlertLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InformativeAlertLogList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAlertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveAlertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveWindows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneToRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EphemeralDispatcherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EphemeralDispatcherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CachedState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncidentIntervals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*AlertTypeDetails_System)(nil),
		(*AlertTypeDetails_KubeState)(nil),
		(*AlertTypeDetails_Composition)(nil),
		(*AlertTypeDetails_ControlFlow)(nil),
		(*AlertTypeDetails_Cpu)(nil),
		(*AlertTypeDetails_Memory)(nil),
		(*AlertTypeDetails_Fs)(nil),
		(*AlertTypeDetails_PrometheusQuery)(nil),
		(*AlertTypeDetails_DownstreamCapability)(nil),
		(*AlertTypeDetails_MonitoringBackend)(nil),
	}
	file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ListAlertTypeDetails_System)(nil),
		(*ListAlertTypeDetails_KubeState)(nil),
		(*ListAlertTypeDetails_Composition)(nil),
		(*ListAlertTypeDetails_ControlFlow)(nil),
		(*ListAlertTypeDetails_Cpu)(nil),
		(*ListAlertTypeDetails_Memory)(nil),
		(*ListAlertTypeDetails_Fs)(nil),
		(*ListAlertTypeDetails_DownstreamCapability)(nil),
		(*ListAlertTypeDetails_PrometheusQuery)(nil),
		(*ListAlertTypeDetails_MonitoringBackend)(nil),
	}
	file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[50].OneofWrappers = []interface{}{}
	file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[55].OneofWrappers = []interface{}{
		(*AlertEndpoint_Slack)(nil),
		(*AlertEndpoint_Email)(nil),
		(*AlertEndpoint_PagerDuty)(nil),
	}
	file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes[57].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   102,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_goTypes,
		DependencyIndexes: file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_depIdxs,
		EnumInfos:         file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_enumTypes,
		MessageInfos:      file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_msgTypes,
	}.Build()
	File_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto = out.File
	file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_rawDesc = nil
	file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_goTypes = nil
	file_github_com_rancher_opni_pkg_apis_alerting_v1_alerting_proto_depIdxs = nil
}
