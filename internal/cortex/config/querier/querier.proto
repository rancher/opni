// Code generated by internal/codegen. You may edit parts of this file.
// Field numbers and custom options will be preserved for matching field names.
// All other modifications will be lost.
syntax = "proto3";
package querier;

import "github.com/rancher/opni/internal/codegen/cli/cli.proto";
import "google/protobuf/duration.proto";

option go_package      = "github.com/rancher/opni/internal/cortex/config/querier";
option (cli.generator) = {
  generate:          true
  generate_deepcopy: true
};

message Config {
  // The maximum number of concurrent queries.
  optional int32 max_concurrent = 1 [(cli.flag) = {default: "20"}];
  // The timeout for a query.
  google.protobuf.Duration timeout = 2 [(cli.flag) = {default: "2m0s"}];
  // Use iterators to execute query, as opposed to fully materialising the series in memory.
  optional bool iterators = 3 [(cli.flag) = {default: "false"}];
  // Use batch iterators to execute query, as opposed to fully materialising the series in memory.  Takes precedent over the -querier.iterators flag.
  optional bool batch_iterators = 4 [(cli.flag) = {default: "true"}];
  // Use streaming RPCs to query ingester.
  optional bool ingester_streaming = 5 [(cli.flag) = {default: "true"}];
  // Use streaming RPCs for metadata APIs from ingester.
  optional bool ingester_metadata_streaming = 6 [(cli.flag) = {default: "false"}];
  // Maximum number of samples a single query can load into memory.
  optional int32 max_samples = 7 [(cli.flag) = {default: "50000000"}];
  // Maximum lookback beyond which queries are not sent to ingester. 0 means all queries are sent to ingester.
  google.protobuf.Duration query_ingesters_within = 8 [(cli.flag) = {default: "0s"}];
  // Deprecated (Querying long-term store for labels will be always enabled in the future.): Query long-term store for series, label values and label names APIs.
  optional bool query_store_for_labels_enabled = 9 [(cli.flag) = {default: "false"}];
  // Enable returning samples stats per steps in query response.
  optional bool per_step_stats_enabled = 10 [(cli.flag) = {default: "false"}];
  // The time after which a metric should be queried from storage and not just ingesters. 0 means all queries are sent to store. When running the blocks storage, if this option is enabled, the time range of the query sent to the store will be manipulated to ensure the query end is not more recent than 'now - query-store-after'.
  google.protobuf.Duration query_store_after = 11 [(cli.flag) = {default: "0s"}];
  // Maximum duration into the future you can query. 0 to disable.
  google.protobuf.Duration max_query_into_future = 12 [(cli.flag) = {default: "10m0s"}];
  // The default evaluation interval or step size for subqueries.
  google.protobuf.Duration default_evaluation_interval = 13 [(cli.flag) = {default: "1m0s"}];
  // Time since the last sample after which a time series is considered stale and ignored by expression evaluations.
  google.protobuf.Duration lookback_delta = 14 [(cli.flag) = {default: "5m0s"}];
  // When distributor's sharding strategy is shuffle-sharding and this setting is > 0, queriers fetch in-memory series from the minimum set of required ingesters, selecting only ingesters which may have received series since 'now - lookback period'. The lookback period should be greater or equal than the configured 'query store after' and 'query ingesters within'. If this setting is 0, queriers always query all ingesters (ingesters shuffle sharding on read path is disabled).
  google.protobuf.Duration shuffle_sharding_ingesters_lookback_period = 15 [(cli.flag) = {default: "0s"}];
  // Experimental. Use Thanos promql engine https://github.com/thanos-io/promql-engine rather than the Prometheus promql engine.
  optional bool thanos_engine = 16 [(cli.flag) = {default: "false"}];
}
