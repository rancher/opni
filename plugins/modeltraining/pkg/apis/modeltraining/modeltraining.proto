syntax = "proto3";
option go_package = "github.com/rancher/opni/plugins/modeltraining/pkg/modeltraining";
import "github.com/rancher/opni/pkg/apis/core/v1/core.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

package modeltraining;

service ModelTraining {
  rpc TrainModel(WorkloadInfoList) returns (core.Reference) {
    option (google.api.http) = {
      post: "/trainModel"
      body: "*"
    };
  }
  rpc WorkloadLogCount(core.Reference) returns (WorkloadInfoList) {
    option (google.api.http) = {
      post: "/workloadLogCount/{id}"
    };
  }
  rpc GetModelStatus(google.protobuf.Empty) returns (ModelStatus) {
    option (google.api.http) = {
      get: "/model/status"
    };
  }
  rpc GetModelTrainingParameters(google.protobuf.Empty) returns (ModelTrainingParametersList) {
    option (google.api.http) = {
      get: "/model/training_parameters"
    };
  }
  rpc GpuPresentCluster(google.protobuf.Empty) returns (GPUInfoList) {
    option (google.api.http) = {
      get: "/gpuPresentCluster"
    };
  }
}

message GPUInfo {
  string name = 1;
  string capacity = 2;
  string allocatable = 3;
}

message GPUInfoList {
  repeated GPUInfo items = 1;
}

message ModelStatus {
  string status = 1;
}

message ModelTrainingParameters {
  string clusterId = 1;
  string namespace = 2;
  string deployment = 3;
}

message ModelTrainingParametersList {
  repeated ModelTrainingParameters items = 1;
}

message WorkloadInfo {
  string clusterId = 1;
  string namespace = 2;
  string deployment = 3;
  int64 logCount = 4;
}

message WorkloadInfoList {
  repeated WorkloadInfo items = 1;
}
