syntax = "proto3";
option go_package = "github.com/rancher/opni/pkg/apis/storage/v1";

import "google/protobuf/duration.proto";

package storage;

message StorageSpec {
  string Backend = 1;
  S3StorageSpec S3 = 2;
  GCSStorageSpec GCS = 3;
  AzureStorageSpec Azure = 4;
  SwiftStorageSpec Swift = 5;
  FilesystemStorageSpec Filesystem = 6;
}

message S3StorageSpec {
	// The S3 bucket endpoint. It could be an AWS S3 endpoint listed at
	// https://docs.aws.amazon.com/general/latest/gr/s3.html or the address of an
	// S3-compatible service in hostname:port format.
	string Endpoint = 1;
	// S3 region. If unset, the client will issue a S3 GetBucketLocation API call
	// to autodetect it.
	string Region = 2;
	// S3 bucket name
	string BucketName = 3;
	// S3 secret access key
	string SecretAccessKey = 4;
	// S3 access key ID
	string AccessKeyID = 5;
	// If enabled, use http:// for the S3 endpoint instead of https://. This could
	// be useful in local dev/test environments while using an S3-compatible
	// backend storage, like Minio.
	bool Insecure = 6;
	// The signature version to use for authenticating against S3.
	// Supported values are: v4, v2
	string SignatureVersion = 7;

	SSEConfig SSE = 8;
	HTTPConfig HTTP = 9;
}

message SSEConfig {
	// Enable AWS Server Side Encryption. Supported values: SSE-KMS, SSE-S3
	string Type = 1;
	// KMS Key ID used to encrypt objects in S3
	string KMSKeyID = 2;
	// KMS Encryption Context used for object encryption. It expects a JSON formatted string.
	string KMSEncryptionContext = 3;
}

message HTTPConfig {
	// The time an idle connection will remain idle before closing.
	google.protobuf.Duration IdleConnTimeout = 1;
	// The amount of time the client will wait for a servers response headers.
	google.protobuf.Duration ResponseHeaderTimeout = 2;
	// If the client connects via HTTPS and this option is enabled, the client will accept any certificate and hostname.
	bool InsecureSkipVerify = 3;
	// Maximum time to wait for a TLS handshake. 0 means no limit.
	google.protobuf.Duration TLSHandshakeTimeout = 4;
	// The time to wait for a server's first response headers after fully writing the request headers if the request has an Expect header. 0 to send the request body immediately.
	google.protobuf.Duration ExpectContinueTimeout = 5;
	// Maximum number of idle (keep-alive) connections across all hosts. 0 means no limit.
	int32 MaxIdleConns = 6;
	// Maximum number of idle (keep-alive) connections to keep per-host. If 0, a built-in default value is used.
	int32 MaxIdleConnsPerHost = 7;
	// Maximum number of connections per host. 0 means no limit.
	int32 MaxConnsPerHost = 8;
}

message GCSStorageSpec {
	// GCS bucket name
	string BucketName = 1;
	// JSON representing either a Google Developers Console client_credentials.json file
	// or a Google Developers service account key file. If empty, fallback to Google default logic.
	string ServiceAccount = 2;
}

message AzureStorageSpec {
	// Azure storage account name
	string StorageAccountName = 1;
	// Azure storage account key
	string StorageAccountKey = 2;
	// Azure storage container name
	string ContainerName = 3;
	// Azure storage endpoint suffix without schema. The account name will be
	// prefixed to this value to create the FQDN
	string Endpoint = 4;
	// Number of retries for recoverable errors
	int32 MaxRetries = 5;
	// Azure storage MSI resource. Either this or account key must be set.
	string MSIResource = 6;
	// Azure storage MSI resource managed identity client Id. If not supplied system assigned identity is used
	string UserAssignedID = 7;

	HTTPConfig HTTP = 8;
}

message SwiftStorageSpec {
	// OpenStack Swift authentication API version. 0 to autodetect.
	int32 AuthVersion = 1;
	// OpenStack Swift authentication URL.
	string AuthURL = 2;
	// OpenStack Swift username.
	string Username = 3;
	// OpenStack Swift user's domain name.
	string UserDomainName = 4;
	// OpenStack Swift user's domain ID.
	string UserDomainID = 5;
	// OpenStack Swift user ID.
	string UserID = 6;
	// OpenStack Swift API key.
	string Password = 7;
	// OpenStack Swift user's domain ID.
	string DomainID = 8;
	// OpenStack Swift user's domain name.
	string DomainName = 9;
	// OpenStack Swift project ID (v2,v3 auth only).
	string ProjectID = 10;
	// OpenStack Swift project name (v2,v3 auth only).
	string ProjectName = 11;
	// ID of the OpenStack Swift project's domain (v3 auth only), only needed
	// if it differs the from user domain.
	string ProjectDomainID = 12;
	// Name of the OpenStack Swift project's domain (v3 auth only), only needed
	// if it differs from the user domain.
	string ProjectDomainName = 13;
	// OpenStack Swift Region to use (v2,v3 auth only).
	string RegionName = 14;
	// Name of the OpenStack Swift container to use. The container must already
	// exist.
	string ContainerName = 15;
	// Max number of times to retry failed requests.
	int32 MaxRetries = 16;
	// Time after which a connection attempt is aborted.
	google.protobuf.Duration ConnectTimeout = 17;
	// Time after which an idle request is aborted. The timeout watchdog is reset
	// each time some data is received, so the timeout triggers after X time no
	// data is received on a request.
	google.protobuf.Duration RequestTimeout = 18;
}

message FilesystemStorageSpec {
	// Local filesystem storage directory.
	string Directory = 1;
}
